[{"/home/ahsan/REACT APPS/wahnilogin/src/components/context/user1Context.js":"1","/home/ahsan/REACT APPS/wahnilogin/src/components/Registration/myAccount.js":"2","/home/ahsan/REACT APPS/wahnilogin/src/components/Quiz/quizPlay.js":"3","/home/ahsan/REACT APPS/wahnilogin/src/components/Profile/profile.js":"4","/home/ahsan/REACT APPS/wahnilogin/src/globalComponents/whiteLink.js":"5","/home/ahsan/REACT APPS/wahnilogin/src/components/Ranking/rankingScreen.js":"6","/home/ahsan/REACT APPS/wahnilogin/src/components/Quiz/questionCard.js":"7","/home/ahsan/REACT APPS/wahnilogin/src/reportWebVitals.js":"8","/home/ahsan/REACT APPS/wahnilogin/src/components/context/adminQcontext.js":"9","/home/ahsan/REACT APPS/wahnilogin/src/components/footer/footer.js":"10","/home/ahsan/REACT APPS/wahnilogin/src/components/home.js":"11","/home/ahsan/REACT APPS/wahnilogin/src/globalComponents/loader.js":"12","/home/ahsan/REACT APPS/wahnilogin/src/components/Layout/navbar.js":"13","/home/ahsan/REACT APPS/wahnilogin/src/components/questionsScreen/showQuestions.js":"14","/home/ahsan/REACT APPS/wahnilogin/src/index.js":"15","/home/ahsan/REACT APPS/wahnilogin/src/components/context/questionsContext.js":"16","/home/ahsan/REACT APPS/wahnilogin/src/components/questionsScreen/addDelQs.js":"17","/home/ahsan/REACT APPS/wahnilogin/src/App.js":"18","/home/ahsan/REACT APPS/wahnilogin/src/globalComponents/questionCardGlobal.js":"19"},{"size":3354,"mtime":1609169906235,"results":"20","hashOfConfig":"21"},{"size":5706,"mtime":1609179534410,"results":"22","hashOfConfig":"21"},{"size":3274,"mtime":1609170989970,"results":"23","hashOfConfig":"21"},{"size":7338,"mtime":1609222868219,"results":"24","hashOfConfig":"21"},{"size":385,"mtime":1609172644871,"results":"25","hashOfConfig":"21"},{"size":9637,"mtime":1609188526306,"results":"26","hashOfConfig":"21"},{"size":9914,"mtime":1609234875129,"results":"27","hashOfConfig":"21"},{"size":362,"mtime":499162500000,"results":"28","hashOfConfig":"21"},{"size":1112,"mtime":1608985205332,"results":"29","hashOfConfig":"21"},{"size":875,"mtime":1608642097608,"results":"30","hashOfConfig":"21"},{"size":1079,"mtime":1609227031668,"results":"31","hashOfConfig":"21"},{"size":305,"mtime":1608799122758,"results":"32","hashOfConfig":"21"},{"size":392,"mtime":1606762397887,"results":"33","hashOfConfig":"21"},{"size":4957,"mtime":1609248917363,"results":"34","hashOfConfig":"21"},{"size":500,"mtime":499162500000,"results":"35","hashOfConfig":"21"},{"size":4303,"mtime":1608131218727,"results":"36","hashOfConfig":"21"},{"size":8336,"mtime":1608980883742,"results":"37","hashOfConfig":"21"},{"size":1539,"mtime":1608877422162,"results":"38","hashOfConfig":"21"},{"size":2091,"mtime":1609235597549,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},"1of4z6f",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"43"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"43"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"65"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/ahsan/REACT APPS/wahnilogin/src/components/context/user1Context.js",["87","88","89","90","91"],"import React, { useContext, useEffect, useCallback, useState } from \"react\";\r\nimport firebase from \"../../firebase\";\r\n\r\nconst defaultUser = { loggedIn: false, email: \"\" };\r\nexport const UserContext = React.createContext({});\r\n\r\nconst UserProvider = UserContext.Provider;\r\nconst UserConsumer = UserContext.Consumer;\r\n\r\n// function onAuthStateChange(callback) {\r\n// make sure user register or login\r\n// }\r\n\r\n// user is added or logged in and sent to all the components of this site through this context\r\n\r\nexport function UserContextProvider(props) {\r\n  const [user, setUser] = useState({ loggedIn: false });\r\n  const [userScores, setUserScores] = useState(null);\r\n  const [userDetails, setUserDetails] = useState(null);\r\n  // loading\r\n  const [userLoading, setuserLoading] = useState(true);\r\n  const [userScoresLoading, setuserScoresLoading] = useState(false);\r\n  const [userDetailsLoading, setuserDetailsLoading] = useState(false);\r\n\r\n  function onAuthStateChange() {\r\n    setuserLoading(true);\r\n    setuserDetailsLoading(true);\r\n    setuserScoresLoading(true);\r\n\r\n    return firebase.auth().onAuthStateChanged((user1) => {\r\n      if (user1) {\r\n        setUser({\r\n          loggedIn: true,\r\n          email: user1.email,\r\n          name: user1.displayName,\r\n          id: user1.uid,\r\n          number: user1.phoneNumber,\r\n          photoURL: user1.photoURL,\r\n        });\r\n\r\n        setuserLoading(false);\r\n\r\n        firebase\r\n          .firestore()\r\n          .collection(`rankings`)\r\n          .where(\"uid\", \"==\", user1.uid)\r\n          .orderBy(\"attendedAt\", \"desc\")\r\n          .limit(1)\r\n          .onSnapshot(\r\n            (thisisquery) => {\r\n              const list = [];\r\n              thisisquery.forEach((doc) => {\r\n                list.push({ ...doc.data(), id: doc.id });\r\n              });\r\n              setUserScores(list);\r\n              setuserScoresLoading(false);\r\n            },\r\n            (err) => {\r\n              console.log(\"user last score unable to fetch\", err);\r\n              userScoresLoading(false);\r\n            }\r\n          );\r\n        // get user details\r\n        firebase\r\n          .firestore()\r\n          .doc(`users/${user1.uid}`)\r\n          .onSnapshot(\r\n            (docData) => {\r\n              const list = docData.data();\r\n              setUserDetails(list);\r\n              setuserDetailsLoading(false);\r\n            },\r\n            (err) => {\r\n              console.log(\"Unable to fetch user Details\", err);\r\n              setuserDetailsLoading(false);\r\n            }\r\n          );\r\n      } else {\r\n        setUser({ loggedIn: false });\r\n        setUserScores(null);\r\n        setUserDetails(null);\r\n        setuserLoading(false);\r\n        setuserDetailsLoading(false);\r\n        setuserScoresLoading(false);\r\n      }\r\n    });\r\n  }\r\n\r\n  // on useEffect user is authorized and user details are set and sent via context API to all components\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onAuthStateChange();\r\n\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <UserProvider\r\n      value={{\r\n        user: user,\r\n        userScores: userScores,\r\n        userDetails: userDetails,\r\n        userLoading: userLoading,\r\n        userScoresLoading: userScoresLoading,\r\n        userDetailsLoading: userDetailsLoading,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </UserProvider>\r\n  );\r\n}\r\n",["92","93"],"/home/ahsan/REACT APPS/wahnilogin/src/components/Registration/myAccount.js",[],["94","95"],"/home/ahsan/REACT APPS/wahnilogin/src/components/Quiz/quizPlay.js",["96","97","98","99"],"import { Redirect, Link } from \"react-router-dom\";\r\nimport React, { useState, useContext, useEffect } from \"react\";\r\nimport { UserContext } from \"../context/user1Context\";\r\nimport \"./quizScreen.css\";\r\nimport QuestionCard from \"./questionCard\";\r\nimport Loader from \"../../globalComponents/loader\";\r\nimport firebase from \"../../firebase\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction Home() {\r\n  // user details and scores\r\n  const userContextObject = useContext(UserContext);\r\n  const user = userContextObject.user;\r\n  const userScores = userContextObject.userScores;\r\n  const userScoresLoading = userContextObject.userScoresLoading;\r\n  const userDetailsLoading = userContextObject.userDetailsLoading\r\n  // shuffled questions\r\n  const [questions, setQuestions] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  // useHistory hook to redirect to '/Quiz' on login if registration is complete\r\n  const history = useHistory();\r\n\r\n  async function getQuestionsFromFirestore() {\r\n    await firebase\r\n      .firestore()\r\n      .collection(\"questions\")\r\n      .limit(5)\r\n      .get()\r\n      .then((thisisquery) => {\r\n        const list = [];\r\n        thisisquery.forEach((doc) => {\r\n          list.push({ ...doc.data(), id: doc.id });\r\n        });\r\n        setQuestions(list);\r\n        setIsLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        history.push(\"/Quiz\");\r\n        window.alert(\"couldnt fetch questions\");\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    // on component load, from the qs, array the questions are shuffled and randomized\r\n    setIsLoading(true);\r\n    getQuestionsFromFirestore();\r\n  }, []);\r\n\r\n  // question Index to be shown to the user\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  // calculate scores=\r\n  const [score, setScore] = useState(0);\r\n  // when timeOut or onSubmit the score is shown (showscore set to true)\r\n  const [showScore, setShowScore] = useState(false);\r\n\r\n  // fetch score hsitory of user from backend to send both score and percentage increase to backend for rankings\r\n\r\n  function nextQ(nextQuestion) {\r\n    setCurrentQuestion(nextQuestion);\r\n\r\n    // const nextQuestion = currentQuestion + 1;\r\n    // if (nextQuestion < questions.length) {\r\n    // }\r\n  }\r\n\r\n  function submitQ(score) {\r\n    setScore(score);\r\n    setShowScore(true);\r\n\r\n    // score with user id is sent to backEnd to store with new Date()\r\n  }\r\n\r\n  // if there is no user logged in this is redirected to myAccount for login or register\r\n  if (!user || !user.loggedIn ) return <Redirect to=\"/myAccount\" />;\r\n\r\n  if (user && !isLoading && !userScoresLoading && !userDetailsLoading) {\r\n    return (\r\n      <div className=\"body\">\r\n        <div className=\"questionDiv\">\r\n          <QuestionCard\r\n            currentQuestion={currentQuestion}\r\n            nextQ={nextQ}\r\n            submitQ={submitQ}\r\n            questions={questions}\r\n            user={user}\r\n            userScores={userScores}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  } else if ((user && isLoading) || (user && userScoresLoading) || (user && userDetailsLoading)) {\r\n    return (\r\n      <div className=\"flexCenter body\">\r\n        <Loader borderWidth=\"5px\" width=\"50px\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","/home/ahsan/REACT APPS/wahnilogin/src/components/Profile/profile.js",["100"],"/home/ahsan/REACT APPS/wahnilogin/src/globalComponents/whiteLink.js",["101","102"],"import React, { useState, useContext } from \"react\";\nimport './whiteLink.css'\n\nfunction WhiteLink(props) {\n  return (\n      <div onClick={props.onClick} className='linkContainer'>\n      <div\n        className=\"linkContain wahniColor\"\n      >\n          <p style={{ paddingLeft: \"25px\"}}>\n        {props.children}\n        </p>\n      </div>\n      </div>\n  );\n}\n\nexport default WhiteLink;\n","/home/ahsan/REACT APPS/wahnilogin/src/components/Ranking/rankingScreen.js",["103","104","105","106","107","108"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./rankingScreen.css\";\r\nimport \"../Registration/myAccount.css\";\r\nimport firebase from \"../../firebase\";\r\nimport Loader from \"../../globalComponents/loader\";\r\n\r\nfunction RankingScreen() {\r\n    //Logic Calculation to get Ranking of each types\r\n  const [topScores1, setTopScores1] = useState([]);\r\n  const [mostAttempts1, setMostAttempts1] = useState([]);\r\n  const [highestPercentage1, setHighestPercentage1] = useState([]);\r\n  // set loadings\r\n  const [topScoresLoading, setTopScoresLoading] = useState(true);\r\n  const [mostAttemptsLoading, setMostAttemptsLoading] = useState(true);\r\n  const [highestPercentageLoading, setHighestPercentageLoading] = useState(false);\r\n\r\n//   useEffect(() => {\r\n    \r\n//   }, []);\r\n\r\n  // on useEffect fetch user scores from the backEnd\r\n\r\n  const rankings = [\r\n    {\r\n      userid: \"11111\",\r\n      username: \"AAAAA\",\r\n      scores: [\r\n        {\r\n          submittedAt: 1,\r\n          score: \"5\",\r\n          percentageIncrease: \"25\",\r\n        },\r\n        {\r\n          submittedAt: 2,\r\n          score: \"10\",\r\n          percentageIncrease: \"50\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      userid: \"22222\",\r\n      username: \"BBBBB\",\r\n      scores: [\r\n        {\r\n          submittedAt: 1,\r\n          score: \"45\",\r\n          percentageIncrease: \"56\",\r\n        },\r\n        {\r\n          submittedAt: 2,\r\n          score: \"5\",\r\n          percentageIncrease: \"45\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      userid: \"33333\",\r\n      username: \"CCCCC\",\r\n      scores: [\r\n        {\r\n          submittedAt: 1,\r\n          score: \"23\",\r\n          percentageIncrease: \"45\",\r\n        },\r\n        {\r\n          submittedAt: 2,\r\n          score: \"56\",\r\n          percentageIncrease: \"13\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      userid: \"44444\",\r\n      username: \"DDDDD\",\r\n      scores: [\r\n        {\r\n          submittedAt: 1,\r\n          score: \"55\",\r\n          percentageIncrease: \"12\",\r\n        },\r\n        {\r\n          submittedAt: 2,\r\n          score: \"8\",\r\n          percentageIncrease: \"16\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      userid: \"55555\",\r\n      username: \"EEEEE\",\r\n      scores: [\r\n        {\r\n          submittedAt: 1,\r\n          score: \"63\",\r\n          percentageIncrease: \"32\",\r\n        },\r\n        {\r\n          submittedAt: 2,\r\n          score: \"80\",\r\n          percentageIncrease: \"60\",\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  //all these contribute to UI for the animation effect\r\n  //START\r\n  const [mostAttemptsClicked, setmostAttemptsClicked] = useState(false);\r\n  const [topScorersClicked, settopScorersClicked] = useState(false);\r\n  const [topPerformersCLicked, settopPerformersCLicked] = useState(false);\r\n\r\n  const loginContainer1 = topScorersClicked\r\n    ? \"rankCard rankCardHeight400 wahniBgColor\"\r\n    : \"rankCard rankCardHeight60\";\r\n  const headerContainer1 = topScorersClicked\r\n    ? \"rankHeaderDiv\"\r\n    : \"rankHeaderDiv rankHeaderDivClick wahniColor\";\r\n  const rankTable1 = topScorersClicked ? \"rankTable\" : \"hide-section1\";\r\n\r\n  const loginContainer2 = mostAttemptsClicked\r\n    ? \"rankCard rankCardHeight400 wahniBgColor\"\r\n    : \"rankCard rankCardHeight60\";\r\n  const headerContainer2 = mostAttemptsClicked\r\n    ? \"rankHeaderDiv\"\r\n    : \"rankHeaderDiv rankHeaderDivClick wahniColor\";\r\n  const rankTable2 = mostAttemptsClicked\r\n    ? \"rankTable\"\r\n    : \"rankTable hide-section1\";\r\n\r\n  const loginContainer3 = topPerformersCLicked\r\n    ? \"rankCard rankCardHeight400 wahniBgColor\"\r\n    : \"rankCard rankCardHeight60\";\r\n  const headerContainer3 = topPerformersCLicked\r\n    ? \"rankHeaderDiv\"\r\n    : \"rankHeaderDiv rankHeaderDivClick wahniColor\";\r\n  const rankTable3 = topPerformersCLicked\r\n    ? \"rankTable\"\r\n    : \"rankTable hide-section1\";\r\n\r\n  //Logic Calculation to get Ranking of each types\r\n  const [mostAttempts, setMostAttempts] = useState([]);\r\n  const [highestPercentage, setHighestPercentage] = useState([]);\r\n\r\n  function topScore() {\r\n    if(topScores1.length < 1) {\r\n        setTopScoresLoading(true)\r\n    firebase\r\n      .firestore()\r\n      .collection(\"rankings\")\r\n      .orderBy(\"score\", \"desc\")\r\n      .limit(5)\r\n      .onSnapshot(\r\n        (docData) => {\r\n          const list = [];\r\n          docData.forEach((doc) => {\r\n            list.push({ ...doc.data(), id: doc.id });\r\n          });\r\n          console.log(list);\r\n          setTopScoresLoading(false);\r\n          setTopScores1(list)\r\n        },\r\n        (err) => {\r\n          window.alert(\"Unable to get rankings\", err);\r\n        }\r\n      );\r\n    } else {\r\n        setTopScoresLoading(false)\r\n    }\r\n    \r\n}\r\n\r\n  function mostAttempt() {\r\n    if(mostAttempts1.length < 1) {\r\n        setMostAttemptsLoading(true)\r\n    firebase\r\n      .firestore()\r\n      .collection(\"rankings\")\r\n      .orderBy(\"attempt\", \"desc\")\r\n      .limit(5)\r\n      .onSnapshot(\r\n        (docData) => {\r\n          const list = [];\r\n          docData.forEach((doc) => {\r\n            list.push({ ...doc.data(), id: doc.id });\r\n          });\r\n          console.log(list);\r\n          setMostAttemptsLoading(false);\r\n          setMostAttempts1(list)\r\n        },\r\n        (err) => {\r\n          window.alert(\"Unable to get rankings\", err);\r\n        }\r\n      );\r\n    } else {\r\n        setMostAttemptsLoading(false)\r\n    }\r\n  }\r\n\r\n  function percentageHighest() {\r\n    if(highestPercentage1.length < 1) {\r\n        setHighestPercentageLoading(true)\r\n    firebase\r\n      .firestore()\r\n      .collection(\"rankings\")\r\n      .orderBy(\"perecentageIncrease\", \"desc\")\r\n      .limit(5)\r\n      .onSnapshot(\r\n        (docData) => {\r\n          const list = [];\r\n          docData.forEach((doc) => {\r\n            list.push({ ...doc.data(), id: doc.id });\r\n          });\r\n          console.log(list);\r\n          setHighestPercentageLoading(false);\r\n          setHighestPercentage1(list)\r\n        },\r\n        (err) => {\r\n          window.alert(\"Unable to get rankings\", err);\r\n        }\r\n      );\r\n    } else {\r\n        setHighestPercentageLoading(false)\r\n    }\r\n  }\r\n\r\n  //Click Handlers of each ranking Components\r\n  function handleTopScoreClick(e) {\r\n    settopScorersClicked(true);\r\n    setmostAttemptsClicked(false);\r\n    settopPerformersCLicked(false);\r\n    topScore();\r\n  }\r\n  function handleMostAttemptClick(e) {\r\n    settopScorersClicked(false);\r\n    settopPerformersCLicked(false);\r\n    setmostAttemptsClicked(true);\r\n    mostAttempt();\r\n  }\r\n  function handleTopPerformerClick(e) {\r\n    settopScorersClicked(false);\r\n    settopPerformersCLicked(true);\r\n    setmostAttemptsClicked(false);\r\n    percentageHighest();\r\n  }\r\n\r\n  // if user is logged in we show profile else we show register or login page\r\n\r\n  return (\r\n    <div className=\"body fontMontserrat\">\r\n      <div className={loginContainer1}>\r\n        {/* <div className='form'> */}\r\n        <div className={headerContainer1} onClick={handleTopScoreClick}>\r\n          <p>\r\n            Top <b>Scores</b>\r\n          </p>\r\n        </div>\r\n            \r\n            {topScoresLoading ? \r\n            <div className={rankTable1}>\r\n            <div className='flexCenter'>\r\n            <Loader borderWidth='5px' width='20px' />\r\n            </div>\r\n            </div>\r\n            :\r\n            <div className={rankTable1}>\r\n            {topScores1.map((data, index) => {\r\n                return (\r\n                  <div className=\"singleRankRow\">\r\n                    <div className=\"nameText rankTextStyle\">{data.username}</div>\r\n                    <div className=\"scoreText rankTextStyle\">{data.score}</div>\r\n                  </div>\r\n                );\r\n              })}    \r\n            </div>\r\n            }\r\n          \r\n        </div>\r\n      <div className={loginContainer2}>\r\n        {/* <div className='form'> */}\r\n        <div className={headerContainer2} onClick={handleMostAttemptClick}>\r\n          <p>\r\n            Most <b>Attempts</b>\r\n          </p>\r\n        </div>\r\n        {\r\n            mostAttemptsLoading ? \r\n            <div className={rankTable2}>\r\n            <div className='flexCenter'>\r\n            <Loader borderWidth='5px' width='20px' />\r\n            </div>\r\n            </div>\r\n\r\n            :\r\n\r\n            <div className={rankTable2}>\r\n            {mostAttempts1.map((data, index) => {\r\n                return (\r\n                  <div className=\"singleRankRow\">\r\n                    <div className=\"nameText rankTextStyle\">{data.username}</div>\r\n                    <div className=\"scoreText rankTextStyle\">{data.attempt}</div>\r\n                  </div>\r\n                );\r\n              })}    \r\n            </div>\r\n        }\r\n        {/* </div> */}\r\n      </div>\r\n\r\n      <div className={loginContainer3}>\r\n        {/* <div className='form'> */}\r\n        <div className={headerContainer3} onClick={handleTopPerformerClick}>\r\n          <p>\r\n            Top <b>Performers</b>\r\n          </p>\r\n        </div>\r\n        {\r\n            highestPercentageLoading ? \r\n            <div className={rankTable3}>\r\n            <div className='flexCenter'>\r\n            <Loader borderWidth='5px' width='20px' />\r\n            </div>\r\n            </div>\r\n\r\n            :\r\n\r\n            <div className={rankTable3}>\r\n            {highestPercentage1.map((data, index) => {\r\n                return (\r\n                  <div className=\"singleRankRow\">\r\n                    <div className=\"nameText rankTextStyle\">{data.username}</div>\r\n                    <div className=\"scoreText rankTextStyle\">{data.perecentageIncrease}</div>\r\n                  </div>\r\n                );\r\n              })}    \r\n            </div>\r\n        }\r\n        {/* </div> */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RankingScreen;\r\n","/home/ahsan/REACT APPS/wahnilogin/src/components/Quiz/questionCard.js",["109","110","111"],"/home/ahsan/REACT APPS/wahnilogin/src/reportWebVitals.js",[],"/home/ahsan/REACT APPS/wahnilogin/src/components/context/adminQcontext.js",["112","113","114"],"import React, { useContext, useEffect, useCallback, useState } from 'react';\nimport firebase from '../../firebase'\n\n\nexport const AdminQuestionContext = React.createContext({});\n\nconst AdminQuestionProvider = AdminQuestionContext.Provider;\nconst AdminQuestionConsumer = AdminQuestionContext.Consumer;\n\n// function onAuthStateChange(callback) {\n// make sure user register or login\n// }\n\n  // user is added or logged in and sent to all the components of this site through this context\n\n\nexport function AdminQuestionContextProvider(props) {\n\n    \n\n    // on useEffect fetch questions from the backend and save it in 'qs'\n\n    const [allQs, setAllQs] = useState([])\n\n    useEffect(() => {\n        firebase.firestore().collection('questions').onSnapshot((thisisquery) => {\n          const list = [];\n          thisisquery.forEach((doc) => {\n            list.push({ ...doc.data(), id: doc.id });\n          })\n          setAllQs(list);\n          // console.log(list)\n        })\n      }, []);\n  \n  return (\n    <AdminQuestionProvider value={[allQs, setAllQs]}>\n    {props.children}\n    </AdminQuestionProvider>\n  );\n}\n\n",["115","116"],"/home/ahsan/REACT APPS/wahnilogin/src/components/footer/footer.js",[],"/home/ahsan/REACT APPS/wahnilogin/src/components/home.js",["117","118","119","120","121"],"/home/ahsan/REACT APPS/wahnilogin/src/globalComponents/loader.js",["122","123"],"/home/ahsan/REACT APPS/wahnilogin/src/components/Layout/navbar.js",[],"/home/ahsan/REACT APPS/wahnilogin/src/components/questionsScreen/showQuestions.js",["124","125","126","127","128","129","130"],"/home/ahsan/REACT APPS/wahnilogin/src/index.js",[],"/home/ahsan/REACT APPS/wahnilogin/src/components/context/questionsContext.js",["131","132","133","134"],"/home/ahsan/REACT APPS/wahnilogin/src/components/questionsScreen/addDelQs.js",["135","136","137","138","139","140"],"/home/ahsan/REACT APPS/wahnilogin/src/App.js",["141"],"import MyAccount from './components/Registration/myAccount'\nimport { BrowserRouter, Switch, Route, HashRouter } from 'react-router-dom';\nimport Navbar from './components/Layout/navbar'\nimport Home from './components/home'\nimport QuizPlay from './components/Quiz/quizPlay'\nimport Quiz from './components/Quiz/quizScreen'\nimport RankingScreen from './components/Ranking/rankingScreen'\nimport { UserContextProvider } from './components/context/user1Context';\nimport { QuestionContextProvider } from './components/context/questionsContext';\nimport { AdminQuestionContextProvider } from './components/context/adminQcontext'\nimport AddDel from './components/questionsScreen/addDelQs'\nimport './components/styles/globalStyles.css'\nimport Footer from './components/footer/footer'\n\n\n\n\nfunction App() {\n  return (\n    \n    <HashRouter>\n      <Navbar />\n      <Switch>\n      <UserContextProvider>\n        <Route exact path='/' component={Home} />\n          <Route exact path='/myAccount' component={MyAccount} />\n          <Route exact path='/Quiz' component={Quiz} />\n\n          <QuestionContextProvider>\n          <Route exact path='/Quiz/play' component={QuizPlay} />\n\n          <AdminQuestionContextProvider>\n          <Route exact path='/Quiz/add' component={AddDel} />\n          </AdminQuestionContextProvider>\n          \n          </QuestionContextProvider>\n\n          <Route exact path='/Quiz/ranking' component={RankingScreen} />\n        </UserContextProvider>\n      </Switch>\n      <Footer />\n    </HashRouter>\n\n  );\n}\n\nexport default App;\n","/home/ahsan/REACT APPS/wahnilogin/src/globalComponents/questionCardGlobal.js",["142"],{"ruleId":"143","severity":1,"message":"144","line":1,"column":17,"nodeType":"145","messageId":"146","endLine":1,"endColumn":27},{"ruleId":"143","severity":1,"message":"147","line":1,"column":40,"nodeType":"145","messageId":"146","endLine":1,"endColumn":51},{"ruleId":"143","severity":1,"message":"148","line":4,"column":7,"nodeType":"145","messageId":"146","endLine":4,"endColumn":18},{"ruleId":"143","severity":1,"message":"149","line":8,"column":7,"nodeType":"145","messageId":"146","endLine":8,"endColumn":19},{"ruleId":"150","severity":1,"message":"151","line":97,"column":6,"nodeType":"152","endLine":97,"endColumn":8,"suggestions":"153"},{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","replacedBy":"157"},{"ruleId":"154","replacedBy":"158"},{"ruleId":"156","replacedBy":"159"},{"ruleId":"143","severity":1,"message":"160","line":1,"column":20,"nodeType":"145","messageId":"146","endLine":1,"endColumn":24},{"ruleId":"150","severity":1,"message":"161","line":47,"column":6,"nodeType":"152","endLine":47,"endColumn":8,"suggestions":"162"},{"ruleId":"143","severity":1,"message":"163","line":52,"column":10,"nodeType":"145","messageId":"146","endLine":52,"endColumn":15},{"ruleId":"143","severity":1,"message":"164","line":54,"column":10,"nodeType":"145","messageId":"146","endLine":54,"endColumn":19},{"ruleId":"150","severity":1,"message":"165","line":30,"column":6,"nodeType":"152","endLine":30,"endColumn":26,"suggestions":"166"},{"ruleId":"143","severity":1,"message":"167","line":1,"column":17,"nodeType":"145","messageId":"146","endLine":1,"endColumn":25},{"ruleId":"143","severity":1,"message":"144","line":1,"column":27,"nodeType":"145","messageId":"146","endLine":1,"endColumn":37},{"ruleId":"143","severity":1,"message":"168","line":1,"column":27,"nodeType":"145","messageId":"146","endLine":1,"endColumn":36},{"ruleId":"143","severity":1,"message":"169","line":23,"column":9,"nodeType":"145","messageId":"146","endLine":23,"endColumn":17},{"ruleId":"143","severity":1,"message":"170","line":141,"column":10,"nodeType":"145","messageId":"146","endLine":141,"endColumn":22},{"ruleId":"143","severity":1,"message":"171","line":141,"column":24,"nodeType":"145","messageId":"146","endLine":141,"endColumn":39},{"ruleId":"143","severity":1,"message":"172","line":142,"column":10,"nodeType":"145","messageId":"146","endLine":142,"endColumn":27},{"ruleId":"143","severity":1,"message":"173","line":142,"column":29,"nodeType":"145","messageId":"146","endLine":142,"endColumn":49},{"ruleId":"143","severity":1,"message":"144","line":1,"column":38,"nodeType":"145","messageId":"146","endLine":1,"endColumn":48},{"ruleId":"143","severity":1,"message":"174","line":13,"column":5,"nodeType":"145","messageId":"146","endLine":13,"endColumn":12},{"ruleId":"150","severity":1,"message":"175","line":58,"column":6,"nodeType":"152","endLine":58,"endColumn":8,"suggestions":"176"},{"ruleId":"143","severity":1,"message":"144","line":1,"column":17,"nodeType":"145","messageId":"146","endLine":1,"endColumn":27},{"ruleId":"143","severity":1,"message":"147","line":1,"column":40,"nodeType":"145","messageId":"146","endLine":1,"endColumn":51},{"ruleId":"143","severity":1,"message":"177","line":8,"column":7,"nodeType":"145","messageId":"146","endLine":8,"endColumn":28},{"ruleId":"154","replacedBy":"178"},{"ruleId":"156","replacedBy":"179"},{"ruleId":"143","severity":1,"message":"167","line":1,"column":17,"nodeType":"145","messageId":"146","endLine":1,"endColumn":25},{"ruleId":"143","severity":1,"message":"168","line":1,"column":39,"nodeType":"145","messageId":"146","endLine":1,"endColumn":48},{"ruleId":"143","severity":1,"message":"180","line":3,"column":8,"nodeType":"145","messageId":"146","endLine":3,"endColumn":14},{"ruleId":"143","severity":1,"message":"181","line":4,"column":8,"nodeType":"145","messageId":"146","endLine":4,"endColumn":13},{"ruleId":"143","severity":1,"message":"182","line":5,"column":8,"nodeType":"145","messageId":"146","endLine":5,"endColumn":16},{"ruleId":"143","severity":1,"message":"167","line":1,"column":17,"nodeType":"145","messageId":"146","endLine":1,"endColumn":25},{"ruleId":"143","severity":1,"message":"144","line":1,"column":27,"nodeType":"145","messageId":"146","endLine":1,"endColumn":37},{"ruleId":"143","severity":1,"message":"144","line":1,"column":26,"nodeType":"145","messageId":"146","endLine":1,"endColumn":36},{"ruleId":"143","severity":1,"message":"168","line":1,"column":38,"nodeType":"145","messageId":"146","endLine":1,"endColumn":47},{"ruleId":"143","severity":1,"message":"183","line":4,"column":8,"nodeType":"145","messageId":"146","endLine":4,"endColumn":26},{"ruleId":"143","severity":1,"message":"184","line":9,"column":20,"nodeType":"145","messageId":"146","endLine":9,"endColumn":28},{"ruleId":"143","severity":1,"message":"185","line":50,"column":11,"nodeType":"145","messageId":"146","endLine":50,"endColumn":21},{"ruleId":"143","severity":1,"message":"186","line":57,"column":9,"nodeType":"145","messageId":"146","endLine":57,"endColumn":24},{"ruleId":"143","severity":1,"message":"187","line":65,"column":14,"nodeType":"145","messageId":"146","endLine":65,"endColumn":25},{"ruleId":"143","severity":1,"message":"144","line":1,"column":17,"nodeType":"145","messageId":"146","endLine":1,"endColumn":27},{"ruleId":"143","severity":1,"message":"168","line":1,"column":29,"nodeType":"145","messageId":"146","endLine":1,"endColumn":38},{"ruleId":"143","severity":1,"message":"147","line":1,"column":40,"nodeType":"145","messageId":"146","endLine":1,"endColumn":51},{"ruleId":"143","severity":1,"message":"188","line":7,"column":7,"nodeType":"145","messageId":"146","endLine":7,"endColumn":23},{"ruleId":"143","severity":1,"message":"167","line":1,"column":17,"nodeType":"145","messageId":"146","endLine":1,"endColumn":25},{"ruleId":"143","severity":1,"message":"168","line":1,"column":39,"nodeType":"145","messageId":"146","endLine":1,"endColumn":48},{"ruleId":"143","severity":1,"message":"189","line":5,"column":10,"nodeType":"145","messageId":"146","endLine":5,"endColumn":25},{"ruleId":"143","severity":1,"message":"190","line":120,"column":17,"nodeType":"145","messageId":"146","endLine":120,"endColumn":22},{"ruleId":"143","severity":1,"message":"191","line":121,"column":17,"nodeType":"145","messageId":"146","endLine":121,"endColumn":29},{"ruleId":"143","severity":1,"message":"192","line":125,"column":17,"nodeType":"145","messageId":"146","endLine":125,"endColumn":28},{"ruleId":"143","severity":1,"message":"193","line":2,"column":10,"nodeType":"145","messageId":"146","endLine":2,"endColumn":23},{"ruleId":"143","severity":1,"message":"194","line":1,"column":38,"nodeType":"145","messageId":"146","endLine":1,"endColumn":48},"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'useCallback' is defined but never used.","'defaultUser' is assigned a value but never used.","'UserConsumer' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'onAuthStateChange'. Either include it or remove the dependency array.","ArrayExpression",["195"],"no-native-reassign",["196"],"no-negated-in-lhs",["197"],["196"],["197"],"'Link' is defined but never used.","React Hook useEffect has a missing dependency: 'getQuestionsFromFirestore'. Either include it or remove the dependency array.",["198"],"'score' is assigned a value but never used.","'showScore' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'user' and 'userDetails'. Either include them or remove the dependency array.",["199"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'rankings' is assigned a value but never used.","'mostAttempts' is assigned a value but never used.","'setMostAttempts' is assigned a value but never used.","'highestPercentage' is assigned a value but never used.","'setHighestPercentage' is assigned a value but never used.","'submitQ' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'timeOver'. Either include it or remove the dependency array.",["200"],"'AdminQuestionConsumer' is assigned a value but never used.",["196"],["197"],"'Loader' is defined but never used.","'axios' is defined but never used.","'firebase' is defined but never used.","'QuestionCardGlobal' is defined but never used.","'setAllQs' is assigned a value but never used.","'colorConst' is assigned a value but never used.","'fontWeightConst' is assigned a value but never used.","'AnswersView' is defined but never used.","'QuestionConsumer' is assigned a value but never used.","'QuestionContext' is defined but never used.","'dirty' is assigned a value but never used.","'isSubmitting' is assigned a value but never used.","'handleReset' is assigned a value but never used.","'BrowserRouter' is defined but never used.","'useReducer' is defined but never used.",{"desc":"201","fix":"202"},"no-global-assign","no-unsafe-negation",{"desc":"203","fix":"204"},{"desc":"205","fix":"206"},{"desc":"207","fix":"208"},"Update the dependencies array to be: [onAuthStateChange]",{"range":"209","text":"210"},"Update the dependencies array to be: [getQuestionsFromFirestore]",{"range":"211","text":"212"},"Update the dependencies array to be: [user, userDetails, userDetailsLoading]",{"range":"213","text":"214"},"Update the dependencies array to be: [timeOver]",{"range":"215","text":"216"},[3008,3010],"[onAuthStateChange]",[1644,1646],"[getQuestionsFromFirestore]",[1237,1257],"[user, userDetails, userDetailsLoading]",[1565,1567],"[timeOver]"]