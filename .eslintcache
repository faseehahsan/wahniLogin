[{"/home/ahsan/REACT APPS/wahnilogin/src/App.js":"1","/home/ahsan/REACT APPS/wahnilogin/src/components/Registration/myAccount.js":"2","/home/ahsan/REACT APPS/wahnilogin/src/components/Quiz/quizScreen.js":"3","/home/ahsan/REACT APPS/wahnilogin/src/components/context/user1Context.js":"4","/home/ahsan/REACT APPS/wahnilogin/src/firebase.js":"5","/home/ahsan/REACT APPS/wahnilogin/src/components/Quiz/timer.js":"6","/home/ahsan/REACT APPS/wahnilogin/src/components/Profile/profile.js":"7","/home/ahsan/REACT APPS/wahnilogin/src/reportWebVitals.js":"8","/home/ahsan/REACT APPS/wahnilogin/src/components/home.js":"9","/home/ahsan/REACT APPS/wahnilogin/src/components/Ranking/rankingScreen.js":"10","/home/ahsan/REACT APPS/wahnilogin/src/components/Layout/navbar.js":"11","/home/ahsan/REACT APPS/wahnilogin/src/components/Quiz/questionCard.js":"12","/home/ahsan/REACT APPS/wahnilogin/src/index.js":"13","/home/ahsan/REACT APPS/wahnilogin/src/components/Quiz/quizPlay.js":"14","/home/ahsan/REACT APPS/wahnilogin/src/components/context/questionsContext.js":"15","/home/ahsan/REACT APPS/wahnilogin/src/components/questionsScreen/addDelQs.js":"16","/home/ahsan/REACT APPS/wahnilogin/src/components/questionsScreen/showQuestions.js":"17","/home/ahsan/REACT APPS/wahnilogin/src/components/footer/footer.js":"18","/home/ahsan/REACT APPS/wahnilogin/src/globalComponents/loader.js":"19","/home/ahsan/REACT APPS/wahnilogin/src/components/context/adminQcontext.js":"20"},{"size":1539,"mtime":1608877422162,"results":"21","hashOfConfig":"22"},{"size":5542,"mtime":1608981335493,"results":"23","hashOfConfig":"22"},{"size":1944,"mtime":1608984338472,"results":"24","hashOfConfig":"22"},{"size":2012,"mtime":1608981002413,"results":"25","hashOfConfig":"22"},{"size":574,"mtime":1608140162817,"results":"26","hashOfConfig":"22"},{"size":792,"mtime":1608621861266,"results":"27","hashOfConfig":"22"},{"size":5415,"mtime":1608980900720,"results":"28","hashOfConfig":"22"},{"size":362,"mtime":499162500000,"results":"29","hashOfConfig":"22"},{"size":1020,"mtime":1608981171827,"results":"30","hashOfConfig":"22"},{"size":9589,"mtime":1608798475314,"results":"31","hashOfConfig":"22"},{"size":392,"mtime":1606762397887,"results":"32","hashOfConfig":"22"},{"size":8425,"mtime":1608984179533,"results":"33","hashOfConfig":"22"},{"size":500,"mtime":499162500000,"results":"34","hashOfConfig":"22"},{"size":3031,"mtime":1608983698967,"results":"35","hashOfConfig":"22"},{"size":4303,"mtime":1608131218727,"results":"36","hashOfConfig":"22"},{"size":8336,"mtime":1608980883742,"results":"37","hashOfConfig":"22"},{"size":2841,"mtime":1608980826705,"results":"38","hashOfConfig":"22"},{"size":875,"mtime":1608642097608,"results":"39","hashOfConfig":"22"},{"size":305,"mtime":1608799122758,"results":"40","hashOfConfig":"22"},{"size":1109,"mtime":1608884196407,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},"1of4z6f",{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"53"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"53"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"53"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"53"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"53"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"56"},"/home/ahsan/REACT APPS/wahnilogin/src/App.js",["98"],"import MyAccount from './components/Registration/myAccount'\nimport { BrowserRouter, Switch, Route, HashRouter } from 'react-router-dom';\nimport Navbar from './components/Layout/navbar'\nimport Home from './components/home'\nimport QuizPlay from './components/Quiz/quizPlay'\nimport Quiz from './components/Quiz/quizScreen'\nimport RankingScreen from './components/Ranking/rankingScreen'\nimport { UserContextProvider } from './components/context/user1Context';\nimport { QuestionContextProvider } from './components/context/questionsContext';\nimport { AdminQuestionContextProvider } from './components/context/adminQcontext'\nimport AddDel from './components/questionsScreen/addDelQs'\nimport './components/styles/globalStyles.css'\nimport Footer from './components/footer/footer'\n\n\n\n\nfunction App() {\n  return (\n    \n    <HashRouter>\n      <Navbar />\n      <Switch>\n      <UserContextProvider>\n        <Route exact path='/' component={Home} />\n          <Route exact path='/myAccount' component={MyAccount} />\n          <Route exact path='/Quiz' component={Quiz} />\n\n          <QuestionContextProvider>\n          <Route exact path='/Quiz/play' component={QuizPlay} />\n\n          <AdminQuestionContextProvider>\n          <Route exact path='/Quiz/add' component={AddDel} />\n          </AdminQuestionContextProvider>\n          \n          </QuestionContextProvider>\n\n          <Route exact path='/Quiz/ranking' component={RankingScreen} />\n        </UserContextProvider>\n      </Switch>\n      <Footer />\n    </HashRouter>\n\n  );\n}\n\nexport default App;\n",["99","100"],"/home/ahsan/REACT APPS/wahnilogin/src/components/Registration/myAccount.js",["101"],"/home/ahsan/REACT APPS/wahnilogin/src/components/Quiz/quizScreen.js",[],"/home/ahsan/REACT APPS/wahnilogin/src/components/context/user1Context.js",["102","103","104","105"],"import React, { useContext, useEffect, useCallback, useState } from 'react';\r\nimport firebase from '../../firebase'\r\n\r\n\r\nconst defaultUser = { loggedIn: false, email: \"\" };\r\nexport const UserContext = React.createContext({});\r\n\r\nconst UserProvider = UserContext.Provider;\r\nconst UserConsumer = UserContext.Consumer;\r\n\r\n// function onAuthStateChange(callback) {\r\n// make sure user register or login\r\n// }\r\n\r\n  // user is added or logged in and sent to all the components of this site through this context\r\n\r\n\r\nexport function UserContextProvider(props) {\r\n\r\n  const [user, setUser] = useState({ loggedIn: false });\r\n  const [userScores, setUserScores] = useState(null);\r\n\r\n  function onAuthStateChange() {\r\n    return firebase.auth().onAuthStateChanged(user1 => {\r\n      if (user1) {\r\n\r\n        setUser({ loggedIn: true, \r\n                  email: user1.email, \r\n                  name: user1.displayName, \r\n                  id: user1.uid, \r\n                  number: user1.phoneNumber,\r\n                  photoURL: user1.photoURL });\r\n        \r\n        firebase\r\n        .firestore()\r\n        .collection(`users/${user1.uid}/scores`)\r\n        .orderBy('attendedAt', 'desc')\r\n        .limit(1)\r\n        .onSnapshot((thisisquery) => {\r\n          const list = [];\r\n          thisisquery.forEach((doc) => {\r\n            list.push({ ...doc.data(), id: doc.id });\r\n          })\r\n          setUserScores(list);\r\n        })\r\n        .catch(err => {\r\n          console.log('Unable to fetch user last score:', err)\r\n        })\r\n      } else {\r\n        setUser({ loggedIn: false });\r\n        setUserScores(null)\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  // on useEffect user is authorized and user details are set and sent via context API to all components\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onAuthStateChange();\r\n\r\n    return () => {\r\n      unsubscribe();\r\n    }\r\n  }, []);\r\n  \r\n  return (\r\n    <UserProvider value={{'user': user, 'userScores': userScores}}>\r\n    {props.children}      \r\n    </UserProvider>\r\n  );\r\n}\r\n\r\n",["106","107"],"/home/ahsan/REACT APPS/wahnilogin/src/firebase.js",[],["108","109"],"/home/ahsan/REACT APPS/wahnilogin/src/components/Quiz/timer.js",["110"],"import React, { useState, useEffect } from 'react'\r\n\r\nfunction Timer(props) {\r\n\r\n    const [duration, setDuration] = useState(30);\r\n\r\n    const { timeOver, setTimeOver } = props;\r\n\r\n    useEffect(() => {\r\n       \r\n            const interval = setInterval(() => {\r\n                if (!timeOver) {\r\n                    setDuration(duration => duration - 1);\r\n                }\r\n    \r\n              }, 1000);\r\n\r\n              setTimeout(\r\n                  () => {\r\n                      setTimeOver(true)\r\n                      setDuration('TIME OUT')\r\n                        }\r\n                , 30000);\r\n\r\n            return () => clearInterval(interval);\r\n        \r\n      }, [timeOver]);\r\n\r\n\r\n  return (\r\n   \r\n    <div>\r\n        {duration}\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default Timer;\r\n","/home/ahsan/REACT APPS/wahnilogin/src/components/Profile/profile.js",["111","112","113","114","115","116","117","118"],"import React, {useState, useEffect} from 'react';\r\nimport firebase from '../../firebase'\r\n// import * as firebase from 'firebase';\r\n\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport \"../questionsScreen/questionScreen.css\";\r\n\r\nfunction Profile(props) {\r\n\r\n  \r\n  const { user, logout, completeProfile }  = props;\r\n  const [url, setUrl] = useState();\r\n  const [imageLoading, setImageLoading] = useState(true);\r\n\r\n\r\n  useEffect(() => {\r\n    setImageLoading(true);\r\n    // check if user object has a url for profile image\r\n    if(user.photoURL !== null) {\r\n    setUrl(user.photoURL)\r\n    } else {\r\n      setUrl('https://image.flaticon.com/icons/png/512/2922/2922532.png')\r\n    };\r\n    setImageLoading(false)\r\n  }, [])\r\n\r\n  function profilePicUpdate(file) {\r\n    // to update the profile picture\r\n    setImageLoading(true);\r\n    firebase.storage().ref('users/' + user.id + '.jpg').put(file).then(ell => {\r\n      // get the url of the image uploaded to firebase\r\n      getURL()\r\n    }).catch(err => {\r\n      alert(err);\r\n      setImageLoading(false)\r\n    })\r\n  }\r\n\r\n  function getURL() {\r\n    // get the url of the image uploaded to firebase\r\n    firebase.storage().ref().child(\"users/\" + user.id + '.jpg').getDownloadURL().then(url1 => {\r\n      setUrl(url1);\r\n      setImageLoading(false);\r\n      firebase.auth().currentUser.updateProfile({\r\n        photoURL: url1\r\n      });\r\n    }).catch(err => {\r\n      alert(err);\r\n      setImageLoading(false)\r\n    })\r\n  }\r\n\r\n  //check if user object has a name\r\n  //if NO name, complete registration form is shown else Profile is shown\r\n  \r\n  if (user && user.name === null || user && user.name === '') {\r\n    return(\r\n      <div className='body'>\r\n      <div className='login-container card1 responsiveWidth profileContainer'>\r\n        <div className='form'>\r\n        <div className='profileImageContainer'>\r\n        {\r\n          imageLoading ? <img src='https://media4.giphy.com/media/3oEjI6SIIHBdRxXI40/giphy.gif' alt=\"\" /> : <img src={url} alt=\"\" />\r\n\r\n        }\r\n        \r\n        <input type='file' title='hello' id='files' onChange={e => profilePicUpdate(e.target.files[0])} />\r\n        <label for=\"files\" className='labelForFile'>Edit Avatar</label>\r\n\r\n        </div>\r\n\r\n        <div className='profileDetailsContainer'>\r\n        <h2 style={{alignSelf:'center'}}>Complete Your Profile</h2>\r\n\r\n        <Formik\r\n            initialValues={{\r\n              nameInput: \"\",\r\n            }}\r\n            onSubmit={(values) => completeProfile(values.nameInput)}\r\n            validationSchema={Yup.object().shape({\r\n              nameInput: Yup.string().required(\"*this is a required field\"),\r\n            })}\r\n          >\r\n            {(props) => {\r\n              const {\r\n                values,\r\n                touched,\r\n                errors,\r\n                dirty,\r\n                isSubmitting,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n                handleReset,\r\n              } = props;\r\n              return (\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className='labelClass'>Enter Name</div>\r\n\r\n                  <input\r\n                    id=\"nameInput\"\r\n                    placeholder=\"e.g. John\"\r\n                    type=\"text\"\r\n                    value={values.nameInput}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={\r\n                      errors.nameInput && touched.nameInput\r\n                        ? \"inputStyle error\"\r\n                        : \"inputStyle\"\r\n                    }\r\n                  />\r\n                  <div style={{marginLeft: '8%'}}>\r\n                  {errors.nameInput && touched.nameInput && (\r\n                    <div className=\"input-feedback\">{errors.nameInput}</div>\r\n                  )}\r\n                  </div>\r\n\r\n                  \r\n                  <div style={{display:'flex', justifyContent:'center', paddingTop:'20px'}}>\r\n                  <button type=\"submit\" className='submitButton1'>SAVE PROFILE</button>\r\n                  </div>\r\n                </form>\r\n              );\r\n            }}\r\n          </Formik>\r\n\r\n        </div>\r\n\r\n        </div>\r\n      </div>\r\n  </div>\r\n    )\r\n  } else {\r\n    return (\r\n      <div className='body'>\r\n      <div className='login-container card1 loginresponsive profileContainer'>\r\n        <div className='form'>\r\n        <div className='profileImageContainer'>\r\n        {\r\n          imageLoading ? <img src='https://media4.giphy.com/media/3oEjI6SIIHBdRxXI40/giphy.gif' alt=\"\" /> : <img src={url} alt=\"\" />\r\n\r\n        }\r\n        \r\n        <input type='file' title='hello' id='files' onChange={e => profilePicUpdate(e.target.files[0])} />\r\n        <label for=\"files\" className='labelForFile'>Edit Avatar</label>\r\n\r\n        </div>\r\n        <div className='profileDetailsContainer'>\r\n        <div>\r\n        <p className='profileText'>Name: {user.name}</p>\r\n        <p className='profileText'>Phone No.: {user.number}</p>\r\n        <p className='profileText'>No. of Attempts: </p>\r\n        <p className='profileText'>Highest Score: </p>\r\n        <div className='flexCenter'>\r\n        <div className='button1' type='button' onClick={() => logout()}>LOGOUT</div>\r\n        </div>\r\n\r\n        </div>\r\n\r\n        </div>\r\n\r\n        </div>\r\n      </div>\r\n  </div>\r\n    );\r\n\r\n  }\r\n\r\n}\r\n\r\nexport default Profile;\r\n","/home/ahsan/REACT APPS/wahnilogin/src/reportWebVitals.js",[],["119","120"],"/home/ahsan/REACT APPS/wahnilogin/src/components/home.js",["121","122","123","124","125"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { UserContext } from \"./context/user1Context\";\r\nimport Loader from \"../globalComponents/loader\";\r\nimport axios from \"axios\";\r\nimport firebase from '../firebase'\r\n\r\nfunction Home() {\r\n  const userContextObject = useContext(UserContext);\r\n  const [array1, setarray1] = useState([])\r\n\r\n  // useEffect(() => {\r\n  //   firebase.firestore().collection('questions').onSnapshot((thisisquery) => {\r\n  //     const list = [];\r\n  //     thisisquery.forEach((doc) => {\r\n  //       list.push({ ...doc.data(), id: doc.id });\r\n  //     })\r\n  //     setarray1(list);\r\n  //   })\r\n  // }, []);\r\n\r\n  async function clickHandler() {\r\n    console.log('this is score: ',userContextObject.userScores)\r\n    console.log('this is USER: ',userContextObject.user)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>WahniHome</h1>\r\n      <Loader width=\"20px\" borderWidth=\"5px\" />\r\n      <button onClick={() => clickHandler()}>fetch</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","/home/ahsan/REACT APPS/wahnilogin/src/components/Ranking/rankingScreen.js",["126","127","128","129"],"import React, { useState } from 'react'\r\nimport './rankingScreen.css'\r\nimport '../Registration/myAccount.css'\r\n\r\nfunction RankingScreen() {\r\n\r\n    // on useEffect fetch user scores from the backEnd\r\n\r\n    const rankings = [\r\n        {\r\n            userid: '11111',\r\n            username: 'AAAAA',\r\n            scores: [\r\n                {\r\n                    submittedAt: 1,\r\n                    score: '5',\r\n                    percentageIncrease: '25'\r\n\r\n                },\r\n                {\r\n                    submittedAt: 2,\r\n                    score: '10',\r\n                    percentageIncrease: '50'\r\n\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            userid: '22222',\r\n            username: 'BBBBB',\r\n            scores: [\r\n                {\r\n                    submittedAt: 1,\r\n                    score: '45',\r\n                    percentageIncrease: '56'\r\n\r\n                },\r\n                {\r\n                    submittedAt: 2,\r\n                    score: '5',\r\n                    percentageIncrease: '45'\r\n\r\n                },\r\n            ]\r\n        },\r\n        {\r\n            userid: '33333',\r\n            username: 'CCCCC',\r\n            scores: [\r\n                {\r\n                    submittedAt: 1,\r\n                    score: '23',\r\n                    percentageIncrease: '45'\r\n\r\n                },\r\n                {\r\n                    submittedAt: 2,\r\n                    score: '56',\r\n                    percentageIncrease: '13'\r\n\r\n                },\r\n            ]\r\n        },\r\n        {\r\n            userid: '44444',\r\n            username: 'DDDDD',\r\n            scores: [\r\n                {\r\n                    submittedAt: 1,\r\n                    score: '55',\r\n                    percentageIncrease: '12'\r\n                },\r\n                {\r\n                    submittedAt: 2,\r\n                    score: '8',\r\n                    percentageIncrease: '16'\r\n\r\n                },\r\n            ]\r\n        },\r\n        {\r\n            userid: '55555',\r\n            username: 'EEEEE',\r\n            scores: [\r\n                {\r\n                    submittedAt: 1,\r\n                    score: '63',\r\n                    percentageIncrease: '32'\r\n                },\r\n                {\r\n                    submittedAt: 2,\r\n                    score: '80',\r\n                    percentageIncrease: '60'\r\n                },\r\n            ]\r\n        },\r\n\r\n    ]\r\n   \r\n    //all these contribute to UI for the animation effect\r\n    //START\r\n    const [mostAttemptsClicked, setmostAttemptsClicked] = useState(false);\r\n    const [topScorersClicked, settopScorersClicked] = useState(false);\r\n    const [topPerformersCLicked, settopPerformersCLicked] = useState(false);\r\n  \r\n    const loginContainer1 = topScorersClicked ? 'rankCard rankCardHeight400': 'rankCard rankCardHeight60';\r\n    const headerContainer1 = topScorersClicked ? 'rankHeaderDiv': 'rankHeaderDiv rankHeaderDivClick';\r\n    const rankTable1 = topScorersClicked ? 'rankTable' : 'hide-section1';\r\n  \r\n    const loginContainer2 = mostAttemptsClicked ? 'rankCard rankCardHeight400': 'rankCard rankCardHeight60';\r\n    const headerContainer2 = mostAttemptsClicked ? 'rankHeaderDiv': 'rankHeaderDiv rankHeaderDivClick';\r\n    const rankTable2 = mostAttemptsClicked ? 'rankTable' : 'rankTable hide-section1';\r\n\r\n    const loginContainer3 = topPerformersCLicked ? 'rankCard rankCardHeight400': 'rankCard rankCardHeight60';\r\n    const headerContainer3 = topPerformersCLicked ? 'rankHeaderDiv': 'rankHeaderDiv rankHeaderDivClick';\r\n    const rankTable3 = topPerformersCLicked ? 'rankTable' : 'rankTable hide-section1';\r\n\r\n    //Logic Calculation to get Ranking of each types\r\n    const [topScores, setTopScores] = useState([]);\r\n    const [mostAttempts, setMostAttempts] = useState([]);\r\n    const [highestPercentage, setHighestPercentage] = useState([]);\r\n\r\n    function topScore() {\r\n        const newArray = [];\r\n        rankings.map(data => {\r\n            data.scores.map(data1 => {\r\n                newArray.push(\r\n                    {\r\n                        name: data.username,\r\n                        score: data1.score\r\n                    }\r\n                )\r\n            })\r\n        })\r\n        setTopScores(newArray.sort((a,b) => (parseInt(b.score) > parseInt(a.score)) ? 1 : -1))\r\n    }\r\n\r\n    function mostAttempt() {\r\n        const newArray = [];\r\n        rankings.map(data => newArray.push({\r\n            name: data.username,\r\n            attempts: data.scores.length\r\n        }))\r\n        setMostAttempts(newArray.sort((a,b) => (parseInt(b.attempts) > parseInt(a.attempts)) ? 1 : -1))\r\n    }\r\n\r\n    function percentageHighest() {\r\n        const newArray = [];\r\n        rankings.map(data => {\r\n            data.scores.map(data1 => {\r\n                newArray.push(\r\n                    {\r\n                        name: data.username,\r\n                        percentage: data1.percentageIncrease\r\n                    }\r\n                )\r\n            })\r\n        })\r\n        setHighestPercentage(newArray.sort((a,b) => (parseInt(b.percentage) > parseInt(a.percentage)) ? 1 : -1))\r\n    }\r\n\r\n    //Click Handlers of each ranking Components\r\n    function handleTopScoreClick(e) {\r\n        settopScorersClicked(true)\r\n        setmostAttemptsClicked(false)\r\n        settopPerformersCLicked(false)\r\n        topScore()\r\n      }\r\n      function handleMostAttemptClick(e) {\r\n        settopScorersClicked(false)\r\n        settopPerformersCLicked(false)\r\n        setmostAttemptsClicked(true)\r\n        mostAttempt()\r\n      }\r\n      function handleTopPerformerClick(e) {\r\n        settopScorersClicked(false)\r\n        settopPerformersCLicked(true)\r\n        setmostAttemptsClicked(false)\r\n        percentageHighest()\r\n      }\r\n\r\n    \r\n  \r\n    // if user is logged in we show profile else we show register or login page\r\n  \r\n    \r\n      return (\r\n        <div className='body fontMontserrat'>\r\n          <div className={loginContainer1}>\r\n            {/* <div className='form'> */}\r\n            <div className={headerContainer1} onClick={handleTopScoreClick}>\r\n                <p className='wahniColor'>Top <b>Scores</b></p>\r\n                </div>\r\n              <div className={rankTable1}>\r\n              <div className='singleRankRow'>\r\n                  <div className='rankText rankTextStyle'>Rank</div>\r\n                  <div className='nameText rankTextStyle'>Name</div>\r\n                  <div className='scoreText rankTextStyle'>Score</div>\r\n                  </div>\r\n              \r\n                  {\r\n                      topScores.slice(0,5).map((data, index) => {\r\n                          return (\r\n                <div className='singleRankRow'>\r\n                  <div className='rankText rankTextStyle'>{index + 1}</div>\r\n                  <div className='nameText rankTextStyle'>{data.name}</div>\r\n                  <div className='scoreText rankTextStyle'>{data.score}</div>\r\n                  \r\n                  </div>\r\n                          )\r\n                      })\r\n                  }\r\n              {/* </div> */}\r\n            </div>\r\n\r\n\r\n          </div>\r\n          <div className={loginContainer2}>\r\n            {/* <div className='form'> */}\r\n            <div className={headerContainer2} onClick={handleMostAttemptClick}>\r\n            <p className='wahniColor'>Most <b>Attempts</b></p>\r\n                </div>\r\n              <div className={rankTable2}>\r\n              <div className='singleRankRow'>\r\n                  <div className='rankText rankTextStyle'>Rank</div>\r\n                  <div className='nameText rankTextStyle'>Name</div>\r\n                  <div className='scoreText rankTextStyle'>Attempts</div>\r\n                  </div>\r\n                  {\r\n                      mostAttempts.slice(0,5).map((data, index) => {\r\n                          return (\r\n                <div className='singleRankRow'>\r\n                  <div className='rankText rankTextStyle'>{index + 1}</div>\r\n                  <div className='nameText rankTextStyle'>{data.name}</div>\r\n                  <div className='scoreText rankTextStyle'>{data.attempts}</div>\r\n                  \r\n                  </div>\r\n                          )\r\n                      })\r\n                  }\r\n              </div>\r\n            {/* </div> */}\r\n          </div>\r\n\r\n          <div className={loginContainer3}>\r\n            {/* <div className='form'> */}\r\n            <div className={headerContainer3} onClick={handleTopPerformerClick}>\r\n            <p className='wahniColor'>Top <b>Performers</b></p>\r\n\r\n                </div>\r\n              <div className={rankTable3}>\r\n              <div className='singleRankRow'>\r\n                  <div className='rankText rankTextStyle'>Rank</div>\r\n                  <div className='nameText rankTextStyle'>Name</div>\r\n                  <div className='scoreText rankTextStyle'>Improvement</div>\r\n                  </div>\r\n                  {\r\n                      highestPercentage.slice(0,5).map((data, index) => {\r\n                          return (\r\n                <div className='singleRankRow'>\r\n                  <div className='rankText rankTextStyle'>{index + 1}</div>\r\n                  <div className='nameText rankTextStyle'>{data.name}</div>\r\n                  <div className='scoreText rankTextStyle'>{data.percentage}</div>\r\n                  \r\n                  </div>\r\n                          )\r\n                      })\r\n                  }\r\n              </div>\r\n            {/* </div> */}\r\n          </div>\r\n    \r\n          \r\n        </div>\r\n    \r\n      );\r\n}\r\n\r\n\r\nexport default RankingScreen","/home/ahsan/REACT APPS/wahnilogin/src/components/Layout/navbar.js",[],["130","131"],"/home/ahsan/REACT APPS/wahnilogin/src/components/Quiz/questionCard.js",["132","133","134"],"/home/ahsan/REACT APPS/wahnilogin/src/index.js",[],"/home/ahsan/REACT APPS/wahnilogin/src/components/Quiz/quizPlay.js",["135","136","137","138"],"import { Redirect, Link } from \"react-router-dom\";\r\nimport React, { useState, useContext, useEffect } from \"react\";\r\nimport { UserContext } from \"../context/user1Context\";\r\nimport \"./quizScreen.css\";\r\nimport QuestionCard from \"./questionCard\";\r\nimport Loader from \"../../globalComponents/loader\";\r\nimport firebase from \"../../firebase\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction Home() {\r\n  // user details and scores\r\n  const userContextObject = useContext(UserContext);\r\n  const user = userContextObject.user;\r\n  const userScores = userContextObject.userScores;\r\n  // shuffled questions\r\n  const [questions, setQuestions] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  // useHistory hook to redirect to '/Quiz' on login if registration is complete\r\n  const history = useHistory();\r\n\r\n  async function getQuestionsFromFirestore() {\r\n    await firebase\r\n      .firestore()\r\n      .collection(\"questions\")\r\n      .limit(5)\r\n      .get()\r\n      .then((thisisquery) => {\r\n        const list = [];\r\n        thisisquery.forEach((doc) => {\r\n          list.push({ ...doc.data(), id: doc.id });\r\n        });\r\n        setQuestions(list);\r\n        setIsLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        history.push(\"/Quiz\");\r\n        window.alert(\"couldnt fetch questions\");\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    // on component load, from the qs, array the questions are shuffled and randomized\r\n    setIsLoading(true);\r\n    getQuestionsFromFirestore();\r\n  }, []);\r\n\r\n  // question Index to be shown to the user\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  // calculate scores=\r\n  const [score, setScore] = useState(0);\r\n  // when timeOut or onSubmit the score is shown (showscore set to true)\r\n  const [showScore, setShowScore] = useState(false);\r\n\r\n  // fetch score hsitory of user from backend to send both score and percentage increase to backend for rankings\r\n\r\n  function nextQ(nextQuestion) {\r\n    setCurrentQuestion(nextQuestion);\r\n\r\n    // const nextQuestion = currentQuestion + 1;\r\n    // if (nextQuestion < questions.length) {\r\n    // }\r\n  }\r\n\r\n  function submitQ(score) {\r\n    setScore(score);\r\n    setShowScore(true);\r\n\r\n    // score with user id is sent to backEnd to store with new Date()\r\n  }\r\n\r\n  // if there is no user logged in this is redirected to myAccount for login or register\r\n  if (!user || !user.loggedIn ) return <Redirect to=\"/myAccount\" />;\r\n\r\n  if (user && !isLoading) {\r\n    return (\r\n      <div className=\"body\">\r\n        <div className=\"questionDiv\">\r\n          <QuestionCard\r\n            currentQuestion={currentQuestion}\r\n            nextQ={nextQ}\r\n            submitQ={submitQ}\r\n            questions={questions}\r\n            user={user}\r\n            userScores={userScores}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  } else if (user && isLoading) {\r\n    return (\r\n      <div className=\"flexCenter body\">\r\n        <Loader borderWidth=\"5px\" width=\"50px\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","/home/ahsan/REACT APPS/wahnilogin/src/components/context/questionsContext.js",["139","140","141","142"],"import React, { useContext, useEffect, useCallback, useState } from 'react';\n\n\nexport const QuestionContext = React.createContext({});\n\nconst QuestionProvider = QuestionContext.Provider;\nconst QuestionConsumer = QuestionContext.Consumer;\n\n// function onAuthStateChange(callback) {\n// make sure user register or login\n// }\n\n  // user is added or logged in and sent to all the components of this site through this context\n\n\nexport function QuestionContextProvider(props) {\n\n\n    // on useEffect fetch questions from the backend and save it in 'qs'\n\n    const [qs, setqs] = useState([\n            {\n                questionText: 'What is the capital of France?',\n                answerOptions: [\n                    { answerText: 'New York', isCorrect: false },\n                    { answerText: 'London', isCorrect: false },\n                    { answerText: 'Paris', isCorrect: true },\n                    { answerText: 'Dublin', isCorrect: false },\n                ],\n            },\n            {\n                questionText: 'Who is CEO of Tesla?',\n                answerOptions: [\n                    { answerText: 'Jeff Bezos', isCorrect: false },\n                    { answerText: 'Elon Musk', isCorrect: true },\n                    { answerText: 'Bill Gates', isCorrect: false },\n                    { answerText: 'Tony Stark', isCorrect: false },\n                ],\n            },\n            {\n                questionText: 'The iPhone was created by which company?',\n                answerOptions: [\n                    { answerText: 'Apple', isCorrect: true },\n                    { answerText: 'Intel', isCorrect: false },\n                    { answerText: 'Amazon', isCorrect: false },\n                    { answerText: 'Microsoft', isCorrect: false },\n                ],\n            },\n            {\n                questionText: 'How many Harry Potter books are there?',\n                answerOptions: [\n                    { answerText: '1', isCorrect: false },\n                    { answerText: '4', isCorrect: false },\n                    { answerText: '6', isCorrect: false },\n                    { answerText: '7', isCorrect: true },\n                ],\n            },\n            {\n                questionText: 'How many Harry Potter books are there?',\n                answerOptions: [\n                    { answerText: '1', isCorrect: false },\n                    { answerText: '4', isCorrect: false },\n                    { answerText: '6', isCorrect: false },\n                    { answerText: '7', isCorrect: true },\n                ],\n            },\n            {\n                questionText: 'What is the capital of France?',\n                answerOptions: [\n                    { answerText: 'New York', isCorrect: false },\n                    { answerText: 'London', isCorrect: false },\n                    { answerText: 'Paris', isCorrect: true },\n                    { answerText: 'Dublin', isCorrect: false },\n                ],\n            },\n            {\n                questionText: 'Who is CEO of Tesla?',\n                answerOptions: [\n                    { answerText: 'Jeff Bezos', isCorrect: false },\n                    { answerText: 'Elon Musk', isCorrect: true },\n                    { answerText: 'Bill Gates', isCorrect: false },\n                    { answerText: 'Tony Stark', isCorrect: false },\n                ],\n            },\n            {\n                questionText: 'The iPhone was created by which company?',\n                answerOptions: [\n                    { answerText: 'Apple', isCorrect: true },\n                    { answerText: 'Intel', isCorrect: false },\n                    { answerText: 'Amazon', isCorrect: false },\n                    { answerText: 'Microsoft', isCorrect: false },\n                ],\n            },\n            {\n                questionText: 'How many Harry Potter books are there?',\n                answerOptions: [\n                    { answerText: '1', isCorrect: false },\n                    { answerText: '4', isCorrect: false },\n                    { answerText: '6', isCorrect: false },\n                    { answerText: '7', isCorrect: true },\n                ],\n            },\n    ])\n  \n  return (\n    <QuestionProvider value={[qs, setqs]}>\n    {props.children}      \n    </QuestionProvider>\n  );\n}\n\n","/home/ahsan/REACT APPS/wahnilogin/src/components/questionsScreen/addDelQs.js",["143","144","145","146","147","148"],"import React, { useState, useContext, useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport { UserContext } from \"../context/user1Context\";\nimport { QuestionContext } from \"../context/questionsContext\";\nimport { AdminQuestionContext } from \"../context/adminQcontext\";\n\nimport ShowQ from \"./showQuestions\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport firebase from '../../firebase'\n\nimport \"./questionScreen.css\";\n\nfunction AddDel() {\n// user details and scores\n  const userContextObject = useContext(UserContext);\n  const user = userContextObject.user;\n\n  const [allQs, setAllQs] = useContext(AdminQuestionContext);\n\n\n  function handleFormSubmit1(values) {\n    const correctAnswer = (correctoption) => {\n      if (correctoption === 'A') {\n        return values.optionA\n      }\n      if (correctoption === 'B') {\n        return values.optionB\n      }\n      if (correctoption === 'C') {\n        return values.optionC\n      }\n      if (correctoption === 'D') {\n        return values.optionD\n      }\n    };\n    const newQ = {\n      questionText: `${values.questionInput}`,\n      options: [\n        `${values.optionA}`,\n        `${values.optionB}`,\n        `${values.optionC}`,\n        `${values.optionD}`\n      ],\n    };\n\n    firebase\n    .firestore()\n    .collection('questions')\n    .add({\n      ...newQ,\n      createdAt: new Date()\n    })\n    .then(res => {\n      console.log('question added with id:', res.id);\n      firebase\n      .firestore()\n      .doc(`answers/${res.id}`)\n      .set({\n        'answer': correctAnswer(values.correct),\n        'questionId': res.id,\n        'createdAt': new Date()\n      })\n      .then(res1 => {\n        console.log('answer added')\n      })\n      .catch(err => {\n        window.alert('Unable to add answer')\n\n      })\n    })\n    .catch(err => {\n      window.alert('Unable to add question')\n    });\n\n\n}\n\n    \n\n  if (!user) return <Redirect to=\"/myAccount\" />;\n\n  if (user.id !== \"zOOj1gwSb7WQA7dwMBgW2EYJOk52\") {\n    return <h1>You are not AUTHORIZED</h1>;\n  } else {\n    return (\n      <div className='AdminAppContainer'>\n\n        <div className='questionsMainDiv'>\n            <ShowQ allQs={allQs} setAllQs={setAllQs} />\n        </div>\n\n        <div className=\"formDiv\">\n        <p className='formHeader'>ADD QUESTIONS</p>\n          <Formik\n            initialValues={{\n              questionInput: \"\",\n              optionA: \"\",\n              optionB: \"\",\n              optionC: \"\",\n              optionD: \"\",\n              correct: \"\",\n            }}\n            onSubmit={(values) => handleFormSubmit1(values)}\n            validationSchema={Yup.object().shape({\n              questionInput: Yup.string().required(\"*this is a required field\"),\n              optionA: Yup.string().required(\"*this is a required field\"),\n              optionB: Yup.string().required(\"*this is a required field\"),\n              optionC: Yup.string().required(\"*this is a required field\"),\n              optionD: Yup.string().required(\"*this is a required field\"),\n              correct: Yup.string().required(\"*choose one option\").min(1),\n            })}\n          >\n            {(props) => {\n              const {\n                values,\n                touched,\n                errors,\n                dirty,\n                isSubmitting,\n                handleChange,\n                handleBlur,\n                handleSubmit,\n                handleReset,\n              } = props;\n              return (\n                <form onSubmit={handleSubmit}>\n                  \n                  <input\n                    id=\"questionInput\"\n                    placeholder=\"Enter the Question\"\n                    type=\"text\"\n                    value={values.questionInput}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    className={\n                      errors.questionInput && touched.questionInput\n                        ? \"text-input error\"\n                        : \"text-input\"\n                    }\n                  />\n                  {errors.questionInput && touched.questionInput && (\n                    <div className=\"input-feedback\">{errors.questionInput}</div>\n                  )}\n\n                  <label htmlFor=\"optionA\" className='labelHeader'>\n                    Option A\n                  </label>\n                  <input\n                    id=\"optionA\"\n                    placeholder=\"Enter option\"\n                    type=\"text\"\n                    value={values.optionA}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    // className={\n                    //   errors.email && touched.email\n                    //     ? \"text-input error\"\n                    //     : \"text-input\"\n                    // }\n                  />\n                  {errors.optionA && touched.optionA && (\n                    <div className=\"input-feedback\">{errors.optionA}</div>\n                  )}\n                  <label htmlFor=\"optionB\" className='labelHeader'>\n                    Option B\n                  </label>\n                  <input\n                    id=\"optionB\"\n                    placeholder=\"Enter Option\"\n                    type=\"text\"\n                    value={values.optionB}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    // className={\n                    //   errors.email && touched.email\n                    //     ? \"text-input error\"\n                    //     : \"text-input\"\n                    // }\n                  />\n                  {errors.optionB && touched.optionB && (\n                    <div className=\"input-feedback\">{errors.optionB}</div>\n                  )}\n                  <label htmlFor=\"optionC\" className='labelHeader'>\n                    Option C\n                  </label>\n                  <input\n                    id=\"optionC\"\n                    placeholder=\"Enter option\"\n                    type=\"text\"\n                    value={values.optionC}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    // className={\n                    //   errors.email && touched.email\n                    //     ? \"text-input error\"\n                    //     : \"text-input\"\n                    // }\n                  />\n                  {errors.optionC && touched.optionC && (\n                    <div className=\"input-feedback\">{errors.optionC}</div>\n                  )}\n                  <label htmlFor=\"optionD\" className='labelHeader'>\n                    Option D\n                  </label>\n                  <input\n                    id=\"optionD\"\n                    placeholder=\"Enter Option\"\n                    type=\"text\"\n                    value={values.optionD}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    // className={\n                    //   errors.email && touched.email\n                    //     ? \"text-input error\"\n                    //     : \"text-input\"\n                    // }\n                  />\n                  {errors.optionD && touched.optionD && (\n                    <div className=\"input-feedback\">{errors.optionD}</div>\n                  )}\n\n                  <select\n                    name=\"correct\"\n                    value={values.correct}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    style={{ display: \"block\" }}\n                    className='selector'\n                  >\n                    <option value=\"\" label=\"Choose the Right option\" />\n                    <option value=\"A\" label=\"A\" />\n                    <option value=\"B\" label=\"B\" />\n                    <option value=\"C\" label=\"C\" />\n                    <option value=\"D\" label=\"D\" />\n                  </select>\n                  {errors.correct && touched.correct && (\n                    <div className=\"input-feedback\">{errors.correct}</div>\n                  )}\n\n                  <button type=\"submit\" className='submitButton1'>Submit</button>\n\n                  {/* <DisplayFormikState {...props} /> */}\n                </form>\n              );\n            }}\n          </Formik>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AddDel;\n","/home/ahsan/REACT APPS/wahnilogin/src/components/questionsScreen/showQuestions.js",["149","150","151","152","153","154"],"/home/ahsan/REACT APPS/wahnilogin/src/components/footer/footer.js",[],"/home/ahsan/REACT APPS/wahnilogin/src/globalComponents/loader.js",["155","156"],"import React, { useState, useContext} from 'react';\nimport './loader.css'\n\nfunction Loader(props) {\n\n    const { width, borderWidth } = props\n\n    return (\n        \n            <div style={{height: width, width: width, borderWidth: borderWidth}} className=\"loader\"></div>\n    );\n}\n\nexport default Loader;\n","/home/ahsan/REACT APPS/wahnilogin/src/components/context/adminQcontext.js",["157","158","159"],"import React, { useContext, useEffect, useCallback, useState } from 'react';\nimport firebase from '../../firebase'\n\n\nexport const AdminQuestionContext = React.createContext({});\n\nconst AdminQuestionProvider = AdminQuestionContext.Provider;\nconst AdminQuestionConsumer = AdminQuestionContext.Consumer;\n\n// function onAuthStateChange(callback) {\n// make sure user register or login\n// }\n\n  // user is added or logged in and sent to all the components of this site through this context\n\n\nexport function AdminQuestionContextProvider(props) {\n\n    \n\n    // on useEffect fetch questions from the backend and save it in 'qs'\n\n    const [allQs, setAllQs] = useState([])\n\n    useEffect(() => {\n        firebase.firestore().collection('questions').onSnapshot((thisisquery) => {\n          const list = [];\n          thisisquery.forEach((doc) => {\n            list.push({ ...doc.data(), id: doc.id });\n          })\n          setAllQs(list);\n          console.log(list)\n        })\n      }, []);\n  \n  return (\n    <AdminQuestionProvider value={[allQs, setAllQs]}>\n    {props.children}\n    </AdminQuestionProvider>\n  );\n}\n\n",{"ruleId":"160","severity":1,"message":"161","line":2,"column":10,"nodeType":"162","messageId":"163","endLine":2,"endColumn":23},{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","replacedBy":"167"},{"ruleId":"160","severity":1,"message":"168","line":32,"column":9,"nodeType":"162","messageId":"163","endLine":32,"endColumn":19},{"ruleId":"160","severity":1,"message":"169","line":1,"column":17,"nodeType":"162","messageId":"163","endLine":1,"endColumn":27},{"ruleId":"160","severity":1,"message":"170","line":1,"column":40,"nodeType":"162","messageId":"163","endLine":1,"endColumn":51},{"ruleId":"160","severity":1,"message":"171","line":5,"column":7,"nodeType":"162","messageId":"163","endLine":5,"endColumn":18},{"ruleId":"160","severity":1,"message":"172","line":9,"column":7,"nodeType":"162","messageId":"163","endLine":9,"endColumn":19},{"ruleId":"164","replacedBy":"173"},{"ruleId":"166","replacedBy":"174"},{"ruleId":"164","replacedBy":"175"},{"ruleId":"166","replacedBy":"176"},{"ruleId":"177","severity":1,"message":"178","line":27,"column":10,"nodeType":"179","endLine":27,"endColumn":20,"suggestions":"180"},{"ruleId":"177","severity":1,"message":"181","line":27,"column":6,"nodeType":"179","endLine":27,"endColumn":8,"suggestions":"182"},{"ruleId":"183","severity":1,"message":"184","line":58,"column":12,"nodeType":"185","messageId":"186","endLine":58,"endColumn":14},{"ruleId":"183","severity":1,"message":"184","line":58,"column":34,"nodeType":"185","messageId":"186","endLine":58,"endColumn":36},{"ruleId":"183","severity":1,"message":"187","line":58,"column":34,"nodeType":"185","messageId":"186","endLine":58,"endColumn":36},{"ruleId":"183","severity":1,"message":"187","line":58,"column":42,"nodeType":"185","messageId":"186","endLine":58,"endColumn":44},{"ruleId":"160","severity":1,"message":"188","line":91,"column":17,"nodeType":"162","messageId":"163","endLine":91,"endColumn":22},{"ruleId":"160","severity":1,"message":"189","line":92,"column":17,"nodeType":"162","messageId":"163","endLine":92,"endColumn":29},{"ruleId":"160","severity":1,"message":"190","line":96,"column":17,"nodeType":"162","messageId":"163","endLine":96,"endColumn":28},{"ruleId":"164","replacedBy":"191"},{"ruleId":"166","replacedBy":"192"},{"ruleId":"160","severity":1,"message":"193","line":1,"column":39,"nodeType":"162","messageId":"163","endLine":1,"endColumn":48},{"ruleId":"160","severity":1,"message":"194","line":4,"column":8,"nodeType":"162","messageId":"163","endLine":4,"endColumn":13},{"ruleId":"160","severity":1,"message":"195","line":5,"column":8,"nodeType":"162","messageId":"163","endLine":5,"endColumn":16},{"ruleId":"160","severity":1,"message":"196","line":9,"column":10,"nodeType":"162","messageId":"163","endLine":9,"endColumn":16},{"ruleId":"160","severity":1,"message":"197","line":9,"column":18,"nodeType":"162","messageId":"163","endLine":9,"endColumn":27},{"ruleId":"198","severity":1,"message":"199","line":125,"column":27,"nodeType":"200","messageId":"201","endLine":125,"endColumn":29},{"ruleId":"198","severity":1,"message":"199","line":126,"column":35,"nodeType":"200","messageId":"201","endLine":126,"endColumn":37},{"ruleId":"198","severity":1,"message":"199","line":149,"column":27,"nodeType":"200","messageId":"201","endLine":149,"endColumn":29},{"ruleId":"198","severity":1,"message":"199","line":150,"column":35,"nodeType":"200","messageId":"201","endLine":150,"endColumn":37},{"ruleId":"164","replacedBy":"202"},{"ruleId":"166","replacedBy":"203"},{"ruleId":"160","severity":1,"message":"169","line":1,"column":38,"nodeType":"162","messageId":"163","endLine":1,"endColumn":48},{"ruleId":"160","severity":1,"message":"204","line":13,"column":5,"nodeType":"162","messageId":"163","endLine":13,"endColumn":12},{"ruleId":"177","severity":1,"message":"205","line":54,"column":6,"nodeType":"179","endLine":54,"endColumn":8,"suggestions":"206"},{"ruleId":"160","severity":1,"message":"207","line":1,"column":20,"nodeType":"162","messageId":"163","endLine":1,"endColumn":24},{"ruleId":"177","severity":1,"message":"208","line":45,"column":6,"nodeType":"179","endLine":45,"endColumn":8,"suggestions":"209"},{"ruleId":"160","severity":1,"message":"210","line":50,"column":10,"nodeType":"162","messageId":"163","endLine":50,"endColumn":15},{"ruleId":"160","severity":1,"message":"211","line":52,"column":10,"nodeType":"162","messageId":"163","endLine":52,"endColumn":19},{"ruleId":"160","severity":1,"message":"169","line":1,"column":17,"nodeType":"162","messageId":"163","endLine":1,"endColumn":27},{"ruleId":"160","severity":1,"message":"193","line":1,"column":29,"nodeType":"162","messageId":"163","endLine":1,"endColumn":38},{"ruleId":"160","severity":1,"message":"170","line":1,"column":40,"nodeType":"162","messageId":"163","endLine":1,"endColumn":51},{"ruleId":"160","severity":1,"message":"212","line":7,"column":7,"nodeType":"162","messageId":"163","endLine":7,"endColumn":23},{"ruleId":"160","severity":1,"message":"213","line":1,"column":17,"nodeType":"162","messageId":"163","endLine":1,"endColumn":25},{"ruleId":"160","severity":1,"message":"193","line":1,"column":39,"nodeType":"162","messageId":"163","endLine":1,"endColumn":48},{"ruleId":"160","severity":1,"message":"214","line":5,"column":10,"nodeType":"162","messageId":"163","endLine":5,"endColumn":25},{"ruleId":"160","severity":1,"message":"188","line":120,"column":17,"nodeType":"162","messageId":"163","endLine":120,"endColumn":22},{"ruleId":"160","severity":1,"message":"189","line":121,"column":17,"nodeType":"162","messageId":"163","endLine":121,"endColumn":29},{"ruleId":"160","severity":1,"message":"190","line":125,"column":17,"nodeType":"162","messageId":"163","endLine":125,"endColumn":28},{"ruleId":"160","severity":1,"message":"169","line":1,"column":26,"nodeType":"162","messageId":"163","endLine":1,"endColumn":36},{"ruleId":"160","severity":1,"message":"193","line":1,"column":38,"nodeType":"162","messageId":"163","endLine":1,"endColumn":47},{"ruleId":"160","severity":1,"message":"215","line":7,"column":12,"nodeType":"162","messageId":"163","endLine":7,"endColumn":26},{"ruleId":"160","severity":1,"message":"216","line":7,"column":28,"nodeType":"162","messageId":"163","endLine":7,"endColumn":45},{"ruleId":"160","severity":1,"message":"217","line":46,"column":11,"nodeType":"162","messageId":"163","endLine":46,"endColumn":21},{"ruleId":"160","severity":1,"message":"218","line":53,"column":9,"nodeType":"162","messageId":"163","endLine":53,"endColumn":24},{"ruleId":"160","severity":1,"message":"213","line":1,"column":17,"nodeType":"162","messageId":"163","endLine":1,"endColumn":25},{"ruleId":"160","severity":1,"message":"169","line":1,"column":27,"nodeType":"162","messageId":"163","endLine":1,"endColumn":37},{"ruleId":"160","severity":1,"message":"169","line":1,"column":17,"nodeType":"162","messageId":"163","endLine":1,"endColumn":27},{"ruleId":"160","severity":1,"message":"170","line":1,"column":40,"nodeType":"162","messageId":"163","endLine":1,"endColumn":51},{"ruleId":"160","severity":1,"message":"219","line":8,"column":7,"nodeType":"162","messageId":"163","endLine":8,"endColumn":28},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","no-native-reassign",["220"],"no-negated-in-lhs",["221"],"'userScores' is assigned a value but never used.","'useContext' is defined but never used.","'useCallback' is defined but never used.","'defaultUser' is assigned a value but never used.","'UserConsumer' is assigned a value but never used.",["220"],["221"],["220"],["221"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setTimeOver'. Either include it or remove the dependency array.","ArrayExpression",["222"],"React Hook useEffect has a missing dependency: 'user.photoURL'. Either include it or remove the dependency array.",["223"],"no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","Unexpected mix of '||' and '&&'.","'dirty' is assigned a value but never used.","'isSubmitting' is assigned a value but never used.","'handleReset' is assigned a value but never used.",["220"],["221"],"'useEffect' is defined but never used.","'axios' is defined but never used.","'firebase' is defined but never used.","'array1' is assigned a value but never used.","'setarray1' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["220"],["221"],"'submitQ' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'timeOver'. Either include it or remove the dependency array.",["224"],"'Link' is defined but never used.","React Hook useEffect has a missing dependency: 'getQuestionsFromFirestore'. Either include it or remove the dependency array.",["225"],"'score' is assigned a value but never used.","'showScore' is assigned a value but never used.","'QuestionConsumer' is assigned a value but never used.","'useState' is defined but never used.","'QuestionContext' is defined but never used.","'correctAnswers' is assigned a value but never used.","'setCorrectAnswers' is assigned a value but never used.","'colorConst' is assigned a value but never used.","'fontWeightConst' is assigned a value but never used.","'AdminQuestionConsumer' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"226","fix":"227"},{"desc":"228","fix":"229"},{"desc":"230","fix":"231"},{"desc":"232","fix":"233"},"Update the dependencies array to be: [setTimeOver, timeOver]",{"range":"234","text":"235"},"Update the dependencies array to be: [user.photoURL]",{"range":"236","text":"237"},"Update the dependencies array to be: [timeOver]",{"range":"238","text":"239"},"Update the dependencies array to be: [getQuestionsFromFirestore]",{"range":"240","text":"241"},[678,688],"[setTimeOver, timeOver]",[733,735],"[user.photoURL]",[1358,1360],"[timeOver]",[1511,1513],"[getQuestionsFromFirestore]"]