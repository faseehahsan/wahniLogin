{"version":3,"sources":["components/context/user1Context.js","components/Registration/myAccount.js","components/Layout/navbar.js","components/home.js","components/Quiz/timer.js","components/Quiz/questionCard.js","components/Quiz/quizPlay.js","components/Quiz/quizScreen.js","components/Ranking/rankingScreen.js","App.js","reportWebVitals.js","index.js"],"names":["UserContext","React","createContext","UserProvider","Provider","Consumer","UserContextProvider","props","useState","loggedIn","user","value","children","Login","useContext","loginClicked","setLoginClicked","registerClicked","setRegisterClicked","loginContainer1","headerContainer1","inputContainer1","loginContainer2","headerContainer2","inputContainer2","className","src","alt","onClick","e","type","placeholder","name","Navbar","to","Home","mobile","Timer","duration","setDuration","timeOver","setTimeOver","useEffect","interval","setInterval","setTimeout","clearInterval","QuestionCard","currentQuestion","questions","prevQ","nextQ","submitQ","numberOfQ","selectedAnswer","setSelectedAnswer","correctAnswer","setCorrectAnswer","selectedTrue","clickedAnswer","indexure","filter","data","length","questionText","answerOptions","map","answerOption","answerText","id","answer","isCorrect","newArray","newArray1","newSelectedAnswerArray","setCurrentQuestion","showScore","setShowScore","score","setScore","nextQuestion","RankingScreen","App","exact","path","component","MyAccount","Quiz","QuizPlay","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.00bc3dfa.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\n\r\nconst defaultUser = { loggedIn: false, email: \"\" };\r\nexport const UserContext = React.createContext({});\r\n\r\nconst UserProvider = UserContext.Provider;\r\nconst UserConsumer = UserContext.Consumer;\r\n\r\nfunction onAuthStateChange(callback) {\r\n\r\n\r\n  // user is added or logged in and sent to all the components of this site through this context\r\n\r\n  const user = true\r\n\r\n  if (user) {\r\n      callback({ loggedIn: true, mobile: '+9145665524', name: 'USER', id: 'adssda6546d8f', dp: 'www.sasad.asdsa.sdasd/' });\r\n    } else {\r\n      callback({ loggedIn: false });\r\n    }\r\n}\r\n\r\nexport function UserContextProvider(props) {\r\n  const [user, setUser] = useState({ loggedIn: false });\r\n//   const userName1 = firebase.auth().currentUser.displayName;\r\n  const [error, setError] = useState(\"\");\r\n  // useEffect(() => {\r\n  //   const unsubscribe = onAuthStateChange(setUser);\r\n  //   return () => {\r\n  //     unsubscribe();\r\n  //   }\r\n  // }, []);\r\n  \r\n  return (\r\n    <UserProvider value={user}>\r\n    {props.children}      \r\n    </UserProvider>\r\n  );\r\n}\r\n\r\n","import React, { useState, useContext} from 'react';\r\nimport { UserContext } from '../context/user1Context';\r\nimport Profile from '../Profile/profile'\r\n\r\n\r\nimport './app.css'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\n\r\nfunction Login() {\r\n\r\n  const user = useContext(UserContext);\r\n  const userLoggedIn = false\r\n\r\n  const [loginClicked, setLoginClicked] = useState(false);\r\n  const [registerClicked, setRegisterClicked] = useState(false);\r\n\r\n  const loginContainer1 = registerClicked ? 'login-container loginresponsive': 'login-container loginresponsive hide-login';\r\n  const headerContainer1 = registerClicked ? 'header': 'header headerHover';\r\n  const inputContainer1 = registerClicked ? 'input-container' : 'input-container hide-section';\r\n\r\n  const loginContainer2 = loginClicked ? 'login-container loginresponsive': 'login-container loginresponsive hide-login';\r\n  const headerContainer2 = loginClicked ? 'header': 'header headerHover';\r\n  const inputContainer2 = loginClicked ? 'input-container' : 'input-container hide-section';\r\n  \r\n\r\n  function handleRegisterClick(e) {\r\n    setRegisterClicked(true)\r\n    setLoginClicked(false)\r\n  }\r\n  function handleLoginClick(e) {\r\n    setRegisterClicked(false)\r\n    setLoginClicked(true)\r\n  }\r\n\r\n  if (!userLoggedIn) {\r\n    return (\r\n      <div className='body'>\r\n                <img src=\"https://image.flaticon.com/icons/png/512/2922/2922532.png\" alt=\"\" />\r\n      <p className='descriptionText'></p>\r\n        <div className={loginContainer1}>\r\n          <form className='form'>\r\n          <div className={headerContainer1} onClick={handleRegisterClick}>R E G I S T E R</div>\r\n            <div className={inputContainer1}>\r\n              <p><input type=\"text\" placeholder=\"Name\" name=\"name\" /></p>\r\n              <p><input type=\"number\" placeholder=\"Mobile Number\" name=\"mobile\" /></p>\r\n              <p className='button1'>SIGN UP</p>\r\n            </div>\r\n          </form>\r\n        </div>\r\n  \r\n        <p className='descriptionText'>Already have an Account ?</p>\r\n        <div className={loginContainer2}>\r\n          <form className='form'>\r\n          <div className={headerContainer2} onClick={handleLoginClick}>L O G I N</div>\r\n            <div className={inputContainer2}>\r\n              <p><input type=\"number\" placeholder=\"Mobile number\" name=\"mobile\" /></p>\r\n              <p><input type=\"password\" placeholder=\"Enter OTP\" name=\"otp\" /></p>\r\n              <p className='button1'>SIGN IN</p>\r\n            </div>\r\n  \r\n          </form>\r\n        </div>\r\n        \r\n      </div>\r\n  \r\n    );\r\n  } else {\r\n    return(\r\n      <div>\r\n      <Profile />\r\n      </div>\r\n    )\r\n  }\r\n  \r\n\r\n  \r\n}\r\n\r\nexport default Login;\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './navbar.css'\r\n\r\nfunction Navbar() {\r\n   \r\n    return (\r\n        <div>\r\n        <nav className=\"navContainer\">\r\n            <Link to='/myAccount' className=\"navLinks\">My Account</Link>\r\n            <Link to='/Quiz' className=\"navLinks\">Quiz</Link>\r\n        </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Navbar","import React, { useState, useContext} from 'react';\r\nimport { UserContext } from './context/user1Context';\r\n\r\n\r\nfunction Home() {\r\n    const user = useContext(UserContext);\r\n\r\n    return (\r\n        <div>\r\n            <h1>WahniHome</h1>\r\n        <h1>{user.mobile}</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nfunction Timer(props) {\r\n\r\n    const [duration, setDuration] = useState(30);\r\n\r\n    const { timeOver, setTimeOver } = props;\r\n\r\n    useEffect(() => {\r\n       \r\n            const interval = setInterval(() => {\r\n                if (!timeOver) {\r\n                    setDuration(duration => duration - 1);\r\n                }\r\n    \r\n              }, 1000);\r\n\r\n              setTimeout(\r\n                  () => {\r\n                      setTimeOver(true)\r\n                      setDuration('TIME OUT')\r\n                        }\r\n                , 30000);\r\n\r\n            return () => clearInterval(interval);\r\n        \r\n      }, [timeOver]);\r\n\r\n    const [started, setStarted] = useState(false);\r\n\r\n  return (\r\n   \r\n    <div>\r\n        {duration}\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default Timer;\r\n","import React, { useState } from 'react'\r\nimport Timer from './timer';\r\n\r\n\r\nfunction QuestionCard(props) {\r\n\r\n    const { currentQuestion, questions, prevQ, nextQ, submitQ, numberOfQ } = props\r\n\r\n    const [selectedAnswer, setSelectedAnswer] = useState([]);\r\n    const [correctAnswer, setCorrectAnswer] = useState([]);\r\n\r\n    const [timeOver, setTimeOver] = useState(false);\r\n\r\n\r\n\r\n    function selectedTrue(clickedAnswer, indexure) {\r\n        if (clickedAnswer === selectedAnswer[indexure]) {\r\n            return 'button-selected'\r\n        }\r\n    }\r\n\r\n    function newSelectedAnswerArray(answer, indexure, isCorrect) {\r\n        const newArray = [...selectedAnswer];\r\n        newArray[indexure] = answer;\r\n        setSelectedAnswer(newArray)\r\n\r\n        const newArray1 = [...correctAnswer];\r\n        newArray1[indexure] = isCorrect;\r\n        setCorrectAnswer(newArray1)\r\n    }\r\n\r\n\r\n    if (timeOver) {\r\n        return (\r\n            \r\n            <div className='timeout'>\r\n\r\n                    <div className='score-header'>TIMEOUT !!!</div>\r\n                    \r\n                    <div>\r\n                        <div className='button1' onClick={() => submitQ(correctAnswer.filter(data => data === true).length)}>Click to see Score</div>\r\n\r\n                    </div>\r\n                    </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className='question-container'>\r\n                <div className='question-section'>\r\n                    <div className='question-count-timer'>\r\n                    <div className='question-count'>\r\n                    <span>Question {currentQuestion + 1}</span>/ {numberOfQ}\r\n                    </div>\r\n                        <div className='timer'>\r\n                        <Timer timeOver={timeOver} setTimeOver={setTimeOver} />\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className='question-text'>{questions.questionText}</div>\r\n                </div>\r\n                <div className='answer-section'>\r\n                    {questions.answerOptions.map((answerOption) => (\r\n                        <button className={selectedTrue(answerOption.answerText, currentQuestion)} id='answerButton' onClick={() => {\r\n                            newSelectedAnswerArray(answerOption.answerText, currentQuestion, answerOption.isCorrect);\r\n                        }}>\r\n                            {answerOption.answerText}\r\n                        </button>\r\n                    ))}\r\n                </div>\r\n\r\n                <div className='submitButtonContainer'>\r\n                    <div className='submitButton' onClick={() => submitQ(correctAnswer.filter(data => data === true).length)}>Submit</div>\r\n                </div>\r\n\r\n                <div className='next-and-prev-buttonsContainer'>\r\n                    <div className='button1' onClick={prevQ}>Go back</div>\r\n                    <div className='button1' onClick={nextQ}>Next</div>\r\n                </div>\r\n\r\n                \r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default QuestionCard;\r\n","import { Redirect, Link } from 'react-router-dom';\r\nimport React, {useState, useContext } from 'react';\r\nimport { UserContext } from '../context/user1Context';\r\nimport './quizScreen.css';\r\nimport QuestionCard from './questionCard'\r\n\r\nfunction Home() {\r\n\r\n    // inside useEffect we use fetch API to call in the questions and save in const questions\r\n\r\n    // useEffect(() => {\r\n    //     effect\r\n    //     return () => {\r\n    //         cleanup\r\n    //     }\r\n    // }, [input])\r\n\r\n    // useContext is used to confirm if a user is loggedIn\r\n    const user = useContext(UserContext);\r\n\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n    const [showScore, setShowScore] = useState(false);\r\n    \r\n    const [score, setScore] = useState(0);    \r\n    \r\n\r\n    const questions = [\r\n\t\t{\r\n\t\t\tquestionText: 'What is the capital of France?',\r\n\t\t\tanswerOptions: [\r\n\t\t\t\t{ answerText: 'New York', isCorrect: false },\r\n\t\t\t\t{ answerText: 'London', isCorrect: false },\r\n\t\t\t\t{ answerText: 'Paris', isCorrect: true },\r\n\t\t\t\t{ answerText: 'Dublin', isCorrect: false },\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\tquestionText: 'Who is CEO of Tesla?',\r\n\t\t\tanswerOptions: [\r\n\t\t\t\t{ answerText: 'Jeff Bezos', isCorrect: false },\r\n\t\t\t\t{ answerText: 'Elon Musk', isCorrect: true },\r\n\t\t\t\t{ answerText: 'Bill Gates', isCorrect: false },\r\n\t\t\t\t{ answerText: 'Tony Stark', isCorrect: false },\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\tquestionText: 'The iPhone was created by which company?',\r\n\t\t\tanswerOptions: [\r\n\t\t\t\t{ answerText: 'Apple', isCorrect: true },\r\n\t\t\t\t{ answerText: 'Intel', isCorrect: false },\r\n\t\t\t\t{ answerText: 'Amazon', isCorrect: false },\r\n\t\t\t\t{ answerText: 'Microsoft', isCorrect: false },\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\tquestionText: 'How many Harry Potter books are there?',\r\n\t\t\tanswerOptions: [\r\n\t\t\t\t{ answerText: '1', isCorrect: false },\r\n\t\t\t\t{ answerText: '4', isCorrect: false },\r\n\t\t\t\t{ answerText: '6', isCorrect: false },\r\n\t\t\t\t{ answerText: '7', isCorrect: true },\r\n\t\t\t],\r\n\t\t},\r\n\t];\r\n\r\n\t\r\n\r\n\r\n    function nextQ() { \r\n        const nextQuestion = currentQuestion + 1;\r\n        if (nextQuestion < questions.length) {\r\n\t\t\tsetCurrentQuestion(nextQuestion);\r\n\t\t}\r\n    }\r\n    function prevQ() {\r\n        if (currentQuestion > 0) {\r\n            const nextQuestion = currentQuestion - 1;\r\n        setCurrentQuestion(nextQuestion);\r\n        }\r\n    }\r\n\r\n    function submitQ(score) {\r\n        setShowScore(true);\r\n        setScore(score)\r\n\r\n        // score with user id is sent to backEnd to store with new Date()\r\n    }\r\n\r\n    // if there is no user logged in this is redirected to myAccount for login or register\r\n\r\n    if (!user) return <Redirect to='/myAccount' />\r\n\r\n    if (user) {\r\n        return (\r\n        <div className='appContainer'>\r\n                {showScore ? (\r\n                    <div className='app score'>\r\n                    <div className='score-header'>Congratulations !!!</div>\r\n                    <div className='score-message'>\r\n                    You scored {score} out of {questions.length}\r\n                    </div>\r\n                    <div>\r\n                        <Link className='link button1' to='/Quiz'>Retry</Link>\r\n                    </div>\r\n                    </div>\r\n\r\n                ) : (\r\n                    <div className='app'>\r\n                        <QuestionCard \r\n                            currentQuestion={currentQuestion} \r\n                            questions={questions[currentQuestion]} \r\n                            prevQ={prevQ} \r\n                            nextQ={nextQ}\r\n                            submitQ={submitQ}\r\n                            numberOfQ={questions.length} />\r\n                    </div>\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n\t\r\n}\r\n\r\nexport default Home;\r\n","import { Link } from 'react-router-dom';\r\nimport React from 'react';\r\nimport './quizScreen.css';\r\n\r\nfunction Home() {\r\n    \r\n\r\n        return (\r\n            <div className='appContainer'>\r\n            <div className='quizScreenContainer'>\r\n            \r\n            \r\n            <Link className='quizNavContainer link' to='/Quiz/play'>\r\n            <img src=\"https://image.flaticon.com/icons/png/512/27/27223.png\" alt=\"\" />\r\n            <div className='quizScreenText'>PLAY</div>\r\n            </Link>\r\n\r\n            <Link className='quizNavContainer link' to='/Quiz/ranking'>\r\n            <img src=\"https://image.flaticon.com/icons/png/512/13/13815.png\" alt=\"\" />\r\n            <div className='quizScreenText'>RANKINGS</div>\r\n            </Link>\r\n\r\n            \r\n            </div>\r\n            </div>\r\n        )\r\n    \r\n\t\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react'\r\n\r\nfunction RankingScreen() {\r\n   \r\n    return (\r\n        <div>\r\n            Ranking\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default RankingScreen","import MyAccount from './components/Registration/myAccount'\nimport { BrowserRouter, Switch, Route, HashRouter } from 'react-router-dom';\nimport Navbar from './components/Layout/navbar'\nimport Home from './components/home'\nimport QuizPlay from './components/Quiz/quizPlay'\nimport Quiz from './components/Quiz/quizScreen'\nimport RankingScreen from './components/Ranking/rankingScreen'\nimport { UserContextProvider } from './components/context/user1Context';\n\n\n\n\nfunction App() {\n  return (\n    \n    <HashRouter>\n      <Navbar />\n      <Switch>\n      <UserContextProvider>\n        <Route exact path='/' component={Home} />\n          <Route exact path='/myAccount' component={MyAccount} />\n          <Route exact path='/Quiz' component={Quiz} />\n          <Route exact path='/Quiz/play' component={QuizPlay} />\n          <Route exact path='/Quiz/ranking' component={RankingScreen} />\n        </UserContextProvider>\n      </Switch>\n    </HashRouter>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}