{"version":3,"sources":["components/Profile/profile.js","firebase.js","components/context/user1Context.js","components/Registration/myAccount.js","components/Layout/navbar.js","components/home.js","components/Quiz/timer.js","components/Quiz/questionCard.js","components/Quiz/quizPlay.js","components/Quiz/quizScreen.js","components/Ranking/rankingScreen.js","App.js","reportWebVitals.js","index.js"],"names":["Profile","props","user","logout","className","src","alt","name","number","type","onClick","firebase","apps","length","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","UserContext","React","createContext","UserProvider","Provider","Consumer","UserContextProvider","useState","loggedIn","setUser","useEffect","unsubscribe","auth","onAuthStateChanged","user1","email","displayName","id","uid","phoneNumber","value","children","Login","inputName","setInputName","inputNumber1","setInputNumber1","inputNumber2","setInputNumber2","setUpRecaptcha","window","recaptchaVerifier","RecaptchaVerifier","response","console","log","onSignInSubmit","appVerifier","signInWithPhoneNumber","then","confirmationResult","code","prompt","confirm","result","alert","currentUser","updateProfile","catch","error","location","reload","useContext","loginClicked","setLoginClicked","registerClicked","setRegisterClicked","loginContainer1","headerContainer1","inputContainer1","loginContainer2","headerContainer2","inputContainer2","signOut","onSubmit","e","preventDefault","onChange","target","placeholder","Navbar","to","Home","Timer","duration","setDuration","timeOver","setTimeOver","interval","setInterval","setTimeout","clearInterval","QuestionCard","currentQuestion","questions","prevQ","nextQ","submitQ","numberOfQ","selectedAnswer","setSelectedAnswer","correctAnswer","setCorrectAnswer","selectedTrue","clickedAnswer","indexure","filter","data","questionText","answerOptions","map","answerOption","answerText","answer","isCorrect","newArray","newArray1","newSelectedAnswerArray","setCurrentQuestion","showScore","setShowScore","score","setScore","nextQuestion","RankingScreen","rankings","userid","username","scores","submittedAt","percentageIncrease","logoutClicked","setLogoutClicked","topScores","setTopScores","mostAttempts","setMostAttempts","highestPercentage","setHighestPercentage","rankTable1","rankTable2","loginContainer3","headerContainer3","rankTable3","data1","push","sort","a","b","parseInt","topScore","slice","index","attempts","mostAttempt","percentage","percentageHighest","App","exact","path","component","MyAccount","Quiz","QuizPlay","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.410c7aea.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nfunction Profile(props) {\r\n  const { user, logout} = props;\r\n\r\n  return (\r\n        <div className='body'>\r\n        <div className='login-container loginresponsive profileContainer'>\r\n          <div className='form'>\r\n          <div className='profileImageContainer'>\r\n          <img src=\"https://image.flaticon.com/icons/png/512/2922/2922532.png\" alt=\"\" />\r\n          </div>\r\n          <div className='profileDetailsContainer'>\r\n          <div>\r\n          <p className='profileText'>Name: {user.name}</p>\r\n          <p className='profileText'>Phone No.: {user.number}</p>\r\n          <p className='profileText'>No. of Attempts: </p>\r\n          <p className='profileText'>Highest Score: </p>\r\n          <p className='button1' type='button' onClick={() => logout()}>LOGOUT</p>\r\n\r\n          </div>\r\n\r\n          </div>\r\n\r\n          </div>\r\n        </div>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\n\r\n\r\n// import 'firebase/storage';\r\n\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBSjXNfUFdgJn3qCJPG3qWd5WEBTBKCICU\",\r\n    authDomain: \"wahnilogin.firebaseapp.com\",\r\n    projectId: \"wahnilogin\",\r\n    storageBucket: \"wahnilogin.appspot.com\",\r\n    messagingSenderId: \"571694906479\",\r\n    appId: \"1:571694906479:web:908412aa21b16453d7619a\"\r\n};\r\n\r\nif (!firebase.apps.length) {\r\n    firebase.initializeApp(firebaseConfig);\r\n}\r\n\r\n// export cons \r\n\r\nexport default firebase","import React, { useContext, useEffect, useCallback, useState } from 'react';\r\nimport firebase from '../../firebase'\r\n\r\n\r\nconst defaultUser = { loggedIn: false, email: \"\" };\r\nexport const UserContext = React.createContext({});\r\n\r\nconst UserProvider = UserContext.Provider;\r\nconst UserConsumer = UserContext.Consumer;\r\n\r\n// function onAuthStateChange(callback) {\r\n// make sure user register or login\r\n// }\r\n\r\n  // user is added or logged in and sent to all the components of this site through this context\r\n\r\n\r\nexport function UserContextProvider(props) {\r\n\r\n  const [user, setUser] = useState({ loggedIn: false });\r\n\r\n  function onAuthStateChange() {\r\n    return firebase.auth().onAuthStateChanged(user1 => {\r\n      if (user1) {\r\n        setUser({ loggedIn: true, email: user1.email, name: user1.displayName, id: user1.uid, number: user1.phoneNumber });\r\n      } else {\r\n        setUser({ loggedIn: false });\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  // on useEffect user is authorized and user details are set and sent via context API to all components\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onAuthStateChange();\r\n    return () => {\r\n      unsubscribe();\r\n    }\r\n  }, []);\r\n  \r\n  return (\r\n    <UserProvider value={user}>\r\n    {props.children}      \r\n    </UserProvider>\r\n  );\r\n}\r\n\r\n","import React, { useState, useContext } from 'react';\r\n// import { UserContext } from '../context/user1Context';\r\nimport Profile from '../Profile/profile'\r\nimport firebase from '../../firebase'\r\nimport { UserContext } from '../context/user1Context';\r\n\r\n\r\n\r\nimport './app.css'\r\n\r\n\r\nfunction Login() {\r\n\r\n  const [inputName, setInputName] = useState('')\r\n  const [inputNumber1, setInputNumber1] = useState('')\r\n  const [inputNumber2, setInputNumber2] = useState('')\r\n\r\n  // const user = useContext(UserContext);\r\n\r\n  const setUpRecaptcha = () => {\r\n    window.recaptchaVerifier = new firebase.auth.RecaptchaVerifier(\r\n      'recaptcha-container',\r\n      {\r\n        'size': 'normal',\r\n        'callback': function (response) {\r\n          // reCAPTCHA solved, allow signInWithPhoneNumber.\r\n          console.log('recaptcha solved')\r\n          onSignInSubmit();\r\n        }\r\n      });\r\n  }\r\n\r\n\r\n  const onSignInSubmit = (number, name) => {\r\n\r\n    setUpRecaptcha();\r\n    // var phoneNumber = getPhoneNumberFromUserInput();\r\n    console.log(number)\r\n    var phoneNumber = '+' + number;\r\n    var appVerifier = window.recaptchaVerifier;\r\n    firebase\r\n      .auth()\r\n      .signInWithPhoneNumber(phoneNumber, appVerifier)\r\n      .then(function (confirmationResult) {\r\n        // SMS sent. Prompt user to type the code from the message, then sign the\r\n        // user in with confirmationResult.confirm(code).\r\n        console.log('get OTP initiated')\r\n\r\n        // afterGETotp(confirmationResult)\r\n\r\n        window.confirmationResult = confirmationResult;\r\n        // step4\r\n        var code = window.prompt('Enter OTP');\r\n        // var code = getCodeFromUserInput();\r\n        confirmationResult.confirm(code).then(function (result) {\r\n          // User signed in successfully.\r\n          alert('You are successfully signed In')\r\n\r\n          if(name) {\r\n            firebase.auth().currentUser.updateProfile({ displayName: name })\r\n          } else {\r\n            console.log('not updated')\r\n          }\r\n\r\n          setInputName('')\r\n          setInputNumber1('')\r\n          setInputNumber2('')\r\n          // ...\r\n        }).catch(function (error) {\r\n          // User couldn't sign in (bad verification code?)\r\n          // ...\r\n          alert(error)\r\n          window.location.reload();\r\n        });\r\n        \r\n      }).catch(function (error) {\r\n        // Error; SMS not sent\r\n        // console.log(error)\r\n        alert(error)\r\n        window.location.reload();\r\n      });\r\n  }\r\n\r\n  \r\n\r\n  \r\n\r\n  function logout() {\r\n    firebase.auth().signOut();\r\n    console.log('loggedout')\r\n  };\r\n\r\n\r\n  // confirm if user is available\r\n  const user = useContext(UserContext);\r\n\r\n\r\n\r\n  const [loginClicked, setLoginClicked] = useState(false);\r\n  const [registerClicked, setRegisterClicked] = useState(false);\r\n\r\n  const loginContainer1 = registerClicked ? 'login-container loginresponsive' : 'login-container loginresponsive hide-login';\r\n  const headerContainer1 = registerClicked ? 'header' : 'header headerHover';\r\n  const inputContainer1 = registerClicked ? 'input-container' : 'input-container hide-section';\r\n\r\n  const loginContainer2 = loginClicked ? 'login-container loginresponsive' : 'login-container loginresponsive hide-login';\r\n  const headerContainer2 = loginClicked ? 'header' : 'header headerHover';\r\n  const inputContainer2 = loginClicked ? 'input-container' : 'input-container hide-section';\r\n\r\n\r\n  function handleRegisterClick(e) {\r\n    setRegisterClicked(true)\r\n    setLoginClicked(false)\r\n  }\r\n  function handleLoginClick(e) {\r\n    setRegisterClicked(false)\r\n    setLoginClicked(true)\r\n  }\r\n\r\n  // if user is logged in we show profile else we show register or login page\r\n\r\n  if (!user.loggedIn) {\r\n    return (\r\n      <div className='body'>\r\n        <img src=\"https://image.flaticon.com/icons/png/512/2922/2922532.png\" alt=\"\" />\r\n        <p className='descriptionText'></p>\r\n        <div className={loginContainer1}>\r\n          <form className='form' onSubmit={(e) => e.preventDefault()}>\r\n            <div className={headerContainer1} onClick={handleRegisterClick}>R E G I S T E R</div>\r\n            <div className={inputContainer1}>\r\n            \r\n              <p>\r\n              <p className='inputDescription'>Name</p>\r\n              <input type=\"text\" value={inputName} onChange={e => setInputName(e.target.value)} placeholder=\"Your name (e.g. John)\" name=\"name\" />\r\n              </p>\r\n\r\n              <p>\r\n              <p className='inputDescription'>Number</p>\r\n              <input type=\"number\" value={inputNumber1} onChange={e => setInputNumber1(e.target.value)} placeholder=\"Country code + Number (e.g. 918456154658)\" name=\"mobile\" />\r\n              </p>\r\n              <p onClick={() => onSignInSubmit(inputNumber1, inputName)} className='button1'>SIGN UP</p>\r\n            </div>\r\n          </form>\r\n        </div>\r\n\r\n        <div id=\"recaptcha-container\"></div>\r\n\r\n        <div className={loginContainer2}>\r\n          <form className='form' onSubmit={(e) => e.preventDefault()}>\r\n            <div className={headerContainer2} onClick={handleLoginClick}>L O G I N</div>\r\n            <div className={inputContainer2}>\r\n              <p>\r\n              <p className='inputDescription'>Mobile Number</p>\r\n              <input value={inputNumber2} onChange={e => setInputNumber2(e.target.value)} type=\"number\" placeholder=\"Country code + Number (e.g. 918456154658)\" name=\"mobile\" />\r\n              </p>\r\n              <p className='button1' type='button' onClick={() => onSignInSubmit(inputNumber2)}>SIGN IN</p>\r\n             \r\n\r\n\r\n            </div>\r\n\r\n          </form>\r\n        </div>\r\n      \r\n      </div>\r\n\r\n    );\r\n  } else {\r\n    return (\r\n      <div>\r\n        <Profile user={user} logout={logout} />\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './navbar.css'\r\n\r\nfunction Navbar() {\r\n   \r\n    return (\r\n        <div>\r\n        <nav className=\"navContainer\">\r\n            <Link to='/myAccount' className=\"navLinks\">My Account</Link>\r\n            <Link to='/Quiz' className=\"navLinks\">Quiz</Link>\r\n        </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Navbar","import React, { useState, useContext} from 'react';\r\nimport { UserContext } from './context/user1Context';\r\n\r\n\r\nfunction Home() {\r\n    const user = useContext(UserContext);\r\n\r\n    return (\r\n        <div>\r\n            <h1>WahniHome</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nfunction Timer(props) {\r\n\r\n    const [duration, setDuration] = useState(30);\r\n\r\n    const { timeOver, setTimeOver } = props;\r\n\r\n    useEffect(() => {\r\n       \r\n            const interval = setInterval(() => {\r\n                if (!timeOver) {\r\n                    setDuration(duration => duration - 1);\r\n                }\r\n    \r\n              }, 1000);\r\n\r\n              setTimeout(\r\n                  () => {\r\n                      setTimeOver(true)\r\n                      setDuration('TIME OUT')\r\n                        }\r\n                , 30000);\r\n\r\n            return () => clearInterval(interval);\r\n        \r\n      }, [timeOver]);\r\n\r\n    const [started, setStarted] = useState(false);\r\n\r\n  return (\r\n   \r\n    <div>\r\n        {duration}\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default Timer;\r\n","import React, { useState } from 'react'\r\nimport Timer from './timer';\r\n\r\n\r\nfunction QuestionCard(props) {\r\n\r\n    const { currentQuestion, questions, prevQ, nextQ, submitQ, numberOfQ } = props\r\n\r\n    const [selectedAnswer, setSelectedAnswer] = useState([]);\r\n    const [correctAnswer, setCorrectAnswer] = useState([]);\r\n\r\n    const [timeOver, setTimeOver] = useState(false);\r\n\r\n\r\n\r\n    function selectedTrue(clickedAnswer, indexure) {\r\n        if (clickedAnswer === selectedAnswer[indexure]) {\r\n            return 'button-selected'\r\n        }\r\n    }\r\n\r\n    function newSelectedAnswerArray(answer, indexure, isCorrect) {\r\n        const newArray = [...selectedAnswer];\r\n        newArray[indexure] = answer;\r\n        setSelectedAnswer(newArray)\r\n\r\n        const newArray1 = [...correctAnswer];\r\n        newArray1[indexure] = isCorrect;\r\n        setCorrectAnswer(newArray1)\r\n    }\r\n\r\n\r\n    if (timeOver) {\r\n        return (\r\n            \r\n            <div className='timeout'>\r\n\r\n                    <div className='score-header'>TIMEOUT !!!</div>\r\n                    \r\n                    <div>\r\n                        <div className='button1' onClick={() => submitQ(correctAnswer.filter(data => data === true).length)}>Click to see Score</div>\r\n\r\n                    </div>\r\n                    </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className='question-container'>\r\n                <div className='question-section'>\r\n                    <div className='question-count-timer'>\r\n                    <div className='question-count'>\r\n                    <span>Question {currentQuestion + 1}</span>/ {numberOfQ}\r\n                    </div>\r\n                        <div className='timer'>\r\n                        <Timer timeOver={timeOver} setTimeOver={setTimeOver} />\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className='question-text'>{questions.questionText}</div>\r\n                </div>\r\n                <div className='answer-section'>\r\n                    {questions.answerOptions.map((answerOption) => (\r\n                        <button className={selectedTrue(answerOption.answerText, currentQuestion)} id='answerButton' onClick={() => {\r\n                            newSelectedAnswerArray(answerOption.answerText, currentQuestion, answerOption.isCorrect);\r\n                        }}>\r\n                            {answerOption.answerText}\r\n                        </button>\r\n                    ))}\r\n                </div>\r\n\r\n                <div className='submitButtonContainer'>\r\n                    <div className='submitButton' onClick={() => submitQ(correctAnswer.filter(data => data === true).length)}>Submit</div>\r\n                </div>\r\n\r\n                <div className='next-and-prev-buttonsContainer'>\r\n                    <div className='button1' onClick={prevQ}>Go back</div>\r\n                    <div className='button1' onClick={nextQ}>Next</div>\r\n                </div>\r\n\r\n                \r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default QuestionCard;\r\n","import { Redirect, Link } from 'react-router-dom';\r\nimport React, {useState, useContext } from 'react';\r\nimport { UserContext } from '../context/user1Context';\r\nimport './quizScreen.css';\r\nimport QuestionCard from './questionCard'\r\n\r\nfunction Home() {\r\n\r\n    // inside useEffect we use fetch API to call in the questions and save in const questions\r\n\r\n    // useEffect(() => {\r\n    //     effect\r\n    //     return () => {\r\n    //         cleanup\r\n    //     }\r\n    // }, [input])\r\n\r\n    // useContext is used to confirm if a user is loggedIn\r\n    const user = useContext(UserContext);\r\n\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n    const [showScore, setShowScore] = useState(false);\r\n    \r\n    const [score, setScore] = useState(0);    \r\n    \r\n    // receive score hsitory from backend to send both score and percentage increase to backend for rankings\r\n\r\n    const questions = [\r\n\t\t{\r\n\t\t\tquestionText: 'What is the capital of France?',\r\n\t\t\tanswerOptions: [\r\n\t\t\t\t{ answerText: 'New York', isCorrect: false },\r\n\t\t\t\t{ answerText: 'London', isCorrect: false },\r\n\t\t\t\t{ answerText: 'Paris', isCorrect: true },\r\n\t\t\t\t{ answerText: 'Dublin', isCorrect: false },\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\tquestionText: 'Who is CEO of Tesla?',\r\n\t\t\tanswerOptions: [\r\n\t\t\t\t{ answerText: 'Jeff Bezos', isCorrect: false },\r\n\t\t\t\t{ answerText: 'Elon Musk', isCorrect: true },\r\n\t\t\t\t{ answerText: 'Bill Gates', isCorrect: false },\r\n\t\t\t\t{ answerText: 'Tony Stark', isCorrect: false },\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\tquestionText: 'The iPhone was created by which company?',\r\n\t\t\tanswerOptions: [\r\n\t\t\t\t{ answerText: 'Apple', isCorrect: true },\r\n\t\t\t\t{ answerText: 'Intel', isCorrect: false },\r\n\t\t\t\t{ answerText: 'Amazon', isCorrect: false },\r\n\t\t\t\t{ answerText: 'Microsoft', isCorrect: false },\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\tquestionText: 'How many Harry Potter books are there?',\r\n\t\t\tanswerOptions: [\r\n\t\t\t\t{ answerText: '1', isCorrect: false },\r\n\t\t\t\t{ answerText: '4', isCorrect: false },\r\n\t\t\t\t{ answerText: '6', isCorrect: false },\r\n\t\t\t\t{ answerText: '7', isCorrect: true },\r\n\t\t\t],\r\n\t\t},\r\n\t];\r\n\r\n\t\r\n\r\n\r\n    function nextQ() { \r\n        const nextQuestion = currentQuestion + 1;\r\n        if (nextQuestion < questions.length) {\r\n\t\t\tsetCurrentQuestion(nextQuestion);\r\n\t\t}\r\n    }\r\n    function prevQ() {\r\n        if (currentQuestion > 0) {\r\n            const nextQuestion = currentQuestion - 1;\r\n        setCurrentQuestion(nextQuestion);\r\n        }\r\n    }\r\n\r\n    function submitQ(score) {\r\n        setShowScore(true);\r\n        setScore(score)\r\n\r\n        // score with user id is sent to backEnd to store with new Date()\r\n    }\r\n\r\n    // if there is no user logged in this is redirected to myAccount for login or register\r\n\r\n    if (!user) return <Redirect to='/myAccount' />\r\n\r\n    if (user) {\r\n        return (\r\n        <div className='appContainer'>\r\n                {showScore ? (\r\n                    <div className='app score'>\r\n                    <div className='score-header'>Congratulations !!!</div>\r\n                    <div className='score-message'>\r\n                    You scored {score} out of {questions.length}\r\n                    </div>\r\n                    <div>\r\n                        <Link className='link button1' to='/Quiz'>Retry</Link>\r\n                    </div>\r\n                    </div>\r\n\r\n                ) : (\r\n                    <div className='app'>\r\n                        <QuestionCard \r\n                            currentQuestion={currentQuestion} \r\n                            questions={questions[currentQuestion]} \r\n                            prevQ={prevQ} \r\n                            nextQ={nextQ}\r\n                            submitQ={submitQ}\r\n                            numberOfQ={questions.length} />\r\n                    </div>\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n\t\r\n}\r\n\r\nexport default Home;\r\n","import { Link } from 'react-router-dom';\r\nimport React from 'react';\r\nimport './quizScreen.css';\r\n\r\nfunction Home() {\r\n    \r\n\r\n        return (\r\n            <div className='appContainer'>\r\n            <div className='quizScreenContainer'>\r\n            \r\n            \r\n            <Link className='quizNavContainer link' to='/Quiz/play'>\r\n            <img src=\"https://image.flaticon.com/icons/png/512/27/27223.png\" alt=\"\" />\r\n            <div className='quizScreenText'>PLAY</div>\r\n            </Link>\r\n\r\n            <Link className='quizNavContainer link' to='/Quiz/ranking'>\r\n            <img src=\"https://image.flaticon.com/icons/png/512/13/13815.png\" alt=\"\" />\r\n            <div className='quizScreenText'>RANKINGS</div>\r\n            </Link>\r\n\r\n            \r\n            </div>\r\n            </div>\r\n        )\r\n    \r\n\t\r\n}\r\n\r\nexport default Home;\r\n","import React, { useState } from 'react'\r\nimport './rankingScreen.css'\r\nimport '../Registration/app.css'\r\n\r\nfunction RankingScreen() {\r\n\r\n    // receive scores from backend\r\n\r\n    const rankings = [\r\n        {\r\n            userid: '11111',\r\n            username: 'AAAAA',\r\n            scores: [\r\n                {\r\n                    submittedAt: 1,\r\n                    score: '5',\r\n                    percentageIncrease: '25'\r\n\r\n                },\r\n                {\r\n                    submittedAt: 2,\r\n                    score: '10',\r\n                    percentageIncrease: '50'\r\n\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            userid: '22222',\r\n            username: 'BBBBB',\r\n            scores: [\r\n                {\r\n                    submittedAt: 1,\r\n                    score: '45',\r\n                    percentageIncrease: '56'\r\n\r\n                },\r\n                {\r\n                    submittedAt: 2,\r\n                    score: '5',\r\n                    percentageIncrease: '45'\r\n\r\n                },\r\n            ]\r\n        },\r\n        {\r\n            userid: '33333',\r\n            username: 'CCCCC',\r\n            scores: [\r\n                {\r\n                    submittedAt: 1,\r\n                    score: '23',\r\n                    percentageIncrease: '45'\r\n\r\n                },\r\n                {\r\n                    submittedAt: 2,\r\n                    score: '56',\r\n                    percentageIncrease: '13'\r\n\r\n                },\r\n            ]\r\n        },\r\n        {\r\n            userid: '44444',\r\n            username: 'DDDDD',\r\n            scores: [\r\n                {\r\n                    submittedAt: 1,\r\n                    score: '55',\r\n                    percentageIncrease: '12'\r\n                },\r\n                {\r\n                    submittedAt: 2,\r\n                    score: '8',\r\n                    percentageIncrease: '16'\r\n\r\n                },\r\n            ]\r\n        },\r\n        {\r\n            userid: '55555',\r\n            username: 'EEEEE',\r\n            scores: [\r\n                {\r\n                    submittedAt: 1,\r\n                    score: '63',\r\n                    percentageIncrease: '32'\r\n                },\r\n                {\r\n                    submittedAt: 2,\r\n                    score: '80',\r\n                    percentageIncrease: '60'\r\n                },\r\n            ]\r\n        },\r\n\r\n    ]\r\n   \r\n    const [loginClicked, setLoginClicked] = useState(false);\r\n    const [registerClicked, setRegisterClicked] = useState(false);\r\n    const [logoutClicked, setLogoutClicked] = useState(false);\r\n    \r\n    const [topScores, setTopScores] = useState([]);\r\n    const [mostAttempts, setMostAttempts] = useState([]);\r\n    const [highestPercentage, setHighestPercentage] = useState([]);\r\n  \r\n    const loginContainer1 = registerClicked ? 'login-container loginresponsive': 'login-container loginresponsive hide-login';\r\n    const headerContainer1 = registerClicked ? 'header': 'header headerHover';\r\n    const rankTable1 = registerClicked ? 'rankTable' : 'rankTable hide-section';\r\n  \r\n    const loginContainer2 = loginClicked ? 'login-container loginresponsive': 'login-container loginresponsive hide-login';\r\n    const headerContainer2 = loginClicked ? 'header': 'header headerHover';\r\n    const rankTable2 = loginClicked ? 'rankTable' : 'rankTable hide-section';\r\n\r\n    const loginContainer3 = logoutClicked ? 'login-container loginresponsive': 'login-container loginresponsive hide-login';\r\n    const headerContainer3 = logoutClicked ? 'header': 'header headerHover';\r\n    const rankTable3 = logoutClicked ? 'rankTable' : 'rankTable hide-section';\r\n    \r\n    function topScore() {\r\n        const newArray = [];\r\n        rankings.map(data => {\r\n            data.scores.map(data1 => {\r\n                newArray.push(\r\n                    {\r\n                        name: data.username,\r\n                        score: data1.score\r\n                    }\r\n                )\r\n            })\r\n        })\r\n        setTopScores(newArray.sort((a,b) => (parseInt(b.score) > parseInt(a.score)) ? 1 : -1))\r\n    }\r\n\r\n    function mostAttempt() {\r\n        const newArray = [];\r\n        rankings.map(data => newArray.push({\r\n            name: data.username,\r\n            attempts: data.scores.length\r\n        }))\r\n        setMostAttempts(newArray.sort((a,b) => (parseInt(b.attempts) > parseInt(a.attempts)) ? 1 : -1))\r\n    }\r\n\r\n    function percentageHighest() {\r\n        const newArray = [];\r\n        rankings.map(data => {\r\n            data.scores.map(data1 => {\r\n                newArray.push(\r\n                    {\r\n                        name: data.username,\r\n                        percentage: data1.percentageIncrease\r\n                    }\r\n                )\r\n            })\r\n        })\r\n        setHighestPercentage(newArray.sort((a,b) => (parseInt(b.percentage) > parseInt(a.percentage)) ? 1 : -1))\r\n    }\r\n\r\n    function handleRegisterClick(e) {\r\n      setRegisterClicked(true)\r\n      setLoginClicked(false)\r\n      setLogoutClicked(false)\r\n      topScore()\r\n    }\r\n    function handleLoginClick(e) {\r\n      setRegisterClicked(false)\r\n      setLogoutClicked(false)\r\n      setLoginClicked(true)\r\n      mostAttempt()\r\n    }\r\n    function handleLogoutClick(e) {\r\n      setRegisterClicked(false)\r\n      setLogoutClicked(true)\r\n      setLoginClicked(false)\r\n      percentageHighest()\r\n    }\r\n  \r\n    // if user is logged in we show profile else we show register or login page\r\n  \r\n    \r\n      return (\r\n        <div className='body'>\r\n          <div className={loginContainer1}>\r\n            <div className='form'>\r\n            <div className={headerContainer1} onClick={handleRegisterClick}>TOP SCORES</div>\r\n              <div className={rankTable1}>\r\n              <div className='singleInputContainer headContainer'>\r\n                  <div className='rankText text'>Rank</div>\r\n                  <div className='nameText text'>Name</div>\r\n                  <div className='scoreText text'>Score</div>\r\n                  </div>\r\n              \r\n                  {\r\n                      topScores.slice(0,5).map((data, index) => {\r\n                          return (\r\n                <div className='singleInputContainer'>\r\n                  <div className='rankText text'>{index + 1}</div>\r\n                  <div className='nameText text'>{data.name}</div>\r\n                  <div className='scoreText text'>{data.score}</div>\r\n                  \r\n                  </div>\r\n                          )\r\n                      })\r\n                  }\r\n              </div>\r\n            </div>\r\n\r\n\r\n          </div>\r\n          <div className={loginContainer2}>\r\n            <div className='form'>\r\n            <div className={headerContainer2} onClick={handleLoginClick}>MOST ATTEMPTS</div>\r\n              <div className={rankTable2}>\r\n              <div className='singleInputContainer headContainer'>\r\n                  <div className='rankText text'>Rank</div>\r\n                  <div className='nameText text'>Name</div>\r\n                  <div className='scoreText text'>Attempts</div>\r\n                  </div>\r\n                  {\r\n                      mostAttempts.slice(0,5).map((data, index) => {\r\n                          return (\r\n                <div className='singleInputContainer'>\r\n                  <div className='rankText text'>{index + 1}</div>\r\n                  <div className='nameText text'>{data.name}</div>\r\n                  <div className='scoreText text'>{data.attempts}</div>\r\n                  \r\n                  </div>\r\n                          )\r\n                      })\r\n                  }\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className={loginContainer3}>\r\n            <div className='form'>\r\n            <div className={headerContainer3} onClick={handleLogoutClick}>TOP PERFORMERS</div>\r\n              <div className={rankTable3}>\r\n              <div className='singleInputContainer headContainer'>\r\n                  <div className='rankText text'>Rank</div>\r\n                  <div className='nameText text'>Name</div>\r\n                  <div className='scoreText text'>% increase</div>\r\n                  </div>\r\n                  {\r\n                      highestPercentage.slice(0,5).map((data, index) => {\r\n                          return (\r\n                <div className='singleInputContainer'>\r\n                  <div className='rankText text'>{index + 1}</div>\r\n                  <div className='nameText text'>{data.name}</div>\r\n                  <div className='scoreText text'>{data.percentage}</div>\r\n                  \r\n                  </div>\r\n                          )\r\n                      })\r\n                  }\r\n              </div>\r\n            </div>\r\n          </div>\r\n    \r\n          \r\n        </div>\r\n    \r\n      );\r\n}\r\n\r\n\r\nexport default RankingScreen","import MyAccount from './components/Registration/myAccount'\nimport { BrowserRouter, Switch, Route, HashRouter } from 'react-router-dom';\nimport Navbar from './components/Layout/navbar'\nimport Home from './components/home'\nimport QuizPlay from './components/Quiz/quizPlay'\nimport Quiz from './components/Quiz/quizScreen'\nimport RankingScreen from './components/Ranking/rankingScreen'\nimport { UserContextProvider } from './components/context/user1Context';\n\n\n\n\nfunction App() {\n  return (\n    \n    <HashRouter>\n      <Navbar />\n      <Switch>\n      <UserContextProvider>\n        <Route exact path='/' component={Home} />\n          <Route exact path='/myAccount' component={MyAccount} />\n          <Route exact path='/Quiz' component={Quiz} />\n          <Route exact path='/Quiz/play' component={QuizPlay} />\n          <Route exact path='/Quiz/ranking' component={RankingScreen} />\n        </UserContextProvider>\n      </Switch>\n    </HashRouter>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}