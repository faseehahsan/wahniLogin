{"version":3,"sources":["firebase.js","components/Profile/profile.js","components/context/user1Context.js","components/Registration/myAccount.js","components/Layout/navbar.js","components/home.js","components/context/questionsContext.js","components/Quiz/timer.js","components/Quiz/questionCard.js","components/Quiz/quizPlay.js","components/Quiz/quizScreen.js","components/Ranking/rankingScreen.js","components/questionsScreen/showQuestions.js","components/questionsScreen/addDelQs.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","apps","length","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","Profile","props","user","logout","completeProfile","useState","url","setUrl","imageLoading","setImageLoading","profilePicUpdate","file","storage","ref","id","put","then","ell","child","getDownloadURL","url1","console","log","auth","currentUser","updateProfile","photoURL","catch","err","alert","useEffect","name","className","src","alt","type","title","onChange","e","target","files","for","style","alignSelf","initialValues","nameInput","onSubmit","values","validationSchema","Yup","shape","required","touched","errors","handleChange","dirty","isSubmitting","handleBlur","handleSubmit","handleReset","placeholder","value","onBlur","marginLeft","display","justifyContent","paddingTop","number","onClick","UserContext","React","createContext","UserProvider","Provider","Consumer","UserContextProvider","loggedIn","setUser","unsubscribe","onAuthStateChanged","user1","email","displayName","uid","phoneNumber","children","Login","axios","get","response","data","country_name","error","useContext","setInputName","inputNumber2","setInputNumber2","history","useHistory","setUpRecaptcha","window","recaptchaVerifier","RecaptchaVerifier","onSignInSubmit","appVerifier","signInWithPhoneNumber","confirmationResult","code","prompt","confirm","result","push","location","reload","signOut","preventDefault","Navbar","to","Home","QuestionContext","QuestionProvider","QuestionContextProvider","questionText","answerOptions","answerText","isCorrect","qs","setqs","Timer","duration","setDuration","timeOver","setTimeOver","interval","setInterval","setTimeout","clearInterval","QuestionCard","currentQuestion","questions","prevQ","nextQ","submitQ","numberOfQ","selectedAnswer","setSelectedAnswer","correctAnswer","setCorrectAnswer","selectedTrue","clickedAnswer","indexure","filter","map","answerOption","answer","newArray","newArray1","newSelectedAnswerArray","setCurrentQuestion","showScore","setShowScore","isLoading","setIsLoading","Math","floor","random","score","setScore","setQuestions","selected","sort","slice","nextQuestion","RankingScreen","rankings","userid","username","scores","submittedAt","percentageIncrease","loginClicked","setLoginClicked","registerClicked","setRegisterClicked","logoutClicked","setLogoutClicked","topScores","setTopScores","mostAttempts","setMostAttempts","highestPercentage","setHighestPercentage","loginContainer1","headerContainer1","rankTable1","loginContainer2","headerContainer2","rankTable2","loginContainer3","headerContainer3","rankTable3","data1","a","b","parseInt","topScore","index","attempts","mostAttempt","percentage","percentageHighest","ShowQ","fontWeightConst","iscorrect","AnswersView","answers","i","color","fontWeight","QuestionsView","q","AddDel","questionInput","optionA","optionB","optionC","optionD","correct","val","newQ","newqsArray","handleFormSubmit","min","htmlFor","label","App","exact","path","component","MyAccount","Quiz","QuizPlay","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a650b5d4.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\n\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\nimport 'firebase/storage';\r\n\r\n\r\n// import 'firebase/storage';\r\n\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBSjXNfUFdgJn3qCJPG3qWd5WEBTBKCICU\",\r\n    authDomain: \"wahnilogin.firebaseapp.com\",\r\n    projectId: \"wahnilogin\",\r\n    storageBucket: \"wahnilogin.appspot.com\",\r\n    messagingSenderId: \"571694906479\",\r\n    appId: \"1:571694906479:web:908412aa21b16453d7619a\"\r\n};\r\n\r\nif (!firebase.apps.length) {\r\n    firebase.initializeApp(firebaseConfig);\r\n}\r\n\r\n// export cons \r\n\r\nexport default firebase","import React, {useState, useEffect} from 'react';\r\nimport firebase from '../../firebase'\r\n// import * as firebase from 'firebase';\r\n\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport \"../questionsScreen/questionScreen.css\";\r\n\r\n\r\n\r\n\r\nfunction Profile(props) {\r\n\r\n  \r\n  const { user, logout, completeProfile }  = props;\r\n  const [url, setUrl] = useState();\r\n  const [imageLoading, setImageLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setImageLoading(true);\r\n    if(user.photoURL !== null) {\r\n    setUrl(user.photoURL)\r\n    } else {\r\n      setUrl('https://image.flaticon.com/icons/png/512/2922/2922532.png')\r\n    };\r\n    setImageLoading(false)\r\n  }, [])\r\n\r\n  function profilePicUpdate(file) {\r\n    setImageLoading(true);\r\n    firebase.storage().ref('users/' + user.id + '.jpg').put(file).then(ell => {\r\n      getURL()\r\n    }).catch(err => {\r\n      alert(err);\r\n      setImageLoading(false)\r\n    })\r\n  }\r\n\r\n  function getURL() {\r\n    firebase.storage().ref().child(\"users/\" + user.id + '.jpg').getDownloadURL().then(url1 => {\r\n      console.log(url1);\r\n      setUrl(url1);\r\n      setImageLoading(false);\r\n      firebase.auth().currentUser.updateProfile({\r\n        photoURL: url1\r\n      });\r\n    }).catch(err => {\r\n      alert(err);\r\n      setImageLoading(false)\r\n    })\r\n  }\r\n\r\n  if (user.name === null || user.name === '') {\r\n    return(\r\n      <div className='body'>\r\n      <div className='login-container loginresponsive profileContainer'>\r\n        <div className='form'>\r\n        <div className='profileImageContainer'>\r\n        {\r\n          imageLoading ? <img src='https://media4.giphy.com/media/3oEjI6SIIHBdRxXI40/giphy.gif' alt=\"\" /> : <img src={url} alt=\"\" />\r\n\r\n        }\r\n        \r\n        <input type='file' title='hello' id='files' onChange={e => profilePicUpdate(e.target.files[0])} />\r\n        <label for=\"files\" className='labelForFile'>Edit Avatar</label>\r\n\r\n        </div>\r\n\r\n        <div className='profileDetailsContainer'>\r\n        <h2 style={{alignSelf:'center'}}>Complete Your Profile</h2>\r\n\r\n        <Formik\r\n            initialValues={{\r\n              nameInput: \"\",\r\n            }}\r\n            onSubmit={(values) => completeProfile(values.nameInput)}\r\n            validationSchema={Yup.object().shape({\r\n              nameInput: Yup.string().required(\"*this is a required field\"),\r\n            })}\r\n          >\r\n            {(props) => {\r\n              const {\r\n                values,\r\n                touched,\r\n                errors,\r\n                dirty,\r\n                isSubmitting,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n                handleReset,\r\n              } = props;\r\n              return (\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className='labelClass'>Enter Name</div>\r\n\r\n                  <input\r\n                    id=\"nameInput\"\r\n                    placeholder=\"e.g. John\"\r\n                    type=\"text\"\r\n                    value={values.nameInput}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={\r\n                      errors.nameInput && touched.nameInput\r\n                        ? \"text-input error\"\r\n                        : \"text-input\"\r\n                    }\r\n                  />\r\n                  <div style={{marginLeft: '8%'}}>\r\n                  {errors.nameInput && touched.nameInput && (\r\n                    <div className=\"input-feedback\">{errors.nameInput}</div>\r\n                  )}\r\n                  </div>\r\n\r\n                  \r\n                  <div style={{display:'flex', justifyContent:'center', paddingTop:'20px'}}>\r\n                  <button type=\"submit\" className='submitButton1'>SAVE PROFILE</button>\r\n                  </div>\r\n                </form>\r\n              );\r\n            }}\r\n          </Formik>\r\n\r\n        </div>\r\n\r\n        </div>\r\n      </div>\r\n  </div>\r\n    )\r\n  } else {\r\n    return (\r\n      <div className='body'>\r\n      <div className='login-container loginresponsive profileContainer'>\r\n        <div className='form'>\r\n        <div className='profileImageContainer'>\r\n        {\r\n          imageLoading ? <img src='https://media4.giphy.com/media/3oEjI6SIIHBdRxXI40/giphy.gif' alt=\"\" /> : <img src={url} alt=\"\" />\r\n\r\n        }\r\n        \r\n        <input type='file' title='hello' id='files' onChange={e => profilePicUpdate(e.target.files[0])} />\r\n        <label for=\"files\" className='labelForFile'>Edit Avatar</label>\r\n\r\n        </div>\r\n        <div className='profileDetailsContainer'>\r\n        <div>\r\n        <p className='profileText'>Name: {user.name}</p>\r\n        <p className='profileText'>Phone No.: {user.number}</p>\r\n        <p className='profileText'>No. of Attempts: </p>\r\n        <p className='profileText'>Highest Score: </p>\r\n        <p className='button1' type='button' onClick={() => logout()}>LOGOUT</p>\r\n\r\n        </div>\r\n\r\n        </div>\r\n\r\n        </div>\r\n      </div>\r\n  </div>\r\n    );\r\n\r\n  }\r\n\r\n}\r\n\r\nexport default Profile;\r\n","import React, { useContext, useEffect, useCallback, useState } from 'react';\r\nimport firebase from '../../firebase'\r\n\r\n\r\nconst defaultUser = { loggedIn: false, email: \"\" };\r\nexport const UserContext = React.createContext({});\r\n\r\nconst UserProvider = UserContext.Provider;\r\nconst UserConsumer = UserContext.Consumer;\r\n\r\n// function onAuthStateChange(callback) {\r\n// make sure user register or login\r\n// }\r\n\r\n  // user is added or logged in and sent to all the components of this site through this context\r\n\r\n\r\nexport function UserContextProvider(props) {\r\n\r\n  const [user, setUser] = useState({ loggedIn: false });\r\n\r\n  function onAuthStateChange() {\r\n    return firebase.auth().onAuthStateChanged(user1 => {\r\n      if (user1) {\r\n        setUser({ loggedIn: true, \r\n                  email: user1.email, \r\n                  name: user1.displayName, \r\n                  id: user1.uid, \r\n                  number: user1.phoneNumber,\r\n                  photoURL: user1.photoURL });\r\n      } else {\r\n        setUser({ loggedIn: false });\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  // on useEffect user is authorized and user details are set and sent via context API to all components\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onAuthStateChange();\r\n    return () => {\r\n      unsubscribe();\r\n    }\r\n  }, []);\r\n  \r\n  return (\r\n    <UserProvider value={user}>\r\n    {props.children}      \r\n    </UserProvider>\r\n  );\r\n}\r\n\r\n","import React, { useState, useContext, useEffect } from 'react';\r\n// import { UserContext } from '../context/user1Context';\r\nimport Profile from '../Profile/profile'\r\nimport firebase from '../../firebase'\r\nimport { UserContext } from '../context/user1Context';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from 'axios'\r\n\r\n\r\n\r\n\r\n\r\nimport './app.css'\r\n\r\n\r\nfunction Login() {\r\n\r\n  useEffect(() => {\r\n      axios.get('https://ipapi.co/json/').then((response) => {\r\n          let data = response.data;\r\n          console.log(`countryName: ${data.country_name}`)\r\n      }).catch((error) => {\r\n          console.log(error);\r\n      });\r\n },[])\r\n\r\n  \r\n  // confirm if user is available\r\n  const user = useContext(UserContext);\r\n\r\n  const [inputName, setInputName] = useState('')\r\n  const [inputNumber2, setInputNumber2] = useState('')\r\n\r\n  const history = useHistory();\r\n\r\n\r\n  // const user = useContext(UserContext);\r\n\r\n  const setUpRecaptcha = () => {\r\n    window.recaptchaVerifier = new firebase.auth.RecaptchaVerifier(\r\n      'recaptcha-container',\r\n      {\r\n        'size': 'normal',\r\n        'callback': function (response) {\r\n          // reCAPTCHA solved, allow signInWithPhoneNumber.\r\n          console.log('recaptcha solved')\r\n          onSignInSubmit();\r\n        }\r\n      });\r\n  }\r\n\r\n\r\n  const onSignInSubmit = (number, name) => {\r\n\r\n    setUpRecaptcha();\r\n    // var phoneNumber = getPhoneNumberFromUserInput();\r\n    console.log(number)\r\n    var phoneNumber = '+' + number;\r\n    var appVerifier = window.recaptchaVerifier;\r\n    firebase\r\n      .auth()\r\n      .signInWithPhoneNumber(phoneNumber, appVerifier)\r\n      .then(function (confirmationResult) {\r\n        // SMS sent. Prompt user to type the code from the message, then sign the\r\n        // user in with confirmationResult.confirm(code).\r\n        console.log('get OTP initiated')\r\n\r\n        // afterGETotp(confirmationResult)\r\n\r\n        window.confirmationResult = confirmationResult;\r\n        // step4\r\n        var code = window.prompt('Enter OTP');\r\n        // var code = getCodeFromUserInput();\r\n        confirmationResult.confirm(code).then(function (result) {\r\n          // User signed in successfully.\r\n          alert('You are successfully signed In')\r\n\r\n          var user1 = firebase.auth().currentUser;\r\n          if(user1.displayName !== null || user1.displayName === '') {\r\n            history.push('/Quiz');\r\n          }\r\n\r\n          setInputName('')\r\n          setInputNumber2('')\r\n          // ...\r\n        }).catch(function (error) {\r\n          // User couldn't sign in (bad verification code?)\r\n          // ...\r\n          alert(error)\r\n          window.location.reload();\r\n        });\r\n        \r\n      }).catch(function (error) {\r\n        // Error; SMS not sent\r\n        // console.log(error)\r\n        alert(error)\r\n        window.location.reload();\r\n      });\r\n  }\r\n\r\n  function CompleteProfile(nameInput) {\r\n    firebase.auth().currentUser.updateProfile({displayName: nameInput}).then(function() {\r\n      history.push('/Quiz');\r\n     window.location.reload();\r\n    });\r\n    \r\n  }\r\n  \r\n\r\n  \r\n\r\n  function logout() {\r\n    firebase.auth().signOut();\r\n    console.log('loggedout')\r\n  };\r\n\r\n  // function profilePicUpdate(file) {\r\n  //   firebase.storage.ref('users/' + user.uid + '.jpg').put(file)\r\n  // }\r\n\r\n\r\n\r\n\r\n  // if user is logged in we show profile else we show register or login page\r\n\r\n  if (!user.loggedIn) {\r\n    return (\r\n      <div className='body'>\r\n        <img src=\"https://image.flaticon.com/icons/png/512/2922/2922532.png\" alt=\"\" />\r\n        <p className='descriptionText'></p>\r\n        \r\n\r\n\r\n        <div className='login-container loginresponsive'>\r\n          <form className='form' onSubmit={(e) => e.preventDefault()}>\r\n            <div className='header'>L O G I N</div>\r\n            <div className='input-container'>\r\n              <p>\r\n              <p className='inputDescription'>Mobile Number</p>\r\n              <input value={inputNumber2} onChange={e => setInputNumber2(e.target.value)} type=\"number\" placeholder=\"Country code + Number (e.g. 918456154658)\" name=\"mobile\" />\r\n              </p>\r\n              <p className='button1' type='button' onClick={() => onSignInSubmit(inputNumber2)}>SIGN IN</p>\r\n            </div>\r\n            <div id=\"recaptcha-container\"></div>\r\n\r\n\r\n          </form>\r\n        </div>\r\n      \r\n      </div>\r\n\r\n    );\r\n  } else {\r\n    return (\r\n      <div>\r\n        <Profile completeProfile={CompleteProfile} user={user} logout={logout} />\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './navbar.css'\r\n\r\nfunction Navbar() {\r\n   \r\n    return (\r\n        <div>\r\n        <nav className=\"navContainer\">\r\n            <Link to='/myAccount' className=\"navLinks\">My Account</Link>\r\n            <Link to='/Quiz' className=\"navLinks\">Quiz</Link>\r\n        </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Navbar","import React, { useState, useContext} from 'react';\r\nimport { UserContext } from './context/user1Context';\r\n\r\n\r\nfunction Home() {\r\n    const user = useContext(UserContext);\r\n\r\n    return (\r\n        <div>\r\n            <h1>WahniHome</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","import React, { useContext, useEffect, useCallback, useState } from 'react';\n\n\nexport const QuestionContext = React.createContext({});\n\nconst QuestionProvider = QuestionContext.Provider;\nconst QuestionConsumer = QuestionContext.Consumer;\n\n// function onAuthStateChange(callback) {\n// make sure user register or login\n// }\n\n  // user is added or logged in and sent to all the components of this site through this context\n\n\nexport function QuestionContextProvider(props) {\n\n\n    useEffect(() => {\n        console.log('rendered')\n        \n    }, [])\n\n\n\n    const [qs, setqs] = useState([\n            {\n                questionText: 'What is the capital of France?',\n                answerOptions: [\n                    { answerText: 'New York', isCorrect: false },\n                    { answerText: 'London', isCorrect: false },\n                    { answerText: 'Paris', isCorrect: true },\n                    { answerText: 'Dublin', isCorrect: false },\n                ],\n            },\n            {\n                questionText: 'Who is CEO of Tesla?',\n                answerOptions: [\n                    { answerText: 'Jeff Bezos', isCorrect: false },\n                    { answerText: 'Elon Musk', isCorrect: true },\n                    { answerText: 'Bill Gates', isCorrect: false },\n                    { answerText: 'Tony Stark', isCorrect: false },\n                ],\n            },\n            {\n                questionText: 'The iPhone was created by which company?',\n                answerOptions: [\n                    { answerText: 'Apple', isCorrect: true },\n                    { answerText: 'Intel', isCorrect: false },\n                    { answerText: 'Amazon', isCorrect: false },\n                    { answerText: 'Microsoft', isCorrect: false },\n                ],\n            },\n            {\n                questionText: 'How many Harry Potter books are there?',\n                answerOptions: [\n                    { answerText: '1', isCorrect: false },\n                    { answerText: '4', isCorrect: false },\n                    { answerText: '6', isCorrect: false },\n                    { answerText: '7', isCorrect: true },\n                ],\n            },\n            {\n                questionText: 'How many Harry Potter books are there?',\n                answerOptions: [\n                    { answerText: '1', isCorrect: false },\n                    { answerText: '4', isCorrect: false },\n                    { answerText: '6', isCorrect: false },\n                    { answerText: '7', isCorrect: true },\n                ],\n            },\n            {\n                questionText: 'What is the capital of France?',\n                answerOptions: [\n                    { answerText: 'New York', isCorrect: false },\n                    { answerText: 'London', isCorrect: false },\n                    { answerText: 'Paris', isCorrect: true },\n                    { answerText: 'Dublin', isCorrect: false },\n                ],\n            },\n            {\n                questionText: 'Who is CEO of Tesla?',\n                answerOptions: [\n                    { answerText: 'Jeff Bezos', isCorrect: false },\n                    { answerText: 'Elon Musk', isCorrect: true },\n                    { answerText: 'Bill Gates', isCorrect: false },\n                    { answerText: 'Tony Stark', isCorrect: false },\n                ],\n            },\n            {\n                questionText: 'The iPhone was created by which company?',\n                answerOptions: [\n                    { answerText: 'Apple', isCorrect: true },\n                    { answerText: 'Intel', isCorrect: false },\n                    { answerText: 'Amazon', isCorrect: false },\n                    { answerText: 'Microsoft', isCorrect: false },\n                ],\n            },\n            {\n                questionText: 'How many Harry Potter books are there?',\n                answerOptions: [\n                    { answerText: '1', isCorrect: false },\n                    { answerText: '4', isCorrect: false },\n                    { answerText: '6', isCorrect: false },\n                    { answerText: '7', isCorrect: true },\n                ],\n            },\n    ])\n\n  \n\n\n  // on useEffect user is authorized and user details are set and sent via context API to all components\n\n//   useEffect(() => {\n//     setRa\n//   }, []);\n  \n  return (\n    <QuestionProvider value={[qs, setqs]}>\n    {props.children}      \n    </QuestionProvider>\n  );\n}\n\n","import React, { useState, useEffect } from 'react'\r\n\r\nfunction Timer(props) {\r\n\r\n    const [duration, setDuration] = useState(30);\r\n\r\n    const { timeOver, setTimeOver } = props;\r\n\r\n    useEffect(() => {\r\n       \r\n            const interval = setInterval(() => {\r\n                if (!timeOver) {\r\n                    setDuration(duration => duration - 1);\r\n                }\r\n    \r\n              }, 1000);\r\n\r\n              setTimeout(\r\n                  () => {\r\n                      setTimeOver(true)\r\n                      setDuration('TIME OUT')\r\n                        }\r\n                , 30000);\r\n\r\n            return () => clearInterval(interval);\r\n        \r\n      }, [timeOver]);\r\n\r\n    const [started, setStarted] = useState(false);\r\n\r\n  return (\r\n   \r\n    <div>\r\n        {duration}\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default Timer;\r\n","import React, { useState } from 'react'\r\nimport Timer from './timer';\r\n\r\n\r\nfunction QuestionCard(props) {\r\n\r\n    const { currentQuestion, questions, prevQ, nextQ, submitQ, numberOfQ } = props\r\n\r\n    const [selectedAnswer, setSelectedAnswer] = useState([]);\r\n    const [correctAnswer, setCorrectAnswer] = useState([]);\r\n\r\n    const [timeOver, setTimeOver] = useState(false);\r\n\r\n\r\n\r\n    function selectedTrue(clickedAnswer, indexure) {\r\n        if (clickedAnswer === selectedAnswer[indexure]) {\r\n            return 'button-selected'\r\n        }\r\n    }\r\n\r\n    function newSelectedAnswerArray(answer, indexure, isCorrect) {\r\n        const newArray = [...selectedAnswer];\r\n        newArray[indexure] = answer;\r\n        setSelectedAnswer(newArray)\r\n\r\n        const newArray1 = [...correctAnswer];\r\n        newArray1[indexure] = isCorrect;\r\n        setCorrectAnswer(newArray1)\r\n    }\r\n\r\n\r\n    if (timeOver) {\r\n        return (\r\n            \r\n            <div className='timeout'>\r\n\r\n                    <div className='score-header'>TIMEOUT !!!</div>\r\n                    \r\n                    <div>\r\n                        <div className='button1' onClick={() => submitQ(correctAnswer.filter(data => data === true).length)}>Click to see Score</div>\r\n\r\n                    </div>\r\n                    </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className='question-container'>\r\n                <div className='question-section'>\r\n                    <div className='question-count-timer'>\r\n                    <div className='question-count'>\r\n                    <span>Question {currentQuestion + 1}</span>/ {numberOfQ}\r\n                    </div>\r\n                        <div className='timer'>\r\n                        <Timer timeOver={timeOver} setTimeOver={setTimeOver} />\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className='question-text'>{questions.questionText}</div>\r\n                </div>\r\n                <div className='answer-section'>\r\n                    {questions.answerOptions.map((answerOption) => (\r\n                        <button className={selectedTrue(answerOption.answerText, currentQuestion)} id='answerButton' onClick={() => {\r\n                            newSelectedAnswerArray(answerOption.answerText, currentQuestion, answerOption.isCorrect);\r\n                            nextQ();\r\n                        }}>\r\n                            {answerOption.answerText}\r\n                        </button>\r\n                    ))}\r\n                </div>\r\n\r\n                <div className='next-and-prev-buttonsContainer'>\r\n                    <div className='button1' onClick={prevQ}>PREV</div>\r\n                    <div className='button1' onClick={nextQ}>Pass</div>\r\n                </div>\r\n\r\n                <div className='submitButtonContainer'>\r\n                    <div className='submitButton' onClick={() => submitQ(correctAnswer.filter(data => data === true).length)}>Submit</div>\r\n                </div>\r\n\r\n                \r\n\r\n                \r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default QuestionCard;\r\n","import { Redirect, Link } from 'react-router-dom';\r\nimport React, {useState, useContext, useEffect } from 'react';\r\nimport { UserContext } from '../context/user1Context';\r\nimport { QuestionContext } from '../context/questionsContext';\r\nimport './quizScreen.css';\r\nimport QuestionCard from './questionCard'\r\n\r\nfunction Home() {\r\n\r\n    // inside useEffect we use fetch API to call in the questions and save in const questions\r\n\r\n    // useEffect(() => {\r\n    //     effect\r\n    //     return () => {\r\n    //         cleanup\r\n    //     }\r\n    // }, [input])\r\n\r\n    // useContext is used to confirm if a user is loggedIn\r\n    const user = useContext(UserContext);\r\n    const [qs, setqs] = useContext(QuestionContext);\r\n\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n    const [showScore, setShowScore] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    // where 3 is the questions length\r\n    const randomNumber = Math.floor(Math.random()*qs.length);\r\n    \r\n    const [score, setScore] = useState(0); \r\n    const [questions, setQuestions] = useState(''); \r\n\r\n    \r\n    \r\n    useEffect(() => {\r\n        const shuffled = qs.sort(() => 0.5 - Math.random());\r\n// Get sub-array of first n elements after shuffled\r\n        let selected = shuffled.slice(0, 5);\r\n        setQuestions(selected)\r\n        setIsLoading(false);\r\n    }, [])\r\n    // receive score hsitory from backend to send both score and percentage increase to backend for rankings\r\n\r\n\r\n\t\r\n\r\n\r\n    function nextQ() { \r\n        const nextQuestion = currentQuestion + 1;\r\n        if (nextQuestion < questions.length) {\r\n\t\t\tsetCurrentQuestion(nextQuestion);\r\n\t\t}\r\n    }\r\n    function prevQ() {\r\n        if (currentQuestion > 0) {\r\n            const nextQuestion = currentQuestion - 1;\r\n        setCurrentQuestion(nextQuestion);\r\n        }\r\n    }\r\n\r\n    function submitQ(score) {\r\n        setShowScore(true);\r\n        setScore(score)\r\n\r\n        // score with user id is sent to backEnd to store with new Date()\r\n    }\r\n\r\n    // if there is no user logged in this is redirected to myAccount for login or register\r\n\r\n    if (!user) return <Redirect to='/myAccount' />\r\n\r\n    if (user && !isLoading) {\r\n        return (\r\n        <div className='appContainer'>\r\n                {showScore ? (\r\n                    <div className='app score'>\r\n                    <div className='score-header'>Congratulations !!!</div>\r\n                    <div className='score-message'>\r\n                    You scored {score} out of {questions.length}\r\n                    </div>\r\n                    <div>\r\n                        <Link className='link button1' to='/Quiz'>Retry</Link>\r\n                    </div>\r\n                    </div>\r\n\r\n                ) : (\r\n                    <div className='app'>\r\n                        <QuestionCard \r\n                            currentQuestion={currentQuestion} \r\n                            questions={questions[currentQuestion]} \r\n                            prevQ={prevQ} \r\n                            nextQ={nextQ}\r\n                            submitQ={submitQ}\r\n                            numberOfQ={questions.length} />\r\n                    </div>\r\n                )}\r\n            </div>\r\n        )\r\n    } else if (user && isLoading) {\r\n        return (\r\n            <div>\r\n                <h1>Loading.........</h1>\r\n            </div>\r\n        )\r\n    }\r\n\t\r\n}\r\n\r\nexport default Home;\r\n","import { Link } from 'react-router-dom';\r\nimport React, {useContext} from 'react';\r\nimport './quizScreen.css';\r\nimport { UserContext } from '../context/user1Context';\r\n\r\n\r\nfunction Home() {\r\n\r\n    const user = useContext(UserContext);    \r\n\r\n        return (\r\n            <div className='appContainer'>\r\n            <div className='quizScreenContainer'>\r\n            \r\n            \r\n            <Link className='quizNavContainer link' to='/Quiz/play'>\r\n            <img src=\"https://image.flaticon.com/icons/png/512/27/27223.png\" alt=\"\" />\r\n            <div className='quizScreenText'>PLAY</div>\r\n            </Link>\r\n\r\n            {user.id === 'zOOj1gwSb7WQA7dwMBgW2EYJOk52' ? \r\n                <Link className='quizNavContainer link' to='/Quiz/add'>\r\n                <img src=\"https://image.flaticon.com/icons/png/512/57/57108.png\" alt=\"\" />\r\n                <div className='quizScreenText'>QUESTIONS</div>\r\n                </Link> : <div></div>\r\n            }\r\n\r\n            <Link className='quizNavContainer link' to='/Quiz/ranking'>\r\n            <img src=\"https://image.flaticon.com/icons/png/512/13/13815.png\" alt=\"\" />\r\n            <div className='quizScreenText'>RANKINGS</div>\r\n            </Link>\r\n\r\n            \r\n            </div>\r\n            </div>\r\n        )\r\n    \r\n\t\r\n}\r\n\r\nexport default Home;\r\n","import React, { useState } from 'react'\r\nimport './rankingScreen.css'\r\nimport '../Registration/app.css'\r\n\r\nfunction RankingScreen() {\r\n\r\n    // receive scores from backend\r\n\r\n    const rankings = [\r\n        {\r\n            userid: '11111',\r\n            username: 'AAAAA',\r\n            scores: [\r\n                {\r\n                    submittedAt: 1,\r\n                    score: '5',\r\n                    percentageIncrease: '25'\r\n\r\n                },\r\n                {\r\n                    submittedAt: 2,\r\n                    score: '10',\r\n                    percentageIncrease: '50'\r\n\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            userid: '22222',\r\n            username: 'BBBBB',\r\n            scores: [\r\n                {\r\n                    submittedAt: 1,\r\n                    score: '45',\r\n                    percentageIncrease: '56'\r\n\r\n                },\r\n                {\r\n                    submittedAt: 2,\r\n                    score: '5',\r\n                    percentageIncrease: '45'\r\n\r\n                },\r\n            ]\r\n        },\r\n        {\r\n            userid: '33333',\r\n            username: 'CCCCC',\r\n            scores: [\r\n                {\r\n                    submittedAt: 1,\r\n                    score: '23',\r\n                    percentageIncrease: '45'\r\n\r\n                },\r\n                {\r\n                    submittedAt: 2,\r\n                    score: '56',\r\n                    percentageIncrease: '13'\r\n\r\n                },\r\n            ]\r\n        },\r\n        {\r\n            userid: '44444',\r\n            username: 'DDDDD',\r\n            scores: [\r\n                {\r\n                    submittedAt: 1,\r\n                    score: '55',\r\n                    percentageIncrease: '12'\r\n                },\r\n                {\r\n                    submittedAt: 2,\r\n                    score: '8',\r\n                    percentageIncrease: '16'\r\n\r\n                },\r\n            ]\r\n        },\r\n        {\r\n            userid: '55555',\r\n            username: 'EEEEE',\r\n            scores: [\r\n                {\r\n                    submittedAt: 1,\r\n                    score: '63',\r\n                    percentageIncrease: '32'\r\n                },\r\n                {\r\n                    submittedAt: 2,\r\n                    score: '80',\r\n                    percentageIncrease: '60'\r\n                },\r\n            ]\r\n        },\r\n\r\n    ]\r\n   \r\n    const [loginClicked, setLoginClicked] = useState(false);\r\n    const [registerClicked, setRegisterClicked] = useState(false);\r\n    const [logoutClicked, setLogoutClicked] = useState(false);\r\n    \r\n    const [topScores, setTopScores] = useState([]);\r\n    const [mostAttempts, setMostAttempts] = useState([]);\r\n    const [highestPercentage, setHighestPercentage] = useState([]);\r\n  \r\n    const loginContainer1 = registerClicked ? 'login-container loginresponsive': 'login-container loginresponsive hide-login';\r\n    const headerContainer1 = registerClicked ? 'header': 'header headerHover';\r\n    const rankTable1 = registerClicked ? 'rankTable' : 'rankTable hide-section';\r\n  \r\n    const loginContainer2 = loginClicked ? 'login-container loginresponsive': 'login-container loginresponsive hide-login';\r\n    const headerContainer2 = loginClicked ? 'header': 'header headerHover';\r\n    const rankTable2 = loginClicked ? 'rankTable' : 'rankTable hide-section';\r\n\r\n    const loginContainer3 = logoutClicked ? 'login-container loginresponsive': 'login-container loginresponsive hide-login';\r\n    const headerContainer3 = logoutClicked ? 'header': 'header headerHover';\r\n    const rankTable3 = logoutClicked ? 'rankTable' : 'rankTable hide-section';\r\n    \r\n    function topScore() {\r\n        const newArray = [];\r\n        rankings.map(data => {\r\n            data.scores.map(data1 => {\r\n                newArray.push(\r\n                    {\r\n                        name: data.username,\r\n                        score: data1.score\r\n                    }\r\n                )\r\n            })\r\n        })\r\n        setTopScores(newArray.sort((a,b) => (parseInt(b.score) > parseInt(a.score)) ? 1 : -1))\r\n    }\r\n\r\n    function mostAttempt() {\r\n        const newArray = [];\r\n        rankings.map(data => newArray.push({\r\n            name: data.username,\r\n            attempts: data.scores.length\r\n        }))\r\n        setMostAttempts(newArray.sort((a,b) => (parseInt(b.attempts) > parseInt(a.attempts)) ? 1 : -1))\r\n    }\r\n\r\n    function percentageHighest() {\r\n        const newArray = [];\r\n        rankings.map(data => {\r\n            data.scores.map(data1 => {\r\n                newArray.push(\r\n                    {\r\n                        name: data.username,\r\n                        percentage: data1.percentageIncrease\r\n                    }\r\n                )\r\n            })\r\n        })\r\n        setHighestPercentage(newArray.sort((a,b) => (parseInt(b.percentage) > parseInt(a.percentage)) ? 1 : -1))\r\n    }\r\n\r\n    function handleRegisterClick(e) {\r\n      setRegisterClicked(true)\r\n      setLoginClicked(false)\r\n      setLogoutClicked(false)\r\n      topScore()\r\n    }\r\n    function handleLoginClick(e) {\r\n      setRegisterClicked(false)\r\n      setLogoutClicked(false)\r\n      setLoginClicked(true)\r\n      mostAttempt()\r\n    }\r\n    function handleLogoutClick(e) {\r\n      setRegisterClicked(false)\r\n      setLogoutClicked(true)\r\n      setLoginClicked(false)\r\n      percentageHighest()\r\n    }\r\n  \r\n    // if user is logged in we show profile else we show register or login page\r\n  \r\n    \r\n      return (\r\n        <div className='body'>\r\n          <div className={loginContainer1}>\r\n            <div className='form'>\r\n            <div className={headerContainer1} onClick={handleRegisterClick}>TOP SCORES</div>\r\n              <div className={rankTable1}>\r\n              <div className='singleInputContainer headContainer'>\r\n                  <div className='rankText text'>Rank</div>\r\n                  <div className='nameText text'>Name</div>\r\n                  <div className='scoreText text'>Score</div>\r\n                  </div>\r\n              \r\n                  {\r\n                      topScores.slice(0,5).map((data, index) => {\r\n                          return (\r\n                <div className='singleInputContainer'>\r\n                  <div className='rankText text'>{index + 1}</div>\r\n                  <div className='nameText text'>{data.name}</div>\r\n                  <div className='scoreText text'>{data.score}</div>\r\n                  \r\n                  </div>\r\n                          )\r\n                      })\r\n                  }\r\n              </div>\r\n            </div>\r\n\r\n\r\n          </div>\r\n          <div className={loginContainer2}>\r\n            <div className='form'>\r\n            <div className={headerContainer2} onClick={handleLoginClick}>MOST ATTEMPTS</div>\r\n              <div className={rankTable2}>\r\n              <div className='singleInputContainer headContainer'>\r\n                  <div className='rankText text'>Rank</div>\r\n                  <div className='nameText text'>Name</div>\r\n                  <div className='scoreText text'>Attempts</div>\r\n                  </div>\r\n                  {\r\n                      mostAttempts.slice(0,5).map((data, index) => {\r\n                          return (\r\n                <div className='singleInputContainer'>\r\n                  <div className='rankText text'>{index + 1}</div>\r\n                  <div className='nameText text'>{data.name}</div>\r\n                  <div className='scoreText text'>{data.attempts}</div>\r\n                  \r\n                  </div>\r\n                          )\r\n                      })\r\n                  }\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className={loginContainer3}>\r\n            <div className='form'>\r\n            <div className={headerContainer3} onClick={handleLogoutClick}>TOP PERFORMERS</div>\r\n              <div className={rankTable3}>\r\n              <div className='singleInputContainer headContainer'>\r\n                  <div className='rankText text'>Rank</div>\r\n                  <div className='nameText text'>Name</div>\r\n                  <div className='scoreText text'>Improvement</div>\r\n                  </div>\r\n                  {\r\n                      highestPercentage.slice(0,5).map((data, index) => {\r\n                          return (\r\n                <div className='singleInputContainer'>\r\n                  <div className='rankText text'>{index + 1}</div>\r\n                  <div className='nameText text'>{data.name}</div>\r\n                  <div className='scoreText text'>{data.percentage}</div>\r\n                  \r\n                  </div>\r\n                          )\r\n                      })\r\n                  }\r\n              </div>\r\n            </div>\r\n          </div>\r\n    \r\n          \r\n        </div>\r\n    \r\n      );\r\n}\r\n\r\n\r\nexport default RankingScreen","import React, {useState, useContext, useEffect } from 'react';\nimport './questionScreen.css'\n\nfunction ShowQ(props) {\n    const { questions } = props;\n\n    const colorConst = (iscorrect) => {\n      if(iscorrect) {\n          return 'green'\n      } else {\n          return 'black'\n      }\n  }\n  const fontWeightConst = (iscorrect) => {\n    if(iscorrect) {\n        return 'bold'\n    } else {\n        return 'normal'\n    }\n}\n\n    function AnswersView(props) {\n        const {answers} = props\n        return (\n          <div>\n            \n            {answers ? (\n              answers.map((a, i) => (\n                  \n                <span>\n                  \n                    <p style={{color: colorConst(a.isCorrect), fontWeight: fontWeightConst(a.isCorrect)}}>{a.answerText}</p>\n                </span>\n              ))\n            ) : (\n              <div></div>\n            )}\n          </div>\n        );\n}\n\n    function QuestionsView() {\n        return (\n          <div className='questonsSubMainDiv'>\n            {questions ? (\n              questions.map((q, i) => (\n                <div className='insideQuestionsView'>\n                  {/* <p>Question:</p> */}\n                    <p style={{fontWeight: 'bold'}}>Q : {q.questionText}</p>\n                    <AnswersView answers={q.answerOptions} />\n                </div>\n              ))\n            ) : (\n              <div></div>\n            )}\n          </div>\n        );\n}\n\n\n    return (\n        <div className='questionsView'>\n        <QuestionsView />\n        <hr />\n        </div>\n        \n    )\n\n}\n\nexport default ShowQ;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport { UserContext } from \"../context/user1Context\";\nimport { QuestionContext } from \"../context/questionsContext\";\n\nimport ShowQ from \"./showQuestions\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\n\nimport \"./questionScreen.css\";\n\nfunction AddDel() {\n  const user = useContext(UserContext);\n  const [qs, setqs] = useContext(QuestionContext);\n\n  function handleFormSubmit(values) {\n    const correctAnswer = (val) => {\n      if (values.correct === val) {\n        return true;\n      } else {\n        return false;\n      }\n    };\n    const newQ = {\n      questionText: `${values.questionInput}`,\n      answerOptions: [\n        { answerText: `${values.optionA}`, isCorrect: correctAnswer(\"A\") },\n        { answerText: `${values.optionB}`, isCorrect: correctAnswer(\"B\") },\n        { answerText: `${values.optionC}`, isCorrect: correctAnswer(\"C\") },\n        { answerText: `${values.optionD}`, isCorrect: correctAnswer(\"D\") },\n      ],\n    };\n\n    const newqsArray = [...qs, newQ];\n\n    console.log(newqsArray);\n    setqs(newqsArray);\n  }\n\n  if (!user) return <Redirect to=\"/myAccount\" />;\n\n  if (user.id !== \"zOOj1gwSb7WQA7dwMBgW2EYJOk52\") {\n    return <h1>You are not AUTHORIZED</h1>;\n  } else {\n    return (\n      <div className='AdminAppContainer'>\n\n        <div className='questionsMainDiv'>\n            <ShowQ questions={qs} />\n        </div>\n\n        <div className=\"formDiv\">\n        <p className='formHeader'>ADD QUESTIONS</p>\n          <Formik\n            initialValues={{\n              questionInput: \"\",\n              optionA: \"\",\n              optionB: \"\",\n              optionC: \"\",\n              optionD: \"\",\n              correct: \"\",\n            }}\n            onSubmit={(values) => handleFormSubmit(values)}\n            validationSchema={Yup.object().shape({\n              questionInput: Yup.string().required(\"*this is a required field\"),\n              optionA: Yup.string().required(\"*this is a required field\"),\n              optionB: Yup.string().required(\"*this is a required field\"),\n              optionC: Yup.string().required(\"*this is a required field\"),\n              optionD: Yup.string().required(\"*this is a required field\"),\n              correct: Yup.string().required(\"*choose one option\").min(1),\n            })}\n          >\n            {(props) => {\n              const {\n                values,\n                touched,\n                errors,\n                dirty,\n                isSubmitting,\n                handleChange,\n                handleBlur,\n                handleSubmit,\n                handleReset,\n              } = props;\n              return (\n                <form onSubmit={handleSubmit}>\n                  \n                  <input\n                    id=\"questionInput\"\n                    placeholder=\"Enter the Question\"\n                    type=\"text\"\n                    value={values.questionInput}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    className={\n                      errors.questionInput && touched.questionInput\n                        ? \"text-input error\"\n                        : \"text-input\"\n                    }\n                  />\n                  {errors.questionInput && touched.questionInput && (\n                    <div className=\"input-feedback\">{errors.questionInput}</div>\n                  )}\n\n                  <label htmlFor=\"optionA\" className='labelHeader'>\n                    Option A\n                  </label>\n                  <input\n                    id=\"optionA\"\n                    placeholder=\"Enter option\"\n                    type=\"text\"\n                    value={values.optionA}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    // className={\n                    //   errors.email && touched.email\n                    //     ? \"text-input error\"\n                    //     : \"text-input\"\n                    // }\n                  />\n                  {errors.optionA && touched.optionA && (\n                    <div className=\"input-feedback\">{errors.optionA}</div>\n                  )}\n                  <label htmlFor=\"optionB\" className='labelHeader'>\n                    Option B\n                  </label>\n                  <input\n                    id=\"optionB\"\n                    placeholder=\"Enter Option\"\n                    type=\"text\"\n                    value={values.optionB}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    // className={\n                    //   errors.email && touched.email\n                    //     ? \"text-input error\"\n                    //     : \"text-input\"\n                    // }\n                  />\n                  {errors.optionB && touched.optionB && (\n                    <div className=\"input-feedback\">{errors.optionB}</div>\n                  )}\n                  <label htmlFor=\"optionC\" className='labelHeader'>\n                    Option C\n                  </label>\n                  <input\n                    id=\"optionC\"\n                    placeholder=\"Enter option\"\n                    type=\"text\"\n                    value={values.optionC}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    // className={\n                    //   errors.email && touched.email\n                    //     ? \"text-input error\"\n                    //     : \"text-input\"\n                    // }\n                  />\n                  {errors.optionC && touched.optionC && (\n                    <div className=\"input-feedback\">{errors.optionC}</div>\n                  )}\n                  <label htmlFor=\"optionD\" className='labelHeader'>\n                    Option D\n                  </label>\n                  <input\n                    id=\"optionD\"\n                    placeholder=\"Enter Option\"\n                    type=\"text\"\n                    value={values.optionD}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    // className={\n                    //   errors.email && touched.email\n                    //     ? \"text-input error\"\n                    //     : \"text-input\"\n                    // }\n                  />\n                  {errors.optionD && touched.optionD && (\n                    <div className=\"input-feedback\">{errors.optionD}</div>\n                  )}\n\n                  <select\n                    name=\"correct\"\n                    value={values.correct}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    style={{ display: \"block\" }}\n                    className='selector'\n                  >\n                    <option value=\"\" label=\"Choose the Right option\" />\n                    <option value=\"A\" label=\"A\" />\n                    <option value=\"B\" label=\"B\" />\n                    <option value=\"C\" label=\"C\" />\n                    <option value=\"D\" label=\"D\" />\n                  </select>\n                  {errors.correct && touched.correct && (\n                    <div className=\"input-feedback\">{errors.correct}</div>\n                  )}\n\n                  <button type=\"submit\" className='submitButton1'>Submit</button>\n\n                  {/* <DisplayFormikState {...props} /> */}\n                </form>\n              );\n            }}\n          </Formik>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AddDel;\n","import MyAccount from './components/Registration/myAccount'\nimport { BrowserRouter, Switch, Route, HashRouter } from 'react-router-dom';\nimport Navbar from './components/Layout/navbar'\nimport Home from './components/home'\nimport QuizPlay from './components/Quiz/quizPlay'\nimport Quiz from './components/Quiz/quizScreen'\nimport RankingScreen from './components/Ranking/rankingScreen'\nimport { UserContextProvider } from './components/context/user1Context';\nimport { QuestionContextProvider } from './components/context/questionsContext';\nimport AddDel from './components/questionsScreen/addDelQs'\n\n\n\n\nfunction App() {\n  return (\n    \n    <HashRouter>\n      <Navbar />\n      <Switch>\n      <UserContextProvider>\n        <Route exact path='/' component={Home} />\n          <Route exact path='/myAccount' component={MyAccount} />\n          <Route exact path='/Quiz' component={Quiz} />\n\n          <QuestionContextProvider>\n          <Route exact path='/Quiz/play' component={QuizPlay} />\n          <Route exact path='/Quiz/add' component={AddDel} />\n          </QuestionContextProvider>\n\n          <Route exact path='/Quiz/ranking' component={RankingScreen} />\n        </UserContextProvider>\n      </Switch>\n    </HashRouter>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}