{"version":3,"sources":["firebase.js","components/Profile/profile.js","components/context/user1Context.js","globalComponents/loader.js","components/Registration/myAccount.js","components/Layout/navbar.js","components/home.js","components/Quiz/questionCard.js","components/Quiz/quizPlay.js","components/Quiz/quizScreen.js","components/Ranking/rankingScreen.js","components/context/questionsContext.js","components/context/adminQcontext.js","components/questionsScreen/showQuestions.js","components/questionsScreen/addDelQs.js","assets/wg.png","components/footer/footer.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","apps","length","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","Profile","props","user","logout","completeProfile","useState","url","setUrl","imageLoading","setImageLoading","profilePicUpdate","file","storage","ref","id","put","then","ell","child","getDownloadURL","url1","auth","currentUser","updateProfile","photoURL","catch","err","alert","useEffect","name","className","src","alt","type","title","onChange","e","target","files","for","style","alignSelf","initialValues","nameInput","onSubmit","values","validationSchema","Yup","shape","required","touched","errors","handleChange","dirty","isSubmitting","handleBlur","handleSubmit","handleReset","placeholder","value","onBlur","marginLeft","display","justifyContent","paddingTop","number","onClick","UserContext","React","createContext","UserProvider","Provider","Consumer","UserContextProvider","loggedIn","setUser","userScores","setUserScores","unsubscribe","onAuthStateChanged","user1","email","displayName","uid","phoneNumber","firestore","collection","orderBy","limit","onSnapshot","thisisquery","list","forEach","doc","push","data","console","log","children","Loader","width","borderWidth","height","Login","isloading","setIsLoading","axios","get","response","countryCode","country_calling_code","substring","setInputNumber","error","userContextObject","useContext","inputNumber","history","useHistory","setUpRecaptcha","window","recaptchaVerifier","RecaptchaVerifier","size","callback","onSignInSubmit","appVerifier","signInWithPhoneNumber","confirmationResult","code","prompt","confirm","result","location","reload","signOut","Navbar","to","Home","a","clickHandler","QuestionCard","currentQuestion","nextQ","questions","submitQ","duration","setDuration","timeOver","setTimeOver","quizOver","setQuizOver","showScore","setShowScore","isLoading","score","setScore","timesRun","interval","setInterval","clearInterval","setTimeout","correctAnswer","setCorrectAnswer","selectedAnswers","setSelectedAnswers","answerClickHandler","answer","indexure","newArray","nextQuestion","getCorrectAnswers","q","i","docSnap","answersingle","prevCorrectAnswer","slice","onClickToSeeScore","arrayTest","prevScore","newScore","lastScore","newPercentageIncrease","submitting2firestore","attempt","Date","createScoreObject2submit2firestore","newScoreObject","add","res","fontSize","fontWeight","alignItems","marginTop","fontFamily","questionText","options","map","option","setQuestions","getQuestionsFromFirestore","setCurrentQuestion","letterSpacing","paddingLeft","RankingScreen","rankings","userid","username","scores","submittedAt","percentageIncrease","mostAttemptsClicked","setmostAttemptsClicked","topScorersClicked","settopScorersClicked","topPerformersCLicked","settopPerformersCLicked","loginContainer1","headerContainer1","rankTable1","loginContainer2","headerContainer2","rankTable2","loginContainer3","headerContainer3","rankTable3","topScores","setTopScores","mostAttempts","setMostAttempts","highestPercentage","setHighestPercentage","data1","sort","b","parseInt","topScore","index","attempts","mostAttempt","percentage","percentageHighest","QuestionContext","QuestionProvider","QuestionContextProvider","answerOptions","answerText","isCorrect","qs","setqs","AdminQuestionContext","AdminQuestionProvider","AdminQuestionContextProvider","allQs","setAllQs","ShowQ","AnswersView","answers","QuestionsView","docData","AddDel","questionInput","optionA","optionB","optionC","optionD","correct","newQ","createdAt","correctoption","set","res1","handleFormSubmit1","min","htmlFor","label","Footer","logo","App","exact","path","component","MyAccount","Quiz","QuizPlay","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1ea37aef.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\n\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\nimport 'firebase/storage';\r\n\r\n\r\n// import 'firebase/storage';\r\n\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBSjXNfUFdgJn3qCJPG3qWd5WEBTBKCICU\",\r\n    authDomain: \"wahnilogin.firebaseapp.com\",\r\n    projectId: \"wahnilogin\",\r\n    storageBucket: \"wahnilogin.appspot.com\",\r\n    messagingSenderId: \"571694906479\",\r\n    appId: \"1:571694906479:web:908412aa21b16453d7619a\"\r\n};\r\n\r\nif (!firebase.apps.length) {\r\n    firebase.initializeApp(firebaseConfig);\r\n}\r\n\r\nexport default firebase\r\n","import React, {useState, useEffect} from 'react';\r\nimport firebase from '../../firebase'\r\n// import * as firebase from 'firebase';\r\n\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport \"../questionsScreen/questionScreen.css\";\r\n\r\nfunction Profile(props) {\r\n\r\n  \r\n  const { user, logout, completeProfile }  = props;\r\n  const [url, setUrl] = useState();\r\n  const [imageLoading, setImageLoading] = useState(true);\r\n\r\n\r\n  useEffect(() => {\r\n    setImageLoading(true);\r\n    // check if user object has a url for profile image\r\n    if(user.photoURL !== null) {\r\n    setUrl(user.photoURL)\r\n    } else {\r\n      setUrl('https://image.flaticon.com/icons/png/512/2922/2922532.png')\r\n    };\r\n    setImageLoading(false)\r\n  }, [])\r\n\r\n  function profilePicUpdate(file) {\r\n    // to update the profile picture\r\n    setImageLoading(true);\r\n    firebase.storage().ref('users/' + user.id + '.jpg').put(file).then(ell => {\r\n      // get the url of the image uploaded to firebase\r\n      getURL()\r\n    }).catch(err => {\r\n      alert(err);\r\n      setImageLoading(false)\r\n    })\r\n  }\r\n\r\n  function getURL() {\r\n    // get the url of the image uploaded to firebase\r\n    firebase.storage().ref().child(\"users/\" + user.id + '.jpg').getDownloadURL().then(url1 => {\r\n      setUrl(url1);\r\n      setImageLoading(false);\r\n      firebase.auth().currentUser.updateProfile({\r\n        photoURL: url1\r\n      });\r\n    }).catch(err => {\r\n      alert(err);\r\n      setImageLoading(false)\r\n    })\r\n  }\r\n\r\n  //check if user object has a name\r\n  //if NO name, complete registration form is shown else Profile is shown\r\n  \r\n  if (user && user.name === null || user && user.name === '') {\r\n    return(\r\n      <div className='body'>\r\n      <div className='login-container card1 responsiveWidth profileContainer'>\r\n        <div className='form'>\r\n        <div className='profileImageContainer'>\r\n        {\r\n          imageLoading ? <img src='https://media4.giphy.com/media/3oEjI6SIIHBdRxXI40/giphy.gif' alt=\"\" /> : <img src={url} alt=\"\" />\r\n\r\n        }\r\n        \r\n        <input type='file' title='hello' id='files' onChange={e => profilePicUpdate(e.target.files[0])} />\r\n        <label for=\"files\" className='labelForFile'>Edit Avatar</label>\r\n\r\n        </div>\r\n\r\n        <div className='profileDetailsContainer'>\r\n        <h2 style={{alignSelf:'center'}}>Complete Your Profile</h2>\r\n\r\n        <Formik\r\n            initialValues={{\r\n              nameInput: \"\",\r\n            }}\r\n            onSubmit={(values) => completeProfile(values.nameInput)}\r\n            validationSchema={Yup.object().shape({\r\n              nameInput: Yup.string().required(\"*this is a required field\"),\r\n            })}\r\n          >\r\n            {(props) => {\r\n              const {\r\n                values,\r\n                touched,\r\n                errors,\r\n                dirty,\r\n                isSubmitting,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n                handleReset,\r\n              } = props;\r\n              return (\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className='labelClass'>Enter Name</div>\r\n\r\n                  <input\r\n                    id=\"nameInput\"\r\n                    placeholder=\"e.g. John\"\r\n                    type=\"text\"\r\n                    value={values.nameInput}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={\r\n                      errors.nameInput && touched.nameInput\r\n                        ? \"inputStyle error\"\r\n                        : \"inputStyle\"\r\n                    }\r\n                  />\r\n                  <div style={{marginLeft: '8%'}}>\r\n                  {errors.nameInput && touched.nameInput && (\r\n                    <div className=\"input-feedback\">{errors.nameInput}</div>\r\n                  )}\r\n                  </div>\r\n\r\n                  \r\n                  <div style={{display:'flex', justifyContent:'center', paddingTop:'20px'}}>\r\n                  <button type=\"submit\" className='submitButton1'>SAVE PROFILE</button>\r\n                  </div>\r\n                </form>\r\n              );\r\n            }}\r\n          </Formik>\r\n\r\n        </div>\r\n\r\n        </div>\r\n      </div>\r\n  </div>\r\n    )\r\n  } else {\r\n    return (\r\n      <div className='body'>\r\n      <div className='login-container card1 loginresponsive profileContainer'>\r\n        <div className='form'>\r\n        <div className='profileImageContainer'>\r\n        {\r\n          imageLoading ? <img src='https://media4.giphy.com/media/3oEjI6SIIHBdRxXI40/giphy.gif' alt=\"\" /> : <img src={url} alt=\"\" />\r\n\r\n        }\r\n        \r\n        <input type='file' title='hello' id='files' onChange={e => profilePicUpdate(e.target.files[0])} />\r\n        <label for=\"files\" className='labelForFile'>Edit Avatar</label>\r\n\r\n        </div>\r\n        <div className='profileDetailsContainer'>\r\n        <div>\r\n        <p className='profileText'>Name: {user.name}</p>\r\n        <p className='profileText'>Phone No.: {user.number}</p>\r\n        <p className='profileText'>No. of Attempts: </p>\r\n        <p className='profileText'>Highest Score: </p>\r\n        <div className='flexCenter'>\r\n        <div className='button1' type='button' onClick={() => logout()}>LOGOUT</div>\r\n        </div>\r\n\r\n        </div>\r\n\r\n        </div>\r\n\r\n        </div>\r\n      </div>\r\n  </div>\r\n    );\r\n\r\n  }\r\n\r\n}\r\n\r\nexport default Profile;\r\n","import React, { useContext, useEffect, useCallback, useState } from 'react';\r\nimport firebase from '../../firebase'\r\n\r\n\r\nconst defaultUser = { loggedIn: false, email: \"\" };\r\nexport const UserContext = React.createContext({});\r\n\r\nconst UserProvider = UserContext.Provider;\r\nconst UserConsumer = UserContext.Consumer;\r\n\r\n// function onAuthStateChange(callback) {\r\n// make sure user register or login\r\n// }\r\n\r\n  // user is added or logged in and sent to all the components of this site through this context\r\n\r\n\r\nexport function UserContextProvider(props) {\r\n\r\n  const [user, setUser] = useState({ loggedIn: false });\r\n  const [userScores, setUserScores] = useState(null);\r\n\r\n  function onAuthStateChange() {\r\n    return firebase.auth().onAuthStateChanged(user1 => {\r\n      if (user1) {\r\n\r\n        setUser({ loggedIn: true, \r\n                  email: user1.email, \r\n                  name: user1.displayName, \r\n                  id: user1.uid, \r\n                  number: user1.phoneNumber,\r\n                  photoURL: user1.photoURL });\r\n        \r\n        firebase\r\n        .firestore()\r\n        .collection(`users/${user1.uid}/scores`)\r\n        .orderBy('attendedAt', 'desc')\r\n        .limit(1)\r\n        .onSnapshot((thisisquery) => {\r\n          const list = [];\r\n          thisisquery.forEach((doc) => {\r\n            list.push({ ...doc.data(), id: doc.id });\r\n          })\r\n          setUserScores(list);\r\n        })\r\n        .catch(err => {\r\n          console.log('Unable to fetch user last score:', err)\r\n        })\r\n      } else {\r\n        setUser({ loggedIn: false });\r\n        setUserScores(null)\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  // on useEffect user is authorized and user details are set and sent via context API to all components\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onAuthStateChange();\r\n\r\n    return () => {\r\n      unsubscribe();\r\n    }\r\n  }, []);\r\n  \r\n  return (\r\n    <UserProvider value={{'user': user, 'userScores': userScores}}>\r\n    {props.children}      \r\n    </UserProvider>\r\n  );\r\n}\r\n\r\n","import React, { useState, useContext} from 'react';\nimport './loader.css'\n\nfunction Loader(props) {\n\n    const { width, borderWidth } = props\n\n    return (\n        \n            <div style={{height: width, width: width, borderWidth: borderWidth}} className=\"loader\"></div>\n    );\n}\n\nexport default Loader;\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport Profile from \"../Profile/profile\";\r\nimport firebase from \"../../firebase\";\r\nimport { UserContext } from \"../context/user1Context\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Loader from '../../globalComponents/loader'\r\n\r\nimport \"./myAccount.css\";\r\n\r\nfunction Login() {\r\n\r\n  const [isloading, setIsLoading] = useState(false)\r\n  // on Component load fetch the country code based on the ip address and set input field\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"https://ipapi.co/json/\")\r\n      .then((response) => {\r\n        let data = response.data;\r\n        const countryCode = data.country_calling_code.substring(1);\r\n        setInputNumber(`${countryCode}`);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  // confirm if user is available\r\n  // user details and scores\r\n  const userContextObject = useContext(UserContext);\r\n  const user = userContextObject.user;\r\n  const userScores = userContextObject.userScores;\r\n  //  input for mobile number\r\n  const [inputNumber, setInputNumber] = useState(\"\");\r\n  // useHistory hook to redirect to '/Quiz' on login if registration is complete\r\n  const history = useHistory();\r\n\r\n  //Registration, Verifying Captcha and OTP validation START\r\n  const setUpRecaptcha = () => {\r\n\r\n    window.recaptchaVerifier = new firebase.auth.RecaptchaVerifier(\r\n      \"recaptcha-container\",\r\n      {\r\n        size: \"normal\",\r\n        callback: function (response) {\r\n\r\n          // reCAPTCHA solved, allow signInWithPhoneNumber.\r\n          setIsLoading(false)\r\n          onSignInSubmit();\r\n        },\r\n      }\r\n    );\r\n       \r\n  };\r\n\r\n  const onSignInSubmit = (number, name) => {\r\n    setIsLoading(true)\r\n    setUpRecaptcha();\r\n    // var phoneNumber = getPhoneNumberFromUserInput();\r\n    var phoneNumber = \"+\" + number;\r\n    var appVerifier = window.recaptchaVerifier;\r\n    firebase\r\n      .auth()\r\n      .signInWithPhoneNumber(phoneNumber, appVerifier)\r\n      .then(function (confirmationResult) {\r\n        // SMS sent. Prompt user to type the code from the message, then sign the\r\n        // user in with confirmationResult.confirm(code).\r\n        console.log(\"get OTP initiated\");\r\n\r\n        // afterGETotp(confirmationResult)\r\n\r\n        window.confirmationResult = confirmationResult;\r\n        // step4\r\n        var code = window.prompt(\"Password has been sent to your device\");\r\n        // var code = getCodeFromUserInput();\r\n        confirmationResult\r\n          .confirm(code)\r\n          .then(function (result) {\r\n            // User signed in successfully.\r\n\r\n            var user1 = firebase.auth().currentUser;\r\n            if (user1.displayName !== null || user1.displayName === \"\") {\r\n              history.push(\"/Quiz\");\r\n            }\r\n\r\n            setInputNumber(\"\");\r\n            // ...\r\n          })\r\n          .catch(function (error) {\r\n            // User couldn't sign in (bad verification code?)\r\n            // ...\r\n            alert(error);\r\n            window.location.reload();\r\n          });\r\n      })\r\n      .catch(function (error) {\r\n        // Error; SMS not sent\r\n        alert(error);\r\n        window.location.reload();\r\n      });\r\n  };\r\n  //Registration, Verifying Captcha and OTP validation END\r\n\r\n  function CompleteProfile(nameInput) {\r\n      //on submitting FORM in complete registration form in <Profile />\r\n    firebase\r\n      .auth()\r\n      .currentUser.updateProfile({ displayName: nameInput })\r\n      .then(function () {\r\n        history.push(\"/Quiz\");\r\n        window.location.reload();\r\n      });\r\n  }\r\n\r\n  function logout() {\r\n  //on log out click inside <Profile />\r\n    firebase.auth().signOut();\r\n  }\r\n\r\n  // if user is logged in we show PROFILE else we show LOGIN\r\n\r\n  if (user && user.loggedIn) {\r\n    return (\r\n      <Profile completeProfile={CompleteProfile} user={user} logout={logout} />\r\n    );\r\n  } else {\r\n    \r\n    return (\r\n      <div className=\"body\">\r\n       \r\n\r\n        <div className=\"cardOne flexCenter cardOneAdd fontMontserrat\">\r\n          <div className='blank100'></div>\r\n          <div className='loginSection'>\r\n          <p className=\"headerLogin fontMontserrat\">L O G I N</p>\r\n            <div className=\"numberInputContainer\">\r\n              <p>enter <b>mobile number</b></p>\r\n              <input\r\n                className=\"numberInput fontMontserrat\"\r\n                value={inputNumber}\r\n                onChange={(e) => setInputNumber(e.target.value)}\r\n                type=\"number\"\r\n                placeholder='e.g. 919564458759'\r\n                name=\"mobile\"\r\n                required={true}\r\n              />\r\n            </div>\r\n\r\n\r\n\r\n            {!isloading ? \r\n              <div\r\n              className=\"signInButton wahniBgColor flexCenter\"\r\n              type=\"button\"\r\n              onClick={() => onSignInSubmit(inputNumber)}\r\n            >\r\n              SIGN IN\r\n            </div>\r\n            : \r\n            <div\r\n              className=\"signInButton wahniBgColor flexCenter\"\r\n              type=\"button\"\r\n              onClick={() => { if (window.confirm('Verification in progress. Are you sure you want to cancel ?')) window.location.reload();} }\r\n              >\r\n              <Loader width='15px' borderWidth='3px' />\r\n            </div>\r\n            }\r\n            \r\n\r\n          </div>\r\n          <div className='flexCenter' id=\"recaptcha-container\"></div>\r\n\r\n  \r\n            \r\n\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './navbar.css'\r\n\r\nfunction Navbar() {\r\n   \r\n    return (\r\n        <div>\r\n        <nav className=\"navContainer\">\r\n            <Link to='/myAccount' className=\"navLinks\">My Account</Link>\r\n            <Link to='/Quiz' className=\"navLinks\">Quiz</Link>\r\n        </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Navbar","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { UserContext } from \"./context/user1Context\";\r\nimport Loader from \"../globalComponents/loader\";\r\nimport axios from \"axios\";\r\nimport firebase from '../firebase'\r\n\r\nfunction Home() {\r\n  const userContextObject = useContext(UserContext);\r\n  const [array1, setarray1] = useState([])\r\n\r\n  // useEffect(() => {\r\n  //   firebase.firestore().collection('questions').onSnapshot((thisisquery) => {\r\n  //     const list = [];\r\n  //     thisisquery.forEach((doc) => {\r\n  //       list.push({ ...doc.data(), id: doc.id });\r\n  //     })\r\n  //     setarray1(list);\r\n  //   })\r\n  // }, []);\r\n\r\n  async function clickHandler() {\r\n    console.log('this is score: ',userContextObject.userScores)\r\n    console.log('this is USER: ',userContextObject.user)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>WahniHome</h1>\r\n      <Loader width=\"20px\" borderWidth=\"5px\" />\r\n      <button onClick={() => clickHandler()}>fetch</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport firebase from \"../../firebase\";\r\nimport Loader from \"../../globalComponents/loader\";\r\n\r\n\r\nfunction QuestionCard(props) {\r\n\r\n  //from props\r\n  const {\r\n    currentQuestion,\r\n    nextQ,\r\n    submitQ,\r\n    questions,\r\n    // users from context\r\n    user,\r\n    userScores\r\n  } = props;\r\n  // duration to track timer\r\n  const [duration, setDuration] = useState(30);\r\n  //check if time is OVER\r\n  const [timeOver, setTimeOver] = useState(false);\r\n  //check if quiz is over\r\n  const [quizOver, setQuizOver] = useState(false);\r\n  //check if show score is true\r\n  const [showScore, setShowScore] = useState(false);\r\n  //check if something is loading\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  // calculate score \r\n  const [score, setScore] = useState(0)\r\n\r\n  useEffect(() => {\r\n    var timesRun = 0;\r\n    const interval = setInterval(() => {\r\n      if (!timeOver) {\r\n        setDuration((duration) => duration - 1);\r\n        timesRun += 1;\r\n        if(timesRun === 30){\r\n        clearInterval(interval);\r\n    }\r\n      } else {\r\n        clearInterval(interval)\r\n      }\r\n    }, 1000);\r\n\r\n    setTimeout(() => {\r\n      setTimeOver(true);\r\n      setDuration(\"TIME OUT\");\r\n\r\n    }, 30000);\r\n\r\n    return () => clearInterval(interval);\r\n\r\n  }, []);\r\n\r\n  \r\n\r\n  // set an array of correct answers\r\n  const [correctAnswer, setCorrectAnswer] = useState([0,0,0,0,0]);\r\n\r\n  // set an array of answers that are selected\r\n  const [selectedAnswers, setSelectedAnswers] = useState([]);\r\n\r\n  function answerClickHandler(answer, indexure) {\r\n    // set selectedAnswers arrays each time an answer is selected\r\n    const newArray = [...selectedAnswers];\r\n    newArray[indexure] = answer;\r\n    setSelectedAnswers(newArray);\r\n\r\n    // navigate to next Question\r\n    let nextQuestion = currentQuestion + 1;\r\n    if (nextQuestion < questions.length) {\r\n      nextQ(nextQuestion);\r\n    } else {\r\n      setQuizOver(true)\r\n      setIsLoading(true)\r\n      // submit answers\r\n      getCorrectAnswers();\r\n    }\r\n  }\r\n\r\n  async function getCorrectAnswers() {\r\n    \r\n    //loop over questions and get the answers\r\n    await questions.forEach((q,i) => {\r\n      \r\n\r\n      firebase\r\n      .firestore()\r\n      .doc(`answers/${q.id}`)\r\n      .get()\r\n      .then(docSnap => {\r\n        const answersingle = docSnap.data().answer;\r\n        // set correct answers array\r\n        setCorrectAnswer(prevCorrectAnswer => [...prevCorrectAnswer.slice(0,i), answersingle, ...prevCorrectAnswer.slice(i+1,3)]);\r\n        // if everything is over set quiz over to true\r\n        if(i === questions.length-1) {\r\n          setIsLoading(false)\r\n        }\r\n      })\r\n      .catch(err => {\r\n        setIsLoading(false)\r\n        window.alert('Error fetching answers from firestore')\r\n\r\n      })\r\n    })\r\n  }\r\n\r\n  function onClickToSeeScore() {\r\n    let arrayTest = []\r\n    for (let i = 0; i < questions.length; i++) {\r\n      if(selectedAnswers[i] === correctAnswer[i]) {\r\n        setScore(prevScore => prevScore + 1)\r\n        arrayTest.push('correct')\r\n      }\r\n    }\r\n    setIsLoading(true);\r\n    setShowScore(true);\r\n    // send to firestore\r\n    if (user && user.loggedIn) {\r\n      createScoreObject2submit2firestore(arrayTest.length);\r\n    } else {\r\n      window.alert('You are not logged In')\r\n      setIsLoading(false)\r\n    }\r\n    \r\n  }\r\n\r\n  function createScoreObject2submit2firestore(newScore) {\r\n\r\n    if (user && userScores.length > 0) {\r\n      const lastScore = userScores[0].score;\r\n      const newPercentageIncrease = (newScore-lastScore)/lastScore*100;\r\n      const newAttempt = userScores[0].attempt + 1;\r\n      \r\n      let newScoreObject = {\r\n        'score': newScore,\r\n        'attempt': newAttempt,\r\n        'perecentageIncrease': newPercentageIncrease,\r\n        'attendedAt': new Date()\r\n      }\r\n\r\n      submitting2firestore(newScoreObject)\r\n    \r\n    }\r\n    else {\r\n      let newScoreObject = {\r\n        'score': newScore,\r\n        'attempt': 1,\r\n        'perecentageIncrease': null,\r\n        'attendedAt': new Date()\r\n      }\r\n      submitting2firestore(newScoreObject)\r\n    }\r\n\r\n  }\r\n\r\n  function submitting2firestore(newScoreObject) {\r\n    firebase\r\n    .firestore()\r\n    .collection(`users/${user.id}/scores`)\r\n    .add(\r\n      newScoreObject\r\n    )\r\n    .then(res => {\r\n      console.log('added to database')\r\n\r\n      firebase\r\n      .firestore()\r\n      .collection('rankings')\r\n      .add(\r\n        {\r\n          ...newScoreObject,\r\n          'uid': user.id,\r\n          'username': user.name,\r\n        }\r\n      )\r\n      .then(res => {\r\n        \r\n        console.log('added to rankings')\r\n\r\n        setIsLoading(false)\r\n      })\r\n      .catch(err => {\r\n        console.log('error')\r\n\r\n        window.alert('Error updating the rankings')\r\n        setIsLoading(false)\r\n      })\r\n\r\n    })\r\n    .catch(err => {\r\n      console.log('error')\r\n\r\n      setIsLoading(false)\r\n      window.alert('Error updating your profile')\r\n    });\r\n  }\r\n\r\n\r\n  if (quizOver && !showScore) {\r\n    return (\r\n      <div className=\"flexContainFull flexCenter fontMontserrat\">\r\n        {\r\n          isLoading ? \r\n          <Loader width='50px' borderWidth='6px' />\r\n          :\r\n          <div className=\"timeOutContainer\">\r\n          <p style={{ fontSize: \"24px\", fontWeight: \"bold\" }}>You have completed the Quiz</p>\r\n          <div\r\n            className=\"buttonOne wahniColor retryButton\"\r\n            onClick={() =>\r\n              onClickToSeeScore()\r\n            }\r\n          >\r\n            Click to see Score\r\n          </div>\r\n        </div>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n  if (timeOver && !showScore && !quizOver) {\r\n    return (\r\n      <div className=\"flexContainFull flexCenter fontMontserrat\">\r\n        \r\n        <div className=\"timeOutContainer\">\r\n          <p style={{ fontSize: \"24px\", fontWeight: \"bold\" }}>TIMEOUT</p>\r\n          <div\r\n            className=\"buttonOne wahniColor retryButton\"\r\n            onClick={() =>\r\n              onClickToSeeScore()\r\n            }\r\n          >\r\n            Click to see Score\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  if ((timeOver && showScore) || showScore || (quizOver && showScore)) {\r\n    return (\r\n      <div className=\"flexContainFull flexCenter\">\r\n        {isLoading ? \r\n\r\n        <Loader width='50px' borderWidth='6px' />\r\n\r\n          :\r\n\r\n          <div className=\"scoreContainer\">\r\n          <p style={{ fontSize: \"24px\", fontWeight: \"bold\" }}>\r\n            Congratulations\r\n          </p>\r\n          <p style={{ fontSize: \"18px\" }}>You scored</p>\r\n          <div className=\"scoreNumber\">\r\n            <p style={{ fontSize: \"40px\", fontWeight: \"bold\" }}>{score}</p>\r\n            <p\r\n              style={{\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                marginTop: 15,\r\n                fontSize: \"22px\",\r\n                fontFamily: \"sans-serif\",\r\n                marginLeft: 5,\r\n              }}\r\n            >\r\n              / {questions.length}\r\n            </p>\r\n          </div>\r\n          <Link className=\"link buttonOne wahniColor retryButton\" to=\"/Quiz\">\r\n            Retry\r\n          </Link>\r\n        </div>\r\n\r\n      }\r\n        \r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"flexContainFull fontMontserrat\">\r\n        <div>\r\n          <div className=\"question-count-timer\">\r\n            <span className=\"question-count\">#{currentQuestion + 1}</span>\r\n\r\n            <div className=\"timer\">\r\n              <div>{duration}</div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"questionHeadText\">Question</div>\r\n        </div>\r\n\r\n        <div className=\"question-and-answer-section\">\r\n          <div className=\"question-text\">\r\n            {questions[currentQuestion].questionText}\r\n          </div>\r\n\r\n          <div className=\"answer-section wahniColor\">\r\n            {questions[currentQuestion].options.map((option) => (\r\n              <div\r\n                className=\"buttonOne\"\r\n                id=\"answerButton\"\r\n                onClick={() => {\r\n                  answerClickHandler(\r\n                    option,\r\n                    currentQuestion\r\n                  );\r\n                }}\r\n              >\r\n                {option}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuestionCard;\r\n","import { Redirect, Link } from \"react-router-dom\";\r\nimport React, { useState, useContext, useEffect } from \"react\";\r\nimport { UserContext } from \"../context/user1Context\";\r\nimport \"./quizScreen.css\";\r\nimport QuestionCard from \"./questionCard\";\r\nimport Loader from \"../../globalComponents/loader\";\r\nimport firebase from \"../../firebase\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction Home() {\r\n  // user details and scores\r\n  const userContextObject = useContext(UserContext);\r\n  const user = userContextObject.user;\r\n  const userScores = userContextObject.userScores;\r\n  // shuffled questions\r\n  const [questions, setQuestions] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  // useHistory hook to redirect to '/Quiz' on login if registration is complete\r\n  const history = useHistory();\r\n\r\n  async function getQuestionsFromFirestore() {\r\n    await firebase\r\n      .firestore()\r\n      .collection(\"questions\")\r\n      .limit(5)\r\n      .get()\r\n      .then((thisisquery) => {\r\n        const list = [];\r\n        thisisquery.forEach((doc) => {\r\n          list.push({ ...doc.data(), id: doc.id });\r\n        });\r\n        setQuestions(list);\r\n        setIsLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        history.push(\"/Quiz\");\r\n        window.alert(\"couldnt fetch questions\");\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    // on component load, from the qs, array the questions are shuffled and randomized\r\n    setIsLoading(true);\r\n    getQuestionsFromFirestore();\r\n  }, []);\r\n\r\n  // question Index to be shown to the user\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  // calculate scores=\r\n  const [score, setScore] = useState(0);\r\n  // when timeOut or onSubmit the score is shown (showscore set to true)\r\n  const [showScore, setShowScore] = useState(false);\r\n\r\n  // fetch score hsitory of user from backend to send both score and percentage increase to backend for rankings\r\n\r\n  function nextQ(nextQuestion) {\r\n    setCurrentQuestion(nextQuestion);\r\n\r\n    // const nextQuestion = currentQuestion + 1;\r\n    // if (nextQuestion < questions.length) {\r\n    // }\r\n  }\r\n\r\n  function submitQ(score) {\r\n    setScore(score);\r\n    setShowScore(true);\r\n\r\n    // score with user id is sent to backEnd to store with new Date()\r\n  }\r\n\r\n  // if there is no user logged in this is redirected to myAccount for login or register\r\n  if (!user || !user.loggedIn ) return <Redirect to=\"/myAccount\" />;\r\n\r\n  if (user && !isLoading) {\r\n    return (\r\n      <div className=\"body\">\r\n        <div className=\"questionDiv\">\r\n          <QuestionCard\r\n            currentQuestion={currentQuestion}\r\n            nextQ={nextQ}\r\n            submitQ={submitQ}\r\n            questions={questions}\r\n            user={user}\r\n            userScores={userScores}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  } else if (user && isLoading) {\r\n    return (\r\n      <div className=\"flexCenter body\">\r\n        <Loader borderWidth=\"5px\" width=\"50px\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import { Link } from \"react-router-dom\";\r\nimport React, { useContext } from \"react\";\r\nimport \"./quizScreen.css\";\r\nimport { UserContext } from \"../context/user1Context\";\r\n\r\nfunction Home() {\r\n  // user details and scores\r\n  const userContextObject = useContext(UserContext);\r\n  const user = userContextObject.user;\r\n  // 3 icons' linking to play, rankings and admin dashboard to add questions only for admin\r\n\r\n  function alertIfnotLoggedIn() {\r\n    if (!user || !user.loggedIn) {\r\n      window.alert('Log in to attend the Quiz')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"body\">\r\n      <div className=\"flex1 quizScreenContainer fontMontserrat\">\r\n        <div className=\"linksContainer\">\r\n          <Link onClick={() => alertIfnotLoggedIn()} className=\"singleLinkContainer link link1\" to=\"/Quiz/play\">\r\n            <div>\r\n              <p style={{ fontSize: 18, letterSpacing: \"0.05em\" }}>Take the</p>\r\n              <p style={{ fontSize: 24, fontWeight: \"bold\" }}>Quiz</p>\r\n            </div>\r\n            <img\r\n              src=\"https://www.iconsdb.com/icons/preview/white/play-xxl.png\"\r\n              alt=\"\"\r\n            />\r\n          </Link>\r\n\r\n          {user && user.id === \"zOOj1gwSb7WQA7dwMBgW2EYJOk52\" ? (\r\n            <Link className=\"singleLinkContainer link link1\" to=\"/Quiz/add\">\r\n              <div>\r\n                <p style={{ fontSize: 24, fontWeight: \"bold\" }}>Admin</p>\r\n              </div>\r\n              <img\r\n                src=\"https://www.iconsdb.com/icons/preview/white/administrator-xxl.png\"\r\n                alt=\"\"\r\n              />{\" \"}\r\n            </Link>\r\n          ) : null}\r\n\r\n          <Link\r\n            className=\"singleLinkContainer link link2 wahniColor\"\r\n            to=\"/Quiz/ranking\"\r\n          >\r\n            <p style={{ paddingLeft: \"25px\", fontWeight: \"bold\" }}>Leader</p>\r\n            <p>board</p>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React, { useState } from 'react'\r\nimport './rankingScreen.css'\r\nimport '../Registration/myAccount.css'\r\n\r\nfunction RankingScreen() {\r\n\r\n    // on useEffect fetch user scores from the backEnd\r\n\r\n    const rankings = [\r\n        {\r\n            userid: '11111',\r\n            username: 'AAAAA',\r\n            scores: [\r\n                {\r\n                    submittedAt: 1,\r\n                    score: '5',\r\n                    percentageIncrease: '25'\r\n\r\n                },\r\n                {\r\n                    submittedAt: 2,\r\n                    score: '10',\r\n                    percentageIncrease: '50'\r\n\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            userid: '22222',\r\n            username: 'BBBBB',\r\n            scores: [\r\n                {\r\n                    submittedAt: 1,\r\n                    score: '45',\r\n                    percentageIncrease: '56'\r\n\r\n                },\r\n                {\r\n                    submittedAt: 2,\r\n                    score: '5',\r\n                    percentageIncrease: '45'\r\n\r\n                },\r\n            ]\r\n        },\r\n        {\r\n            userid: '33333',\r\n            username: 'CCCCC',\r\n            scores: [\r\n                {\r\n                    submittedAt: 1,\r\n                    score: '23',\r\n                    percentageIncrease: '45'\r\n\r\n                },\r\n                {\r\n                    submittedAt: 2,\r\n                    score: '56',\r\n                    percentageIncrease: '13'\r\n\r\n                },\r\n            ]\r\n        },\r\n        {\r\n            userid: '44444',\r\n            username: 'DDDDD',\r\n            scores: [\r\n                {\r\n                    submittedAt: 1,\r\n                    score: '55',\r\n                    percentageIncrease: '12'\r\n                },\r\n                {\r\n                    submittedAt: 2,\r\n                    score: '8',\r\n                    percentageIncrease: '16'\r\n\r\n                },\r\n            ]\r\n        },\r\n        {\r\n            userid: '55555',\r\n            username: 'EEEEE',\r\n            scores: [\r\n                {\r\n                    submittedAt: 1,\r\n                    score: '63',\r\n                    percentageIncrease: '32'\r\n                },\r\n                {\r\n                    submittedAt: 2,\r\n                    score: '80',\r\n                    percentageIncrease: '60'\r\n                },\r\n            ]\r\n        },\r\n\r\n    ]\r\n   \r\n    //all these contribute to UI for the animation effect\r\n    //START\r\n    const [mostAttemptsClicked, setmostAttemptsClicked] = useState(false);\r\n    const [topScorersClicked, settopScorersClicked] = useState(false);\r\n    const [topPerformersCLicked, settopPerformersCLicked] = useState(false);\r\n  \r\n    const loginContainer1 = topScorersClicked ? 'rankCard rankCardHeight400': 'rankCard rankCardHeight60';\r\n    const headerContainer1 = topScorersClicked ? 'rankHeaderDiv': 'rankHeaderDiv rankHeaderDivClick';\r\n    const rankTable1 = topScorersClicked ? 'rankTable' : 'hide-section1';\r\n  \r\n    const loginContainer2 = mostAttemptsClicked ? 'rankCard rankCardHeight400': 'rankCard rankCardHeight60';\r\n    const headerContainer2 = mostAttemptsClicked ? 'rankHeaderDiv': 'rankHeaderDiv rankHeaderDivClick';\r\n    const rankTable2 = mostAttemptsClicked ? 'rankTable' : 'rankTable hide-section1';\r\n\r\n    const loginContainer3 = topPerformersCLicked ? 'rankCard rankCardHeight400': 'rankCard rankCardHeight60';\r\n    const headerContainer3 = topPerformersCLicked ? 'rankHeaderDiv': 'rankHeaderDiv rankHeaderDivClick';\r\n    const rankTable3 = topPerformersCLicked ? 'rankTable' : 'rankTable hide-section1';\r\n\r\n    //Logic Calculation to get Ranking of each types\r\n    const [topScores, setTopScores] = useState([]);\r\n    const [mostAttempts, setMostAttempts] = useState([]);\r\n    const [highestPercentage, setHighestPercentage] = useState([]);\r\n\r\n    function topScore() {\r\n        const newArray = [];\r\n        rankings.map(data => {\r\n            data.scores.map(data1 => {\r\n                newArray.push(\r\n                    {\r\n                        name: data.username,\r\n                        score: data1.score\r\n                    }\r\n                )\r\n            })\r\n        })\r\n        setTopScores(newArray.sort((a,b) => (parseInt(b.score) > parseInt(a.score)) ? 1 : -1))\r\n    }\r\n\r\n    function mostAttempt() {\r\n        const newArray = [];\r\n        rankings.map(data => newArray.push({\r\n            name: data.username,\r\n            attempts: data.scores.length\r\n        }))\r\n        setMostAttempts(newArray.sort((a,b) => (parseInt(b.attempts) > parseInt(a.attempts)) ? 1 : -1))\r\n    }\r\n\r\n    function percentageHighest() {\r\n        const newArray = [];\r\n        rankings.map(data => {\r\n            data.scores.map(data1 => {\r\n                newArray.push(\r\n                    {\r\n                        name: data.username,\r\n                        percentage: data1.percentageIncrease\r\n                    }\r\n                )\r\n            })\r\n        })\r\n        setHighestPercentage(newArray.sort((a,b) => (parseInt(b.percentage) > parseInt(a.percentage)) ? 1 : -1))\r\n    }\r\n\r\n    //Click Handlers of each ranking Components\r\n    function handleTopScoreClick(e) {\r\n        settopScorersClicked(true)\r\n        setmostAttemptsClicked(false)\r\n        settopPerformersCLicked(false)\r\n        topScore()\r\n      }\r\n      function handleMostAttemptClick(e) {\r\n        settopScorersClicked(false)\r\n        settopPerformersCLicked(false)\r\n        setmostAttemptsClicked(true)\r\n        mostAttempt()\r\n      }\r\n      function handleTopPerformerClick(e) {\r\n        settopScorersClicked(false)\r\n        settopPerformersCLicked(true)\r\n        setmostAttemptsClicked(false)\r\n        percentageHighest()\r\n      }\r\n\r\n    \r\n  \r\n    // if user is logged in we show profile else we show register or login page\r\n  \r\n    \r\n      return (\r\n        <div className='body fontMontserrat'>\r\n          <div className={loginContainer1}>\r\n            {/* <div className='form'> */}\r\n            <div className={headerContainer1} onClick={handleTopScoreClick}>\r\n                <p className='wahniColor'>Top <b>Scores</b></p>\r\n                </div>\r\n              <div className={rankTable1}>\r\n              <div className='singleRankRow'>\r\n                  <div className='rankText rankTextStyle'>Rank</div>\r\n                  <div className='nameText rankTextStyle'>Name</div>\r\n                  <div className='scoreText rankTextStyle'>Score</div>\r\n                  </div>\r\n              \r\n                  {\r\n                      topScores.slice(0,5).map((data, index) => {\r\n                          return (\r\n                <div className='singleRankRow'>\r\n                  <div className='rankText rankTextStyle'>{index + 1}</div>\r\n                  <div className='nameText rankTextStyle'>{data.name}</div>\r\n                  <div className='scoreText rankTextStyle'>{data.score}</div>\r\n                  \r\n                  </div>\r\n                          )\r\n                      })\r\n                  }\r\n              {/* </div> */}\r\n            </div>\r\n\r\n\r\n          </div>\r\n          <div className={loginContainer2}>\r\n            {/* <div className='form'> */}\r\n            <div className={headerContainer2} onClick={handleMostAttemptClick}>\r\n            <p className='wahniColor'>Most <b>Attempts</b></p>\r\n                </div>\r\n              <div className={rankTable2}>\r\n              <div className='singleRankRow'>\r\n                  <div className='rankText rankTextStyle'>Rank</div>\r\n                  <div className='nameText rankTextStyle'>Name</div>\r\n                  <div className='scoreText rankTextStyle'>Attempts</div>\r\n                  </div>\r\n                  {\r\n                      mostAttempts.slice(0,5).map((data, index) => {\r\n                          return (\r\n                <div className='singleRankRow'>\r\n                  <div className='rankText rankTextStyle'>{index + 1}</div>\r\n                  <div className='nameText rankTextStyle'>{data.name}</div>\r\n                  <div className='scoreText rankTextStyle'>{data.attempts}</div>\r\n                  \r\n                  </div>\r\n                          )\r\n                      })\r\n                  }\r\n              </div>\r\n            {/* </div> */}\r\n          </div>\r\n\r\n          <div className={loginContainer3}>\r\n            {/* <div className='form'> */}\r\n            <div className={headerContainer3} onClick={handleTopPerformerClick}>\r\n            <p className='wahniColor'>Top <b>Performers</b></p>\r\n\r\n                </div>\r\n              <div className={rankTable3}>\r\n              <div className='singleRankRow'>\r\n                  <div className='rankText rankTextStyle'>Rank</div>\r\n                  <div className='nameText rankTextStyle'>Name</div>\r\n                  <div className='scoreText rankTextStyle'>Improvement</div>\r\n                  </div>\r\n                  {\r\n                      highestPercentage.slice(0,5).map((data, index) => {\r\n                          return (\r\n                <div className='singleRankRow'>\r\n                  <div className='rankText rankTextStyle'>{index + 1}</div>\r\n                  <div className='nameText rankTextStyle'>{data.name}</div>\r\n                  <div className='scoreText rankTextStyle'>{data.percentage}</div>\r\n                  \r\n                  </div>\r\n                          )\r\n                      })\r\n                  }\r\n              </div>\r\n            {/* </div> */}\r\n          </div>\r\n    \r\n          \r\n        </div>\r\n    \r\n      );\r\n}\r\n\r\n\r\nexport default RankingScreen","import React, { useContext, useEffect, useCallback, useState } from 'react';\n\n\nexport const QuestionContext = React.createContext({});\n\nconst QuestionProvider = QuestionContext.Provider;\nconst QuestionConsumer = QuestionContext.Consumer;\n\n// function onAuthStateChange(callback) {\n// make sure user register or login\n// }\n\n  // user is added or logged in and sent to all the components of this site through this context\n\n\nexport function QuestionContextProvider(props) {\n\n\n    // on useEffect fetch questions from the backend and save it in 'qs'\n\n    const [qs, setqs] = useState([\n            {\n                questionText: 'What is the capital of France?',\n                answerOptions: [\n                    { answerText: 'New York', isCorrect: false },\n                    { answerText: 'London', isCorrect: false },\n                    { answerText: 'Paris', isCorrect: true },\n                    { answerText: 'Dublin', isCorrect: false },\n                ],\n            },\n            {\n                questionText: 'Who is CEO of Tesla?',\n                answerOptions: [\n                    { answerText: 'Jeff Bezos', isCorrect: false },\n                    { answerText: 'Elon Musk', isCorrect: true },\n                    { answerText: 'Bill Gates', isCorrect: false },\n                    { answerText: 'Tony Stark', isCorrect: false },\n                ],\n            },\n            {\n                questionText: 'The iPhone was created by which company?',\n                answerOptions: [\n                    { answerText: 'Apple', isCorrect: true },\n                    { answerText: 'Intel', isCorrect: false },\n                    { answerText: 'Amazon', isCorrect: false },\n                    { answerText: 'Microsoft', isCorrect: false },\n                ],\n            },\n            {\n                questionText: 'How many Harry Potter books are there?',\n                answerOptions: [\n                    { answerText: '1', isCorrect: false },\n                    { answerText: '4', isCorrect: false },\n                    { answerText: '6', isCorrect: false },\n                    { answerText: '7', isCorrect: true },\n                ],\n            },\n            {\n                questionText: 'How many Harry Potter books are there?',\n                answerOptions: [\n                    { answerText: '1', isCorrect: false },\n                    { answerText: '4', isCorrect: false },\n                    { answerText: '6', isCorrect: false },\n                    { answerText: '7', isCorrect: true },\n                ],\n            },\n            {\n                questionText: 'What is the capital of France?',\n                answerOptions: [\n                    { answerText: 'New York', isCorrect: false },\n                    { answerText: 'London', isCorrect: false },\n                    { answerText: 'Paris', isCorrect: true },\n                    { answerText: 'Dublin', isCorrect: false },\n                ],\n            },\n            {\n                questionText: 'Who is CEO of Tesla?',\n                answerOptions: [\n                    { answerText: 'Jeff Bezos', isCorrect: false },\n                    { answerText: 'Elon Musk', isCorrect: true },\n                    { answerText: 'Bill Gates', isCorrect: false },\n                    { answerText: 'Tony Stark', isCorrect: false },\n                ],\n            },\n            {\n                questionText: 'The iPhone was created by which company?',\n                answerOptions: [\n                    { answerText: 'Apple', isCorrect: true },\n                    { answerText: 'Intel', isCorrect: false },\n                    { answerText: 'Amazon', isCorrect: false },\n                    { answerText: 'Microsoft', isCorrect: false },\n                ],\n            },\n            {\n                questionText: 'How many Harry Potter books are there?',\n                answerOptions: [\n                    { answerText: '1', isCorrect: false },\n                    { answerText: '4', isCorrect: false },\n                    { answerText: '6', isCorrect: false },\n                    { answerText: '7', isCorrect: true },\n                ],\n            },\n    ])\n  \n  return (\n    <QuestionProvider value={[qs, setqs]}>\n    {props.children}      \n    </QuestionProvider>\n  );\n}\n\n","import React, { useContext, useEffect, useCallback, useState } from 'react';\nimport firebase from '../../firebase'\n\n\nexport const AdminQuestionContext = React.createContext({});\n\nconst AdminQuestionProvider = AdminQuestionContext.Provider;\nconst AdminQuestionConsumer = AdminQuestionContext.Consumer;\n\n// function onAuthStateChange(callback) {\n// make sure user register or login\n// }\n\n  // user is added or logged in and sent to all the components of this site through this context\n\n\nexport function AdminQuestionContextProvider(props) {\n\n    \n\n    // on useEffect fetch questions from the backend and save it in 'qs'\n\n    const [allQs, setAllQs] = useState([])\n\n    useEffect(() => {\n        firebase.firestore().collection('questions').onSnapshot((thisisquery) => {\n          const list = [];\n          thisisquery.forEach((doc) => {\n            list.push({ ...doc.data(), id: doc.id });\n          })\n          setAllQs(list);\n          console.log(list)\n        })\n      }, []);\n  \n  return (\n    <AdminQuestionProvider value={[allQs, setAllQs]}>\n    {props.children}\n    </AdminQuestionProvider>\n  );\n}\n\n","import React, {useState, useContext, useEffect } from 'react';\nimport './questionScreen.css'\nimport firebase from '../../firebase'\n\nfunction ShowQ(props) {\n    const { allQs, setAllQs } = props;\n    const [correctAnswers, setCorrectAnswers] = useState([\n      {\n        'id': '123',\n        'answer': 'sdasda'       \n      }, \n      {\n        'id': '456',\n        'answer': 'second'\n      },\n      {\n        'id': '789',\n        'answer': 'third'\n      },\n    ]);\n    // const [newQs, setnewQs] = useState(AllQs)\n    \n\n    function getAnswer(id ,index) {\n      firebase\n      .firestore()\n      .doc(`answers/${id}`)\n      .get().then((docData => {\n        const answersingle = docData.data().answer;\n        setAllQs(prevCorrectAnswer => [...prevCorrectAnswer.slice(0,index), {...prevCorrectAnswer[index], 'answer': answersingle}, ...prevCorrectAnswer.slice(index+1,3)]);\n\n\n        // const list = [];\n        // documentSnapshots.forEach((doc) => {\n        //   list.push({ ...doc.data(), id: doc.id });\n        // })\n        // // setCorrectAnswers(prevCorrectAnswer => [...prevFullnotes, ...list]);\n        // setAllQs(prevCorrectAnswer => [...prevCorrectAnswer.slice(0,index), {...prevCorrectAnswer[index], 'answer': list[0].answer}, ...prevCorrectAnswer.slice(index+1,3)]);\n      }))\n      .catch(err => {\n        window.alert('Unable to get Answer')\n      });\n    }\n\n    \n    const colorConst = (iscorrect) => {\n      if(iscorrect) {\n          return 'green'\n      } else {\n          return 'black'\n      }\n  }\n  const fontWeightConst = (iscorrect) => {\n    if(iscorrect) {\n        return 'bold'\n    } else {\n        return 'normal'\n    }\n}\n\n    function AnswersView(props) {\n        const {answers} = props\n        return (\n          <div>\n            \n            {answers ? (\n              answers.map((a, i) => (\n                  \n                <span>\n                  \n                    <p>{a}</p>\n                </span>\n              ))\n            ) : (\n              <div></div>\n            )}\n          </div>\n        );\n}\n\n    function QuestionsView() {\n        return (\n          <div className='questonsSubMainDiv'>\n            {allQs ? (\n              allQs.map((q, i) => (\n                <div className='insideQuestionsView'>\n                  {/* <p>Question:</p> */}\n                    <p style={{fontWeight: 'bold'}}>Q : {q.questionText}</p>\n                    <AnswersView answers={q.options} />\n                    The Answer is {q.answer}\n                    <button onClick={() => getAnswer(q.id, i)}>show answer</button>\n                </div>\n              ))\n            ) : (\n              <div></div>\n            )}\n          </div>\n        );\n}\n\n\n    return (\n        <div className='questionsView'>\n        <QuestionsView />\n        <hr />\n        </div>\n        \n    )\n\n}\n\nexport default ShowQ;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport { UserContext } from \"../context/user1Context\";\nimport { QuestionContext } from \"../context/questionsContext\";\nimport { AdminQuestionContext } from \"../context/adminQcontext\";\n\nimport ShowQ from \"./showQuestions\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport firebase from '../../firebase'\n\nimport \"./questionScreen.css\";\n\nfunction AddDel() {\n// user details and scores\n  const userContextObject = useContext(UserContext);\n  const user = userContextObject.user;\n\n  const [allQs, setAllQs] = useContext(AdminQuestionContext);\n\n\n  function handleFormSubmit1(values) {\n    const correctAnswer = (correctoption) => {\n      if (correctoption === 'A') {\n        return values.optionA\n      }\n      if (correctoption === 'B') {\n        return values.optionB\n      }\n      if (correctoption === 'C') {\n        return values.optionC\n      }\n      if (correctoption === 'D') {\n        return values.optionD\n      }\n    };\n    const newQ = {\n      questionText: `${values.questionInput}`,\n      options: [\n        `${values.optionA}`,\n        `${values.optionB}`,\n        `${values.optionC}`,\n        `${values.optionD}`\n      ],\n    };\n\n    firebase\n    .firestore()\n    .collection('questions')\n    .add({\n      ...newQ,\n      createdAt: new Date()\n    })\n    .then(res => {\n      console.log('question added with id:', res.id);\n      firebase\n      .firestore()\n      .doc(`answers/${res.id}`)\n      .set({\n        'answer': correctAnswer(values.correct),\n        'questionId': res.id,\n        'createdAt': new Date()\n      })\n      .then(res1 => {\n        console.log('answer added')\n      })\n      .catch(err => {\n        window.alert('Unable to add answer')\n\n      })\n    })\n    .catch(err => {\n      window.alert('Unable to add question')\n    });\n\n\n}\n\n    \n\n  if (!user) return <Redirect to=\"/myAccount\" />;\n\n  if (user.id !== \"zOOj1gwSb7WQA7dwMBgW2EYJOk52\") {\n    return <h1>You are not AUTHORIZED</h1>;\n  } else {\n    return (\n      <div className='AdminAppContainer'>\n\n        <div className='questionsMainDiv'>\n            <ShowQ allQs={allQs} setAllQs={setAllQs} />\n        </div>\n\n        <div className=\"formDiv\">\n        <p className='formHeader'>ADD QUESTIONS</p>\n          <Formik\n            initialValues={{\n              questionInput: \"\",\n              optionA: \"\",\n              optionB: \"\",\n              optionC: \"\",\n              optionD: \"\",\n              correct: \"\",\n            }}\n            onSubmit={(values) => handleFormSubmit1(values)}\n            validationSchema={Yup.object().shape({\n              questionInput: Yup.string().required(\"*this is a required field\"),\n              optionA: Yup.string().required(\"*this is a required field\"),\n              optionB: Yup.string().required(\"*this is a required field\"),\n              optionC: Yup.string().required(\"*this is a required field\"),\n              optionD: Yup.string().required(\"*this is a required field\"),\n              correct: Yup.string().required(\"*choose one option\").min(1),\n            })}\n          >\n            {(props) => {\n              const {\n                values,\n                touched,\n                errors,\n                dirty,\n                isSubmitting,\n                handleChange,\n                handleBlur,\n                handleSubmit,\n                handleReset,\n              } = props;\n              return (\n                <form onSubmit={handleSubmit}>\n                  \n                  <input\n                    id=\"questionInput\"\n                    placeholder=\"Enter the Question\"\n                    type=\"text\"\n                    value={values.questionInput}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    className={\n                      errors.questionInput && touched.questionInput\n                        ? \"text-input error\"\n                        : \"text-input\"\n                    }\n                  />\n                  {errors.questionInput && touched.questionInput && (\n                    <div className=\"input-feedback\">{errors.questionInput}</div>\n                  )}\n\n                  <label htmlFor=\"optionA\" className='labelHeader'>\n                    Option A\n                  </label>\n                  <input\n                    id=\"optionA\"\n                    placeholder=\"Enter option\"\n                    type=\"text\"\n                    value={values.optionA}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    // className={\n                    //   errors.email && touched.email\n                    //     ? \"text-input error\"\n                    //     : \"text-input\"\n                    // }\n                  />\n                  {errors.optionA && touched.optionA && (\n                    <div className=\"input-feedback\">{errors.optionA}</div>\n                  )}\n                  <label htmlFor=\"optionB\" className='labelHeader'>\n                    Option B\n                  </label>\n                  <input\n                    id=\"optionB\"\n                    placeholder=\"Enter Option\"\n                    type=\"text\"\n                    value={values.optionB}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    // className={\n                    //   errors.email && touched.email\n                    //     ? \"text-input error\"\n                    //     : \"text-input\"\n                    // }\n                  />\n                  {errors.optionB && touched.optionB && (\n                    <div className=\"input-feedback\">{errors.optionB}</div>\n                  )}\n                  <label htmlFor=\"optionC\" className='labelHeader'>\n                    Option C\n                  </label>\n                  <input\n                    id=\"optionC\"\n                    placeholder=\"Enter option\"\n                    type=\"text\"\n                    value={values.optionC}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    // className={\n                    //   errors.email && touched.email\n                    //     ? \"text-input error\"\n                    //     : \"text-input\"\n                    // }\n                  />\n                  {errors.optionC && touched.optionC && (\n                    <div className=\"input-feedback\">{errors.optionC}</div>\n                  )}\n                  <label htmlFor=\"optionD\" className='labelHeader'>\n                    Option D\n                  </label>\n                  <input\n                    id=\"optionD\"\n                    placeholder=\"Enter Option\"\n                    type=\"text\"\n                    value={values.optionD}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    // className={\n                    //   errors.email && touched.email\n                    //     ? \"text-input error\"\n                    //     : \"text-input\"\n                    // }\n                  />\n                  {errors.optionD && touched.optionD && (\n                    <div className=\"input-feedback\">{errors.optionD}</div>\n                  )}\n\n                  <select\n                    name=\"correct\"\n                    value={values.correct}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    style={{ display: \"block\" }}\n                    className='selector'\n                  >\n                    <option value=\"\" label=\"Choose the Right option\" />\n                    <option value=\"A\" label=\"A\" />\n                    <option value=\"B\" label=\"B\" />\n                    <option value=\"C\" label=\"C\" />\n                    <option value=\"D\" label=\"D\" />\n                  </select>\n                  {errors.correct && touched.correct && (\n                    <div className=\"input-feedback\">{errors.correct}</div>\n                  )}\n\n                  <button type=\"submit\" className='submitButton1'>Submit</button>\n\n                  {/* <DisplayFormikState {...props} /> */}\n                </form>\n              );\n            }}\n          </Formik>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AddDel;\n","export default __webpack_public_path__ + \"static/media/wg.5034db2c.png\";","import React from 'react';\nimport './footer.css';\nimport logo from '../../assets/wg.png'\n\nfunction Footer() {\n    return (\n      \n      <div className='footerDiv'>\n          <div className='footerContain1'>\n          <img src={logo} className=\"footerLogo\" alt=\"logo\" />\n          </div>\n          <div className='footerContain2 wahniColor'>\n            <p id='fontResponsive'>\n                പരാതികൾ complaints@wahni.com\n                <br /><br />\n                എല്ലാവർക്കും ഉപകാരപ്പെടുന്നതരത്തിൽ ഉള്ള പൊതുവായ ചോദ്യങ്ങൾ http:/ask.wahni.com -ഇൽ ചോദിക്കുന്നതായിരിക്കും കൂടുതൽ നന്നാവുക\n            </p>\n          </div>\n      </div>\n  \n    );\n  }\n  \n  export default Footer;\n  ","import MyAccount from './components/Registration/myAccount'\nimport { BrowserRouter, Switch, Route, HashRouter } from 'react-router-dom';\nimport Navbar from './components/Layout/navbar'\nimport Home from './components/home'\nimport QuizPlay from './components/Quiz/quizPlay'\nimport Quiz from './components/Quiz/quizScreen'\nimport RankingScreen from './components/Ranking/rankingScreen'\nimport { UserContextProvider } from './components/context/user1Context';\nimport { QuestionContextProvider } from './components/context/questionsContext';\nimport { AdminQuestionContextProvider } from './components/context/adminQcontext'\nimport AddDel from './components/questionsScreen/addDelQs'\nimport './components/styles/globalStyles.css'\nimport Footer from './components/footer/footer'\n\n\n\n\nfunction App() {\n  return (\n    \n    <HashRouter>\n      <Navbar />\n      <Switch>\n      <UserContextProvider>\n        <Route exact path='/' component={Home} />\n          <Route exact path='/myAccount' component={MyAccount} />\n          <Route exact path='/Quiz' component={Quiz} />\n\n          <QuestionContextProvider>\n          <Route exact path='/Quiz/play' component={QuizPlay} />\n\n          <AdminQuestionContextProvider>\n          <Route exact path='/Quiz/add' component={AddDel} />\n          </AdminQuestionContextProvider>\n          \n          </QuestionContextProvider>\n\n          <Route exact path='/Quiz/ranking' component={RankingScreen} />\n        </UserContextProvider>\n      </Switch>\n      <Footer />\n    </HashRouter>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}