{"version":3,"sources":["components/Registration/myAccount.js","components/Layout/navbar.js","components/home.js","components/Quiz/timer.js","components/Quiz/questionCard.js","components/Quiz/quizScreen.js","App.js","reportWebVitals.js","index.js"],"names":["Login","useState","loginClicked","setLoginClicked","registerClicked","setRegisterClicked","loginContainer1","headerContainer1","inputContainer1","loginContainer2","headerContainer2","inputContainer2","className","src","alt","onClick","e","type","placeholder","name","console","log","to","Navbar","Home","Timer","props","duration","setDuration","timeOver","setTimeOver","useEffect","interval","setInterval","setShowScore","setTimeout","clearInterval","questionCard","currentQuestion","questions","prevQ","nextQ","handleAnswerOptionClick","questionText","answerOptions","map","answerOption","isCorrect","answerText","started","setStarted","setCurrentQuestion","showScore","score","setScore","length","nextQuestion","App","exact","path","component","MyAccount","Quiz","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e6f864b1.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport './app.css'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\n\r\nfunction Login() {\r\n\r\n  const [loginClicked, setLoginClicked] = useState(false);\r\n  const [registerClicked, setRegisterClicked] = useState(false);\r\n\r\n  const loginContainer1 = registerClicked ? 'login-container loginresponsive': 'login-container loginresponsive hide-login';\r\n  const headerContainer1 = registerClicked ? 'header': 'header headerHover';\r\n  const inputContainer1 = registerClicked ? 'input-container' : 'input-container hide-section';\r\n\r\n  const loginContainer2 = loginClicked ? 'login-container loginresponsive': 'login-container loginresponsive hide-login';\r\n  const headerContainer2 = loginClicked ? 'header': 'header headerHover';\r\n  const inputContainer2 = loginClicked ? 'input-container' : 'input-container hide-section';\r\n  \r\n\r\n  function handleRegisterClick(e) {\r\n    setRegisterClicked(true)\r\n    setLoginClicked(false)\r\n  }\r\n  function handleLoginClick(e) {\r\n    setRegisterClicked(false)\r\n    setLoginClicked(true)\r\n  }\r\n  \r\n\r\n  return (\r\n    <div className='body'>\r\n              <img src=\"https://image.flaticon.com/icons/png/512/2922/2922532.png\" alt=\"\" />\r\n    <p className='descriptionText'></p>\r\n      <div className={loginContainer1}>\r\n        <form className='form'>\r\n        <div className={headerContainer1} onClick={handleRegisterClick}>R E G I S T E R</div>\r\n          <div className={inputContainer1}>\r\n            <p><input type=\"text\" placeholder=\"Name\" name=\"name\" /></p>\r\n            <p><input type=\"number\" placeholder=\"Mobile Number\" name=\"mobile\" /></p>\r\n            <p className='button1'>SIGN UP</p>\r\n          </div>\r\n        </form>\r\n      </div>\r\n\r\n      <p className='descriptionText'>Already have an Account ?</p>\r\n      <div className={loginContainer2}>\r\n        <form className='form'>\r\n        <div className={headerContainer2} onClick={handleLoginClick}>L O G I N</div>\r\n          <div className={inputContainer2}>\r\n            <p><input type=\"number\" placeholder=\"Mobile number\" name=\"mobile\" /></p>\r\n            <p><input type=\"password\" placeholder=\"Enter OTP\" name=\"otp\" /></p>\r\n            <p className='button1'>SIGN IN</p>\r\n          </div>\r\n          <div onClick={() => console.log(5)}>Hello</div>\r\n          <Link to='/goto' className=\"brand-logo left\">NE Plan</Link>\r\n\r\n        </form>\r\n      </div>\r\n      \r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './navbar.css'\r\n\r\nfunction Navbar() {\r\n   \r\n    return (\r\n        <nav className=\"navContainer\">\r\n            <Link to='/myAccount' className=\"navLinks\">My Account</Link>\r\n            <Link to='/Quiz' className=\"navLinks\">Quiz</Link>\r\n        </nav>\r\n    )\r\n}\r\n\r\n\r\nexport default Navbar","import { NavLink } from 'react-router-dom';\r\n\r\nfunction Home() {\r\n    return (\r\n        <div>\r\n            <h1>WahniHome</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nfunction Timer(props) {\r\n\r\n    const [duration, setDuration] = useState(30);\r\n    const [timeOver, setTimeOver] = useState(false);\r\n\r\n    useEffect(() => {\r\n       \r\n            const interval = setInterval(() => {\r\n                if (!timeOver) {\r\n                    setDuration(duration => duration - 1);\r\n\r\n                } else {\r\n                    setDuration('TIME OUT')\r\n                    props.setShowScore(true)\r\n                }\r\n    \r\n              }, 1000);\r\n\r\n              setTimeout(\r\n                  () => {\r\n                      setTimeOver(true)\r\n                      console.log('timeout set')\r\n                  }\r\n                , 30000);\r\n            return () => clearInterval(interval);\r\n        \r\n      }, [timeOver]);\r\n\r\n    const [started, setStarted] = useState(false);\r\n\r\n    \r\n\r\n\r\n  return (\r\n   \r\n    <div>\r\n        {duration}\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default Timer;\r\n","import React from 'react'\r\n\r\nfunction questionCard(props) {\r\n\r\n    const {currentQuestion, questions, prevQ, nextQ, handleAnswerOptionClick} = props\r\n\r\n    return (\r\n        <div>\r\n            <div className='question-section'>\r\n                <div className='question-count'>\r\n                    <span>Question {currentQuestion + 1}</span>/5\r\n                </div>\r\n                <div className='question-text'>{questions.questionText}</div>\r\n            </div>\r\n            <div className='answer-section'>\r\n                {questions.answerOptions.map((answerOption) => (\r\n                    <button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\r\n                ))}\r\n            </div>\r\n\r\n            <div>\r\n                <div onClick={prevQ}>Go back</div>\r\n                <div onClick={nextQ}>Next</div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default questionCard;\r\n","import { NavLink } from 'react-router-dom';\r\nimport React, {useState, useEffect} from 'react';\r\nimport './quizScreen.css';\r\nimport Timer from './timer';\r\nimport QuestionCard from './questionCard'\r\n\r\nfunction Home() {\r\n\r\n    \r\n\r\n    const [started, setStarted] = useState(false);\r\n\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n\tconst [showScore, setShowScore] = useState(false);\r\n\tconst [score, setScore] = useState(0);\r\n\r\n    const questions = [\r\n\t\t{\r\n\t\t\tquestionText: 'What is the capital of France?',\r\n\t\t\tanswerOptions: [\r\n\t\t\t\t{ answerText: 'New York', isCorrect: false },\r\n\t\t\t\t{ answerText: 'London', isCorrect: false },\r\n\t\t\t\t{ answerText: 'Paris', isCorrect: true },\r\n\t\t\t\t{ answerText: 'Dublin', isCorrect: false },\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\tquestionText: 'Who is CEO of Tesla?',\r\n\t\t\tanswerOptions: [\r\n\t\t\t\t{ answerText: 'Jeff Bezos', isCorrect: false },\r\n\t\t\t\t{ answerText: 'Elon Musk', isCorrect: true },\r\n\t\t\t\t{ answerText: 'Bill Gates', isCorrect: false },\r\n\t\t\t\t{ answerText: 'Tony Stark', isCorrect: false },\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\tquestionText: 'The iPhone was created by which company?',\r\n\t\t\tanswerOptions: [\r\n\t\t\t\t{ answerText: 'Apple', isCorrect: true },\r\n\t\t\t\t{ answerText: 'Intel', isCorrect: false },\r\n\t\t\t\t{ answerText: 'Amazon', isCorrect: false },\r\n\t\t\t\t{ answerText: 'Microsoft', isCorrect: false },\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\tquestionText: 'How many Harry Potter books are there?',\r\n\t\t\tanswerOptions: [\r\n\t\t\t\t{ answerText: '1', isCorrect: false },\r\n\t\t\t\t{ answerText: '4', isCorrect: false },\r\n\t\t\t\t{ answerText: '6', isCorrect: false },\r\n\t\t\t\t{ answerText: '7', isCorrect: true },\r\n\t\t\t],\r\n\t\t},\r\n\t];\r\n\r\n\t\r\n\r\n\tconst handleAnswerOptionClick = (isCorrect) => {\r\n\r\n\t\tif (isCorrect) {\r\n\t\t\tsetScore(score + 1);\r\n\t\t}\r\n\r\n\t\tconst nextQuestion = currentQuestion + 1;\r\n\t\tif (nextQuestion < questions.length) {\r\n\t\t\tsetCurrentQuestion(nextQuestion);\r\n\t\t} else {\r\n\t\t\tsetShowScore(true);\r\n        }\r\n        \r\n    };\r\n\r\n    function nextQ() { \r\n        const nextQuestion = currentQuestion + 1;\r\n        if (nextQuestion < questions.length) {\r\n\t\t\tsetCurrentQuestion(nextQuestion);\r\n\t\t} else {\r\n\t\t\tsetShowScore(true);\r\n\t\t}\r\n    }\r\n    function prevQ() {\r\n        if (currentQuestion > 0) {\r\n            const nextQuestion = currentQuestion - 1;\r\n        setCurrentQuestion(nextQuestion);\r\n        }\r\n        \r\n\r\n    }\r\n    \r\n    if (started) {\r\n        return (\r\n        \r\n            <div className='app'>\r\n                {showScore ? (\r\n                    <div className='score-section'>\r\n                        You scored {score} out of {questions.length}\r\n                    </div>\r\n                ) : (\r\n                    <div>\r\n                        {/* <div className='question-section'>\r\n                            <div className='question-count'>\r\n                                <span>Question {currentQuestion + 1}</span>/{questions.length}\r\n                            </div>\r\n                            <div className='question-text'>{questions[currentQuestion].questionText}</div>\r\n                        </div>\r\n                        <div className='answer-section'>\r\n                            {questions[currentQuestion].answerOptions.map((answerOption) => (\r\n                                <button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\r\n                            ))}\r\n                        </div>\r\n\r\n                                <div>\r\n                        <div onClick={prevQ}>Go back</div>\r\n                        <div onClick={nextQ}>Next</div>\r\n                        </div> */}\r\n\r\n                        <QuestionCard \r\n                            currentQuestion={currentQuestion} \r\n                            questions={questions[currentQuestion]} \r\n                            handleAnswerOptionClick={handleAnswerOptionClick} \r\n                            prevQ={prevQ} \r\n                            nextQ={nextQ} />\r\n\r\n                    </div>\r\n                )}\r\n                <Timer setShowScore={setShowScore} showScore={showScore} />\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div>\r\n\r\n            <button onClick={() => setStarted(true)}>\r\n                START\r\n            </button>\r\n            \r\n            <button>\r\n                RANKINGS\r\n            </button>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\t\r\n}\r\n\r\nexport default Home;\r\n","import MyAccount from './components/Registration/myAccount'\nimport { BrowserRouter, Switch, Route, HashRouter } from 'react-router-dom';\nimport Navbar from './components/Layout/navbar'\nimport Home from './components/home'\nimport Quiz from './components/Quiz/quizScreen'\n\n\n\nfunction App() {\n  return (\n    <HashRouter>\n    <Navbar />\n    <Switch>\n            <Route exact path='/' component={Home} />\n            <Route exact path='/myAccount' component={MyAccount} />\n            <Route exact path='/Quiz' component={Quiz} />\n          </Switch>\n    </HashRouter>\n        \n    \n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}