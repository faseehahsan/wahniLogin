{"version":3,"sources":["components/context/user1Context.js","components/Registration/myAccount.js","components/Layout/navbar.js","components/home.js","components/Quiz/timer.js","components/Quiz/questionCard.js","components/Quiz/quizPlay.js","components/Quiz/quizScreen.js","components/Ranking/rankingScreen.js","App.js","reportWebVitals.js","index.js"],"names":["UserContext","React","createContext","UserProvider","Provider","Consumer","UserContextProvider","props","useState","loggedIn","mobile","name","id","dp","user","value","children","Login","useContext","loginClicked","setLoginClicked","registerClicked","setRegisterClicked","loginContainer1","headerContainer1","inputContainer1","loginContainer2","headerContainer2","inputContainer2","className","src","alt","onClick","e","type","placeholder","Navbar","to","Home","Timer","duration","setDuration","timeOver","setTimeOver","useEffect","interval","setInterval","setTimeout","clearInterval","QuestionCard","currentQuestion","questions","prevQ","nextQ","submitQ","numberOfQ","selectedAnswer","setSelectedAnswer","correctAnswer","setCorrectAnswer","selectedTrue","clickedAnswer","indexure","filter","data","length","questionText","answerOptions","map","answerOption","answerText","answer","isCorrect","newArray","newArray1","newSelectedAnswerArray","setCurrentQuestion","showScore","setShowScore","score","setScore","nextQuestion","RankingScreen","rankings","userid","username","scores","submittedAt","percentageIncrease","logoutClicked","setLogoutClicked","topScores","setTopScores","mostAttempts","setMostAttempts","highestPercentage","setHighestPercentage","rankTable1","rankTable2","loginContainer3","headerContainer3","rankTable3","data1","push","sort","a","b","parseInt","topScore","slice","index","attempts","mostAttempt","percentage","percentageHighest","App","exact","path","component","MyAccount","Quiz","QuizPlay","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fd5940f0.chunk.js","sourcesContent":["import React, { useContext, useEffect, useCallback, useState } from 'react';\r\n\r\n\r\nconst defaultUser = { loggedIn: false, email: \"\" };\r\nexport const UserContext = React.createContext({});\r\n\r\nconst UserProvider = UserContext.Provider;\r\nconst UserConsumer = UserContext.Consumer;\r\n\r\n// function onAuthStateChange(callback) {\r\n// make sure user register or login\r\n// }\r\n\r\n  // user is added or logged in and sent to all the components of this site through this context\r\n\r\n\r\nexport function UserContextProvider(props) {\r\n  const [user, setUser] = useState({ loggedIn: true, mobile: '+9145665524', name: 'USER', id: 'adssda6546d8f', dp: 'www.sasad.asdsa.sdasd/' });\r\n\r\n  // on useEffect user is authorized and user details are set and sent via context API to all components\r\n  \r\n  return (\r\n    <UserProvider value={user}>\r\n    {props.children}      \r\n    </UserProvider>\r\n  );\r\n}\r\n\r\n","import React, { useState, useContext} from 'react';\r\nimport { UserContext } from '../context/user1Context';\r\nimport Profile from '../Profile/profile'\r\n\r\n\r\nimport './app.css'\r\n\r\n\r\nfunction Login() {\r\n\r\n  // confirm if user is available\r\n  const user = useContext(UserContext);\r\n\r\n\r\n  const userLoggedIn = false //for test purposes\r\n\r\n  const [loginClicked, setLoginClicked] = useState(false);\r\n  const [registerClicked, setRegisterClicked] = useState(false);\r\n\r\n  const loginContainer1 = registerClicked ? 'login-container loginresponsive': 'login-container loginresponsive hide-login';\r\n  const headerContainer1 = registerClicked ? 'header': 'header headerHover';\r\n  const inputContainer1 = registerClicked ? 'input-container' : 'input-container hide-section';\r\n\r\n  const loginContainer2 = loginClicked ? 'login-container loginresponsive': 'login-container loginresponsive hide-login';\r\n  const headerContainer2 = loginClicked ? 'header': 'header headerHover';\r\n  const inputContainer2 = loginClicked ? 'input-container' : 'input-container hide-section';\r\n  \r\n\r\n  function handleRegisterClick(e) {\r\n    setRegisterClicked(true)\r\n    setLoginClicked(false)\r\n  }\r\n  function handleLoginClick(e) {\r\n    setRegisterClicked(false)\r\n    setLoginClicked(true)\r\n  }\r\n\r\n  // if user is logged in we show profile else we show register or login page\r\n\r\n  if (!userLoggedIn) {\r\n    return (\r\n      <div className='body'>\r\n                <img src=\"https://image.flaticon.com/icons/png/512/2922/2922532.png\" alt=\"\" />\r\n      <p className='descriptionText'></p>\r\n        <div className={loginContainer1}>\r\n          <form className='form'>\r\n          <div className={headerContainer1} onClick={handleRegisterClick}>R E G I S T E R</div>\r\n            <div className={inputContainer1}>\r\n              <p><input type=\"text\" placeholder=\"Name\" name=\"name\" /></p>\r\n              <p><input type=\"number\" placeholder=\"Mobile Number\" name=\"mobile\" /></p>\r\n              <p className='button1'>SIGN UP</p>\r\n            </div>\r\n          </form>\r\n        </div>\r\n  \r\n        <p className='descriptionText'>Already have an Account ?</p>\r\n        <div className={loginContainer2}>\r\n          <form className='form'>\r\n          <div className={headerContainer2} onClick={handleLoginClick}>L O G I N</div>\r\n            <div className={inputContainer2}>\r\n              <p><input type=\"number\" placeholder=\"Mobile number\" name=\"mobile\" /></p>\r\n              <p><input type=\"password\" placeholder=\"Enter OTP\" name=\"otp\" /></p>\r\n              <p className='button1'>SIGN IN</p>\r\n            </div>\r\n  \r\n          </form>\r\n        </div>\r\n        \r\n      </div>\r\n  \r\n    );\r\n  } else {\r\n    return(\r\n      <div>\r\n      <Profile user={user} />\r\n      </div>\r\n    )\r\n  }\r\n  \r\n\r\n  \r\n}\r\n\r\nexport default Login;\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './navbar.css'\r\n\r\nfunction Navbar() {\r\n   \r\n    return (\r\n        <div>\r\n        <nav className=\"navContainer\">\r\n            <Link to='/myAccount' className=\"navLinks\">My Account</Link>\r\n            <Link to='/Quiz' className=\"navLinks\">Quiz</Link>\r\n        </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Navbar","import React, { useState, useContext} from 'react';\r\nimport { UserContext } from './context/user1Context';\r\n\r\n\r\nfunction Home() {\r\n    const user = useContext(UserContext);\r\n\r\n    return (\r\n        <div>\r\n            <h1>WahniHome</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nfunction Timer(props) {\r\n\r\n    const [duration, setDuration] = useState(30);\r\n\r\n    const { timeOver, setTimeOver } = props;\r\n\r\n    useEffect(() => {\r\n       \r\n            const interval = setInterval(() => {\r\n                if (!timeOver) {\r\n                    setDuration(duration => duration - 1);\r\n                }\r\n    \r\n              }, 1000);\r\n\r\n              setTimeout(\r\n                  () => {\r\n                      setTimeOver(true)\r\n                      setDuration('TIME OUT')\r\n                        }\r\n                , 30000);\r\n\r\n            return () => clearInterval(interval);\r\n        \r\n      }, [timeOver]);\r\n\r\n    const [started, setStarted] = useState(false);\r\n\r\n  return (\r\n   \r\n    <div>\r\n        {duration}\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default Timer;\r\n","import React, { useState } from 'react'\r\nimport Timer from './timer';\r\n\r\n\r\nfunction QuestionCard(props) {\r\n\r\n    const { currentQuestion, questions, prevQ, nextQ, submitQ, numberOfQ } = props\r\n\r\n    const [selectedAnswer, setSelectedAnswer] = useState([]);\r\n    const [correctAnswer, setCorrectAnswer] = useState([]);\r\n\r\n    const [timeOver, setTimeOver] = useState(false);\r\n\r\n\r\n\r\n    function selectedTrue(clickedAnswer, indexure) {\r\n        if (clickedAnswer === selectedAnswer[indexure]) {\r\n            return 'button-selected'\r\n        }\r\n    }\r\n\r\n    function newSelectedAnswerArray(answer, indexure, isCorrect) {\r\n        const newArray = [...selectedAnswer];\r\n        newArray[indexure] = answer;\r\n        setSelectedAnswer(newArray)\r\n\r\n        const newArray1 = [...correctAnswer];\r\n        newArray1[indexure] = isCorrect;\r\n        setCorrectAnswer(newArray1)\r\n    }\r\n\r\n\r\n    if (timeOver) {\r\n        return (\r\n            \r\n            <div className='timeout'>\r\n\r\n                    <div className='score-header'>TIMEOUT !!!</div>\r\n                    \r\n                    <div>\r\n                        <div className='button1' onClick={() => submitQ(correctAnswer.filter(data => data === true).length)}>Click to see Score</div>\r\n\r\n                    </div>\r\n                    </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className='question-container'>\r\n                <div className='question-section'>\r\n                    <div className='question-count-timer'>\r\n                    <div className='question-count'>\r\n                    <span>Question {currentQuestion + 1}</span>/ {numberOfQ}\r\n                    </div>\r\n                        <div className='timer'>\r\n                        <Timer timeOver={timeOver} setTimeOver={setTimeOver} />\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className='question-text'>{questions.questionText}</div>\r\n                </div>\r\n                <div className='answer-section'>\r\n                    {questions.answerOptions.map((answerOption) => (\r\n                        <button className={selectedTrue(answerOption.answerText, currentQuestion)} id='answerButton' onClick={() => {\r\n                            newSelectedAnswerArray(answerOption.answerText, currentQuestion, answerOption.isCorrect);\r\n                        }}>\r\n                            {answerOption.answerText}\r\n                        </button>\r\n                    ))}\r\n                </div>\r\n\r\n                <div className='submitButtonContainer'>\r\n                    <div className='submitButton' onClick={() => submitQ(correctAnswer.filter(data => data === true).length)}>Submit</div>\r\n                </div>\r\n\r\n                <div className='next-and-prev-buttonsContainer'>\r\n                    <div className='button1' onClick={prevQ}>Go back</div>\r\n                    <div className='button1' onClick={nextQ}>Next</div>\r\n                </div>\r\n\r\n                \r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default QuestionCard;\r\n","import { Redirect, Link } from 'react-router-dom';\r\nimport React, {useState, useContext } from 'react';\r\nimport { UserContext } from '../context/user1Context';\r\nimport './quizScreen.css';\r\nimport QuestionCard from './questionCard'\r\n\r\nfunction Home() {\r\n\r\n    // inside useEffect we use fetch API to call in the questions and save in const questions\r\n\r\n    // useEffect(() => {\r\n    //     effect\r\n    //     return () => {\r\n    //         cleanup\r\n    //     }\r\n    // }, [input])\r\n\r\n    // useContext is used to confirm if a user is loggedIn\r\n    const user = useContext(UserContext);\r\n\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n    const [showScore, setShowScore] = useState(false);\r\n    \r\n    const [score, setScore] = useState(0);    \r\n    \r\n    // receive score hsitory from backend to send both score and percentage increase to backend for rankings\r\n\r\n    const questions = [\r\n\t\t{\r\n\t\t\tquestionText: 'What is the capital of France?',\r\n\t\t\tanswerOptions: [\r\n\t\t\t\t{ answerText: 'New York', isCorrect: false },\r\n\t\t\t\t{ answerText: 'London', isCorrect: false },\r\n\t\t\t\t{ answerText: 'Paris', isCorrect: true },\r\n\t\t\t\t{ answerText: 'Dublin', isCorrect: false },\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\tquestionText: 'Who is CEO of Tesla?',\r\n\t\t\tanswerOptions: [\r\n\t\t\t\t{ answerText: 'Jeff Bezos', isCorrect: false },\r\n\t\t\t\t{ answerText: 'Elon Musk', isCorrect: true },\r\n\t\t\t\t{ answerText: 'Bill Gates', isCorrect: false },\r\n\t\t\t\t{ answerText: 'Tony Stark', isCorrect: false },\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\tquestionText: 'The iPhone was created by which company?',\r\n\t\t\tanswerOptions: [\r\n\t\t\t\t{ answerText: 'Apple', isCorrect: true },\r\n\t\t\t\t{ answerText: 'Intel', isCorrect: false },\r\n\t\t\t\t{ answerText: 'Amazon', isCorrect: false },\r\n\t\t\t\t{ answerText: 'Microsoft', isCorrect: false },\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\tquestionText: 'How many Harry Potter books are there?',\r\n\t\t\tanswerOptions: [\r\n\t\t\t\t{ answerText: '1', isCorrect: false },\r\n\t\t\t\t{ answerText: '4', isCorrect: false },\r\n\t\t\t\t{ answerText: '6', isCorrect: false },\r\n\t\t\t\t{ answerText: '7', isCorrect: true },\r\n\t\t\t],\r\n\t\t},\r\n\t];\r\n\r\n\t\r\n\r\n\r\n    function nextQ() { \r\n        const nextQuestion = currentQuestion + 1;\r\n        if (nextQuestion < questions.length) {\r\n\t\t\tsetCurrentQuestion(nextQuestion);\r\n\t\t}\r\n    }\r\n    function prevQ() {\r\n        if (currentQuestion > 0) {\r\n            const nextQuestion = currentQuestion - 1;\r\n        setCurrentQuestion(nextQuestion);\r\n        }\r\n    }\r\n\r\n    function submitQ(score) {\r\n        setShowScore(true);\r\n        setScore(score)\r\n\r\n        // score with user id is sent to backEnd to store with new Date()\r\n    }\r\n\r\n    // if there is no user logged in this is redirected to myAccount for login or register\r\n\r\n    if (!user) return <Redirect to='/myAccount' />\r\n\r\n    if (user) {\r\n        return (\r\n        <div className='appContainer'>\r\n                {showScore ? (\r\n                    <div className='app score'>\r\n                    <div className='score-header'>Congratulations !!!</div>\r\n                    <div className='score-message'>\r\n                    You scored {score} out of {questions.length}\r\n                    </div>\r\n                    <div>\r\n                        <Link className='link button1' to='/Quiz'>Retry</Link>\r\n                    </div>\r\n                    </div>\r\n\r\n                ) : (\r\n                    <div className='app'>\r\n                        <QuestionCard \r\n                            currentQuestion={currentQuestion} \r\n                            questions={questions[currentQuestion]} \r\n                            prevQ={prevQ} \r\n                            nextQ={nextQ}\r\n                            submitQ={submitQ}\r\n                            numberOfQ={questions.length} />\r\n                    </div>\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n\t\r\n}\r\n\r\nexport default Home;\r\n","import { Link } from 'react-router-dom';\r\nimport React from 'react';\r\nimport './quizScreen.css';\r\n\r\nfunction Home() {\r\n    \r\n\r\n        return (\r\n            <div className='appContainer'>\r\n            <div className='quizScreenContainer'>\r\n            \r\n            \r\n            <Link className='quizNavContainer link' to='/Quiz/play'>\r\n            <img src=\"https://image.flaticon.com/icons/png/512/27/27223.png\" alt=\"\" />\r\n            <div className='quizScreenText'>PLAY</div>\r\n            </Link>\r\n\r\n            <Link className='quizNavContainer link' to='/Quiz/ranking'>\r\n            <img src=\"https://image.flaticon.com/icons/png/512/13/13815.png\" alt=\"\" />\r\n            <div className='quizScreenText'>RANKINGS</div>\r\n            </Link>\r\n\r\n            \r\n            </div>\r\n            </div>\r\n        )\r\n    \r\n\t\r\n}\r\n\r\nexport default Home;\r\n","import React, { useState } from 'react'\r\nimport './rankingScreen.css'\r\nimport '../Registration/app.css'\r\n\r\nfunction RankingScreen() {\r\n\r\n    // receive scores from backend\r\n\r\n    const rankings = [\r\n        {\r\n            userid: '11111',\r\n            username: 'AAAAA',\r\n            scores: [\r\n                {\r\n                    submittedAt: 1,\r\n                    score: '5',\r\n                    percentageIncrease: '25'\r\n\r\n                },\r\n                {\r\n                    submittedAt: 2,\r\n                    score: '10',\r\n                    percentageIncrease: '50'\r\n\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            userid: '22222',\r\n            username: 'BBBBB',\r\n            scores: [\r\n                {\r\n                    submittedAt: 1,\r\n                    score: '45',\r\n                    percentageIncrease: '56'\r\n\r\n                },\r\n                {\r\n                    submittedAt: 2,\r\n                    score: '5',\r\n                    percentageIncrease: '45'\r\n\r\n                },\r\n            ]\r\n        },\r\n        {\r\n            userid: '33333',\r\n            username: 'CCCCC',\r\n            scores: [\r\n                {\r\n                    submittedAt: 1,\r\n                    score: '23',\r\n                    percentageIncrease: '45'\r\n\r\n                },\r\n                {\r\n                    submittedAt: 2,\r\n                    score: '56',\r\n                    percentageIncrease: '13'\r\n\r\n                },\r\n            ]\r\n        },\r\n        {\r\n            userid: '44444',\r\n            username: 'DDDDD',\r\n            scores: [\r\n                {\r\n                    submittedAt: 1,\r\n                    score: '55',\r\n                    percentageIncrease: '12'\r\n                },\r\n                {\r\n                    submittedAt: 2,\r\n                    score: '8',\r\n                    percentageIncrease: '16'\r\n\r\n                },\r\n            ]\r\n        },\r\n        {\r\n            userid: '55555',\r\n            username: 'EEEEE',\r\n            scores: [\r\n                {\r\n                    submittedAt: 1,\r\n                    score: '63',\r\n                    percentageIncrease: '32'\r\n                },\r\n                {\r\n                    submittedAt: 2,\r\n                    score: '80',\r\n                    percentageIncrease: '60'\r\n                },\r\n            ]\r\n        },\r\n\r\n    ]\r\n   \r\n    const [loginClicked, setLoginClicked] = useState(false);\r\n    const [registerClicked, setRegisterClicked] = useState(false);\r\n    const [logoutClicked, setLogoutClicked] = useState(false);\r\n    \r\n    const [topScores, setTopScores] = useState([]);\r\n    const [mostAttempts, setMostAttempts] = useState([]);\r\n    const [highestPercentage, setHighestPercentage] = useState([]);\r\n  \r\n    const loginContainer1 = registerClicked ? 'login-container loginresponsive': 'login-container loginresponsive hide-login';\r\n    const headerContainer1 = registerClicked ? 'header': 'header headerHover';\r\n    const rankTable1 = registerClicked ? 'rankTable' : 'rankTable hide-section';\r\n  \r\n    const loginContainer2 = loginClicked ? 'login-container loginresponsive': 'login-container loginresponsive hide-login';\r\n    const headerContainer2 = loginClicked ? 'header': 'header headerHover';\r\n    const rankTable2 = loginClicked ? 'rankTable' : 'rankTable hide-section';\r\n\r\n    const loginContainer3 = logoutClicked ? 'login-container loginresponsive': 'login-container loginresponsive hide-login';\r\n    const headerContainer3 = logoutClicked ? 'header': 'header headerHover';\r\n    const rankTable3 = logoutClicked ? 'rankTable' : 'rankTable hide-section';\r\n    \r\n    function topScore() {\r\n        const newArray = [];\r\n        rankings.map(data => {\r\n            data.scores.map(data1 => {\r\n                newArray.push(\r\n                    {\r\n                        name: data.username,\r\n                        score: data1.score\r\n                    }\r\n                )\r\n            })\r\n        })\r\n        setTopScores(newArray.sort((a,b) => (parseInt(b.score) > parseInt(a.score)) ? 1 : -1))\r\n    }\r\n\r\n    function mostAttempt() {\r\n        const newArray = [];\r\n        rankings.map(data => newArray.push({\r\n            name: data.username,\r\n            attempts: data.scores.length\r\n        }))\r\n        setMostAttempts(newArray.sort((a,b) => (parseInt(b.attempts) > parseInt(a.attempts)) ? 1 : -1))\r\n    }\r\n\r\n    function percentageHighest() {\r\n        const newArray = [];\r\n        rankings.map(data => {\r\n            data.scores.map(data1 => {\r\n                newArray.push(\r\n                    {\r\n                        name: data.username,\r\n                        percentage: data1.percentageIncrease\r\n                    }\r\n                )\r\n            })\r\n        })\r\n        setHighestPercentage(newArray.sort((a,b) => (parseInt(b.percentage) > parseInt(a.percentage)) ? 1 : -1))\r\n    }\r\n\r\n    function handleRegisterClick(e) {\r\n      setRegisterClicked(true)\r\n      setLoginClicked(false)\r\n      setLogoutClicked(false)\r\n      topScore()\r\n    }\r\n    function handleLoginClick(e) {\r\n      setRegisterClicked(false)\r\n      setLogoutClicked(false)\r\n      setLoginClicked(true)\r\n      mostAttempt()\r\n    }\r\n    function handleLogoutClick(e) {\r\n      setRegisterClicked(false)\r\n      setLogoutClicked(true)\r\n      setLoginClicked(false)\r\n      percentageHighest()\r\n    }\r\n  \r\n    // if user is logged in we show profile else we show register or login page\r\n  \r\n    \r\n      return (\r\n        <div className='body'>\r\n          <div className={loginContainer1}>\r\n            <div className='form'>\r\n            <div className={headerContainer1} onClick={handleRegisterClick}>TOP SCORES</div>\r\n              <div className={rankTable1}>\r\n              <div className='singleInputContainer headContainer'>\r\n                  <div className='rankText text'>Rank</div>\r\n                  <div className='nameText text'>Name</div>\r\n                  <div className='scoreText text'>Score</div>\r\n                  </div>\r\n              \r\n                  {\r\n                      topScores.slice(0,5).map((data, index) => {\r\n                          return (\r\n                <div className='singleInputContainer'>\r\n                  <div className='rankText text'>{index + 1}</div>\r\n                  <div className='nameText text'>{data.name}</div>\r\n                  <div className='scoreText text'>{data.score}</div>\r\n                  \r\n                  </div>\r\n                          )\r\n                      })\r\n                  }\r\n              </div>\r\n            </div>\r\n\r\n\r\n          </div>\r\n          <div className={loginContainer2}>\r\n            <div className='form'>\r\n            <div className={headerContainer2} onClick={handleLoginClick}>MOST ATTEMPTS</div>\r\n              <div className={rankTable2}>\r\n              <div className='singleInputContainer headContainer'>\r\n                  <div className='rankText text'>Rank</div>\r\n                  <div className='nameText text'>Name</div>\r\n                  <div className='scoreText text'>Attempts</div>\r\n                  </div>\r\n                  {\r\n                      mostAttempts.slice(0,5).map((data, index) => {\r\n                          return (\r\n                <div className='singleInputContainer'>\r\n                  <div className='rankText text'>{index + 1}</div>\r\n                  <div className='nameText text'>{data.name}</div>\r\n                  <div className='scoreText text'>{data.attempts}</div>\r\n                  \r\n                  </div>\r\n                          )\r\n                      })\r\n                  }\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className={loginContainer3}>\r\n            <div className='form'>\r\n            <div className={headerContainer3} onClick={handleLogoutClick}>TOP PERFORMERS</div>\r\n              <div className={rankTable3}>\r\n              <div className='singleInputContainer headContainer'>\r\n                  <div className='rankText text'>Rank</div>\r\n                  <div className='nameText text'>Name</div>\r\n                  <div className='scoreText text'>% increase</div>\r\n                  </div>\r\n                  {\r\n                      highestPercentage.slice(0,5).map((data, index) => {\r\n                          return (\r\n                <div className='singleInputContainer'>\r\n                  <div className='rankText text'>{index + 1}</div>\r\n                  <div className='nameText text'>{data.name}</div>\r\n                  <div className='scoreText text'>{data.percentage}</div>\r\n                  \r\n                  </div>\r\n                          )\r\n                      })\r\n                  }\r\n              </div>\r\n            </div>\r\n          </div>\r\n    \r\n          \r\n        </div>\r\n    \r\n      );\r\n}\r\n\r\n\r\nexport default RankingScreen","import MyAccount from './components/Registration/myAccount'\nimport { BrowserRouter, Switch, Route, HashRouter } from 'react-router-dom';\nimport Navbar from './components/Layout/navbar'\nimport Home from './components/home'\nimport QuizPlay from './components/Quiz/quizPlay'\nimport Quiz from './components/Quiz/quizScreen'\nimport RankingScreen from './components/Ranking/rankingScreen'\nimport { UserContextProvider } from './components/context/user1Context';\n\n\n\n\nfunction App() {\n  return (\n    \n    <HashRouter>\n      <Navbar />\n      <Switch>\n      <UserContextProvider>\n        <Route exact path='/' component={Home} />\n          <Route exact path='/myAccount' component={MyAccount} />\n          <Route exact path='/Quiz' component={Quiz} />\n          <Route exact path='/Quiz/play' component={QuizPlay} />\n          <Route exact path='/Quiz/ranking' component={RankingScreen} />\n        </UserContextProvider>\n      </Switch>\n    </HashRouter>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}